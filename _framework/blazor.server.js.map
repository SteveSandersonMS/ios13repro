{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr-protocol-msgpack/dist/esm/BinaryMessageFormat.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr-protocol-msgpack/dist/esm/MessagePackHubProtocol.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr-protocol-msgpack/dist/esm/Utils.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr-protocol-msgpack/dist/esm/index.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr-protocol-msgpack/node_modules/bl/bl.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr-protocol-msgpack/node_modules/core-util-is/lib/util.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr-protocol-msgpack/node_modules/inherits/inherits_browser.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr-protocol-msgpack/node_modules/isarray/index.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr-protocol-msgpack/node_modules/msgpack5/index.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr-protocol-msgpack/node_modules/msgpack5/lib/decoder.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr-protocol-msgpack/node_modules/msgpack5/lib/encoder.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr-protocol-msgpack/node_modules/msgpack5/lib/streams.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr-protocol-msgpack/node_modules/process-nextick-args/index.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr-protocol-msgpack/node_modules/readable-stream/duplex-browser.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr-protocol-msgpack/node_modules/readable-stream/lib/_stream_duplex.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr-protocol-msgpack/node_modules/readable-stream/lib/_stream_passthrough.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr-protocol-msgpack/node_modules/readable-stream/lib/_stream_readable.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr-protocol-msgpack/node_modules/readable-stream/lib/_stream_transform.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr-protocol-msgpack/node_modules/readable-stream/lib/_stream_writable.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr-protocol-msgpack/node_modules/readable-stream/lib/internal/streams/BufferList.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr-protocol-msgpack/node_modules/readable-stream/lib/internal/streams/destroy.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr-protocol-msgpack/node_modules/readable-stream/lib/internal/streams/stream-browser.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr-protocol-msgpack/node_modules/readable-stream/readable-browser.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr-protocol-msgpack/node_modules/safe-buffer/index.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr-protocol-msgpack/node_modules/util-deprecate/browser.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr/dist/esm/AbortController.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr/dist/esm/DefaultHttpClient.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr/dist/esm/DefaultReconnectPolicy.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr/dist/esm/Errors.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr/dist/esm/HandshakeProtocol.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr/dist/esm/HttpClient.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr/dist/esm/HttpConnection.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr/dist/esm/HubConnection.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr/dist/esm/HubConnectionBuilder.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr/dist/esm/IHubProtocol.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr/dist/esm/ILogger.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr/dist/esm/ITransport.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr/dist/esm/JsonHubProtocol.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr/dist/esm/Loggers.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr/dist/esm/LongPollingTransport.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr/dist/esm/NodeHttpClient.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr/dist/esm/ServerSentEventsTransport.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr/dist/esm/Subject.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr/dist/esm/TextMessageFormat.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr/dist/esm/Utils.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr/dist/esm/WebSocketTransport.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr/dist/esm/XhrHttpClient.js","webpack:////Users/Jimmy/websharp/projects/AspNetCore/src/SignalR/clients/ts/signalr/dist/esm/index.js","webpack:///../node_modules/@dotnet/jsinterop/dist/Microsoft.JSInterop.js","webpack:///../node_modules/assert/assert.js","webpack:///../node_modules/base64-js/index.js","webpack:///../node_modules/buffer/index.js","webpack:///../node_modules/events/events.js","webpack:///../node_modules/ieee754/index.js","webpack:///../node_modules/isarray/index.js","webpack:///../node_modules/process/browser.js","webpack:///../node_modules/safe-buffer/index.js","webpack:///../node_modules/setimmediate/setImmediate.js","webpack:///../node_modules/string_decoder/lib/string_decoder.js","webpack:///../node_modules/timers-browserify/main.js","webpack:///../node_modules/util/node_modules/inherits/inherits_browser.js","webpack:///../node_modules/util/support/isBufferBrowser.js","webpack:///../node_modules/util/util.js","webpack:///../node_modules/webpack/buildin/global.js","webpack:///./Boot.Server.ts","webpack:///./BootCommon.ts","webpack:///./Environment.ts","webpack:///./GlobalExports.ts","webpack:///./Platform/Circuits/BlazorOptions.ts","webpack:///./Platform/Circuits/CircuitManager.ts","webpack:///./Platform/Circuits/DefaultReconnectDisplay.ts","webpack:///./Platform/Circuits/DefaultReconnectionHandler.ts","webpack:///./Platform/Circuits/RenderQueue.ts","webpack:///./Platform/Circuits/UserSpecifiedDisplay.ts","webpack:///./Platform/Logging/Logger.ts","webpack:///./Platform/Logging/Loggers.ts","webpack:///./Rendering/BrowserRenderer.ts","webpack:///./Rendering/ElementReferenceCapture.ts","webpack:///./Rendering/EventDelegator.ts","webpack:///./Rendering/EventFieldInfo.ts","webpack:///./Rendering/EventForDotNet.ts","webpack:///./Rendering/LogicalElements.ts","webpack:///./Rendering/RenderBatch/OutOfProcessRenderBatch.ts","webpack:///./Rendering/RenderBatch/RenderBatch.ts","webpack:///./Rendering/RenderBatch/Utf8Decoder.ts","webpack:///./Rendering/Renderer.ts","webpack:///./Rendering/RendererEventDispatcher.ts","webpack:///./Services/Http.ts","webpack:///./Services/NavigationManager.ts","webpack:///util (ignored)","webpack:///util (ignored)?d3a8"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,2BAA2B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC8B;AAC/B,+C;;;;;;;;;;;;ACjEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACgC;AACK;AACmD;AAC5B;AACpB;AACxC;AACA;AACA;AACA;AACA,oDAAoD,8DAAW;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iEAAc;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qBAAqB;AACpC,eAAe,QAAQ;AACvB;AACA;AACA;AACA,+BAA+B,6CAAM,OAAO,4DAAa;AACzD;AACA;AACA;AACA,qBAAqB,6DAAU;AAC/B;AACA,uBAAuB,wEAAmB;AAC1C;AACA,+CAA+C,wBAAwB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA,iBAAiB,8DAAW;AAC5B;AACA,iBAAiB,8DAAW;AAC5B;AACA,iBAAiB,8DAAW;AAC5B;AACA,iBAAiB,8DAAW;AAC5B;AACA,iBAAiB,8DAAW;AAC5B,uBAAuB,wEAAmB;AAC1C,iBAAiB,8DAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,qCAAQ;AAC9B,wCAAwC,6CAAM;AAC9C;AACA;AACA;AACA;AACA;AACA,iBAAiB,8DAAW;AAC5B;AACA,iBAAiB,8DAAW;AAC5B;AACA,iBAAiB,8DAAW;AAC5B;AACA,iBAAiB,8DAAW;AAC5B;AACA,iBAAiB,8DAAW;AAC5B;AACA;AACA;AACA,2BAA2B,2DAAQ;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,8DAAW;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,8DAAW;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8DAAW;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8DAAW;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,8DAAW;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,8DAAW;AAC7B;AACA;AACA;AACA;AACA,sBAAsB,qCAAQ;AAC9B,sCAAsC,8DAAW,4CAA4C;AAC7F;AACA,eAAe,wEAAmB;AAClC;AACA;AACA,sBAAsB,qCAAQ;AAC9B,sCAAsC,8DAAW,wDAAwD;AACzG;AACA,eAAe,wEAAmB;AAClC;AACA;AACA,sBAAsB,qCAAQ;AAC9B,sCAAsC,8DAAW,4CAA4C;AAC7F;AACA,eAAe,wEAAmB;AAClC;AACA;AACA,sBAAsB,qCAAQ;AAC9B;AACA;AACA;AACA;AACA,0CAA0C,8DAAW,4CAA4C;AACjG;AACA;AACA,0CAA0C,8DAAW,4CAA4C;AACjG;AACA;AACA,0CAA0C,8DAAW,4CAA4C;AACjG;AACA;AACA,eAAe,wEAAmB;AAClC;AACA;AACA,sBAAsB,qCAAQ;AAC9B,sCAAsC,8DAAW,wDAAwD;AACzG,eAAe,wEAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACiC;AAClC,kD;;;;;;;;;;;;AC7OA;AAAA;AAAA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;ACVA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACO;AAC2D;AAClE,iC;;;;;;;;;;;ACNA,mBAAmB,mBAAO,CAAC,mIAAwB;AACnD,mBAAmB,mBAAO,CAAC,0CAAM;AACjC,mBAAmB,mBAAO,CAAC,2GAAa;;;AAGxC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA,QAAQ,uBAAuB;AAC/B;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA,GAAG;AACH,UAAU,gBAAgB;AAC1B;AACA,GAAG;AACH;AACA,UAAU,sBAAsB;AAChC;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA,eAAe,uBAAuB;AACtC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,uBAAuB;AACzC;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA,QAAQ,uBAAuB;AAC/B;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;;;AAGD;;;;;;;;;;;;ACxRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC1GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtBA,iBAAiB;;AAEjB;AACA;AACA;;;;;;;;;;;;;ACJY;;AAEZ,aAAa,mBAAO,CAAC,2GAAa;AAClC,aAAa,mBAAO,CAAC,gDAAQ;AAC7B,SAAS,mBAAO,CAAC,sFAAI;AACrB,cAAc,mBAAO,CAAC,gHAAe;AACrC,kBAAkB,mBAAO,CAAC,gHAAe;AACzC,kBAAkB,mBAAO,CAAC,gHAAe;;AAEzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACpFA,SAAS,mBAAO,CAAC,sFAAI;AACrB,WAAW,mBAAO,CAAC,0CAAM;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,cAAc;AACvaAAa;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,0BAA0B;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC9aY;;AAEZ,aAAa,mBAAO,CAAC,2GAAa;AAClC,SAAS,mBAAO,CAAC,sFAAI;AACrB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,eAAe,0BAA0B;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wBAAwB,eAAe;AACvC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,aAAa;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC9TY;;AAEZ,gBAAgB,mBAAO,CAAC,8HAAiB;AACzC,eAAe,mBAAO,CAAC,gHAAU;AACjC,SAAS,mBAAO,CAAC,sFAAI;;AAErB;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACpFA,+CAAa;;AAEb;AACA;AACA;AACA,oBAAoB;AACpB,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;AC1CA,iBAAiB,mBAAO,CAAC,wIAAyB;;;;;;;;;;;;;ACAlD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEa;;AAEb;;AAEA,UAAU,mBAAO,CAAC,6HAAsB;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA,WAAW,mBAAO,CAAC,gHAAc;AACjC,gBAAgB,mBAAO,CAAC,gHAAU;AAClC;;AAEA,eAAe,mBAAO,CAAC,qIAAoB;AAC3C,eAAe,mBAAO,CAAC,qIAAoB;;AAE3C;;AAEA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA,E;;;;;;;;;;;;AClIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEa;;AAEb;;AAEA,gBAAgB,mBAAO,CAAC,uIAAqB;;AAE7C;AACA,WAAW,mBAAO,CAAC,gHAAc;AACjC,gBAAgB,mBAAO,CAAC,gHAAU;AAClC;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,E;;;;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;;AAEA,UAAU,mBAAO,CAAC,6HAAsB;AACxC;;AAEA;;AAEA;AACA,cAAc,mBAAO,CAAC,mGAAS;AAC/B;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS,mBAAO,CAAC,gDAAQ;;AAEzB;AACA;AACA;AACA;;AAEA;AACA,aAAa,mBAAO,CAAC,2JAA2B;AAChD;;AAEA;;AAEA,aAAa,mBAAO,CAAC,2GAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,WAAW,mBAAO,CAAC,gHAAc;AACjC,gBAAgB,mBAAO,CAAC,gHAAU;AAClC;;AAEA;AACA,gBAAgB,mBAAO,CAAC,aAAM;AAC9B;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA,iBAAiB,mBAAO,CAAC,2JAA+B;AACxD,kBAAkB,mBAAO,CAAC,qJAA4B;AACtD;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yEAAyE,6EAA6E;AACtJ;;AAEA;AACA,qBAAqB,mBAAO,CAAC,iIAAkB;;AAE/C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iDAAiD,0FAA0F;;AAE3I;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,wCAAwC,mBAAO,CAAC,6EAAiB;AACjE;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,mBAAO,CAAC,iIAAkB;;AAE/C;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,kGAAkG;AAClG,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,4FAA4F;AAC5F,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,gDAAgD;;AAEhD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC,mBAAO,CAAC,6EAAiB;AAC/D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC;;AAEtC;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,4CAA4C;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;;AAEpB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA,4EAA4E;;AAE5E;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,iBAAiB,yBAAyB;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mDAAmD;AACnD;AACA,mDAAmD,iEAAiE;AACpH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA,uCAAuC;AACvC,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA;AACA,C;;;;;;;;;;;;;AC1/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,YAAY;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;;AAEA,aAAa,mBAAO,CAAC,iIAAkB;;AAEvC;AACA,WAAW,mBAAO,CAAC,gHAAc;AACjC,gBAAgB,mBAAO,CAAC,gHAAU;AAClC;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,C;;;;;;;;;;;;ACrNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEa;;AAEb;;AAEA,UAAU,mBAAO,CAAC,6HAAsB;AACxC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,WAAW,mBAAO,CAAC,gHAAc;AACjC,gBAAgB,mBAAO,CAAC,gHAAU;AAClC;;AAEA;AACA;AACA,aAAa,mBAAO,CAAC,mHAAgB;AACrC;AACA;;AAEA;AACA,aAAa,mBAAO,CAAC,2JAA2B;AAChD;;AAEA;;AAEA,aAAa,mBAAO,CAAC,2GAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,kBAAkB,mBAAO,CAAC,qJAA4B;;AAEtD;;AAEA;;AAEA;AACA,qBAAqB,mBAAO,CAAC,iIAAkB;;AAE/C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iDAAiD,0FAA0F;;AAE3I;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,mBAAO,CAAC,iIAAkB;;AAE/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iCAAiC;;AAEjC;;AAEA,2CAA2C;AAC3C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,oDAAoD;AACpD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,E;;;;;;;;;;;;;AC9qBa;;AAEb,iDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,aAAa,mBAAO,CAAC,2GAAa;AAClC,WAAW,mBAAO,CAAC,aAAM;;AAEzB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB,gDAAgD;AAChD;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA,C;;;;;;;;;;;;AC9Ea;;AAEb;;AAEA,UAAU,mBAAO,CAAC,6HAAsB;AACxC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,E;;;;;;;;;;;ACzEA,iBAAiB,mBAAO,CAAC,gDAAQ;;;;;;;;;;;;ACAjC,2BAA2B,mBAAO,CAAC,4IAA2B;AAC9D;AACA;AACA,mBAAmB,mBAAO,CAAC,4IAA2B;AACtD,iBAAiB,mBAAO,CAAC,wIAAyB;AAClD,oBAAoB,mBAAO,CAAC,8IAA4B;AACxD,sBAAsB,mBAAO,CAAC,kJAA8B;;;;;;;;;;;;ACN5D;AACA,aAAa,mBAAO,CAAC,+CAAQ;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5DA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AClEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AAC0B;AAC3B,2C;;;;;;;;;;;;ACrCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACqC;AACI;AACQ;AACF;AAChD,+BAA+B,oCAAoC;AACnE;AACA;AACA,uCAAuC,2CAA2C,sBAAsB,iCAAiC;AACzI;AACA;AACA;AACA,mCAAmC,4DAAa;AAChD;AACA;AACA,mCAAmC,8DAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,kDAAU;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,sDAAU;AACiB;AAC7B,6C;;;;;;;;;;;;AClDA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACiC;AAClC,kD;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,sCAAsC,mCAAmC;AACzE;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACoB;AACrB;AACA;AACA;AACA,sCAAsC,sCAAsC;AAC5E;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA,sCAAsC,sCAAsC;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACuB;AACxB;AACA;AACA;AACA,sCAAsC,iBAAiB;AACvD;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA,sCAAsC,qCAAqC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACqB;AACtB,kC;;;;;;;;;;;;AC5EA;AAAA;AAAA;AAAA;AAAA;AACA;AACwD;AAChB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oEAAiB;AAChC;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAa;AACzB;AACA;AACA,oDAAoD,oEAAiB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,oEAAiB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oEAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC4B;AAC7B,6C;;;;;;;;;;;;;ACvDA;AAAA;AAAA;AAAA;AACA;AACA,gBAAgB,SAAI,IAAI,SAAI;AAC5B,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACuB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,YAAY,0BAA0B;AAC1E;AACA;AACA,oCAAoC,YAAY,2BAA2B;AAC3E;AACA;AACA,oCAAoC,YAAY,6BAA6B;AAC7E;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACqB;AACtB,sC;;;;;;;;;;;;AChDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA,mBAAmB,SAAI,IAAI,SAAI;AAC/B,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACwD;AACnB;AAC4B;AACH;AACU;AAClB;AACI;AAC1D;AACA;AACA;AACA,IAAI,+CAAQ,WAAW,UAAc;AACrC;AACA;AACA,sBAAsB,KAAyC,GAAG,OAAuB,GAAG,SAAO;AACnG;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA,QAAQ,0CAAG;AACX,sBAAsB,2DAAY;AAClC;AACA;AACA;AACA,aAAa,+CAAQ;AACrB;AACA;AACA,iBAAiB,+CAAQ;AACzB;AACA;AACA;AACA;AACA,aAAa,+CAAQ;AACrB;AACA;AACA,iBAAiB,+CAAQ;AACzB;AACA;AACA;AACA;AACA,oDAAoD,oEAAiB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,0DAAc;AACzE,wBAAwB,0CAAG,sBAAsB,0DAAc;AAC/D,wCAAwC,iDAAQ,uDAAuD,0DAAc;AACrH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iDAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,iDAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,iDAAQ;AACpD;AACA;AACA;AACA,4CAA4C,iDAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iDAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iDAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iDAAQ;AAChD;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,6DAAiB;AAC1E;AACA,iEAAiE,6DAAiB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF,sBAAsB;AAC3G;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,0EAAoB;AAC1E;AACA;AACA;AACA;AACA;AACA,4CAA4C,iDAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,wCAAwC,iDAAQ;AAChD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iDAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iDAAQ;AAChD;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iDAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iDAAQ;AAChD;AACA;AACA;AACA;AACA,4CAA4C,iDAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,iBAAiB,6DAAiB;AAClC;AACA;AACA;AACA,2BAA2B,sEAAkB;AAC7C,iBAAiB,6DAAiB;AAClC;AACA;AACA;AACA,2BAA2B,oFAAyB;AACpD,iBAAiB,6DAAiB;AAClC,2BAA2B,0EAAoB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,gCAAgC;AAC/E;AACA;AACA;AACA,wBAAwB,6DAAiB;AACzC;AACA,4BAA4B,iDAAQ;AACpC;AACA;AACA;AACA;AACA,iFAAiF,QAAQ,0DAAc,IAAI,EAAE;AAC7G;AACA,uCAAuC,6DAAiB;AACxD,uCAAuC,6DAAiB;AACxD,wCAAwC,iDAAQ,iCAAiC,6DAAiB;AAClG,+CAA+C,6DAAiB;AAChE;AACA;AACA,wCAAwC,iDAAQ,kCAAkC,6DAAiB;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,iDAAQ,iCAAiC,6DAAiB,gFAAgF,0DAAc;AAC5L,2CAA2C,6DAAiB,sCAAsC,0DAAc;AAChH;AACA;AACA;AACA,gCAAgC,iDAAQ,iCAAiC,6DAAiB;AAC1F,uCAAuC,6DAAiB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,iDAAQ;AAChC;AACA;AACA;AACA;AACA;AACA,4BAA4B,iDAAQ;AACpC;AACA;AACA;AACA,4BAA4B,iDAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iDAAQ;AACpC;AACA;AACA,4BAA4B,iDAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,iDAAQ;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,+CAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,iDAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACyB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,KAAK,EAAE,EAAwB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,yDAAyD,qBAAqB,EAAE,0BAA0B,cAAc,EAAE;AAC1H;AACA;AACA,uDAAuD,4BAA4B;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC6B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,0C;;;;;;;;;;;;ACzqBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA,mBAAmB,SAAI,IAAI,SAAI;AAC/B,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACwD;AACX;AACR;AACD;AACN;AAC9B;AACA;AACA,wCAAwC,oBAAoB;AACrD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gDAAgD;AACjD;AACA;AACA;AACA;AACA,QAAQ,0CAAG;AACX,QAAQ,0CAAG;AACX,QAAQ,0CAAG;AACX;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,oEAAiB;AACtD,qDAAqD,wCAAwC;AAC7F,oDAAoD,sCAAsC;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,OAAO,yDAAW,OAAO;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,iDAAiD,oBAAoB;AACrE;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iDAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iDAAQ;AAChD;AACA;AACA;AACA;AACA,wCAAwC,iDAAQ;AAChD;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iDAAQ;AAChD;AACA;AACA;AACA,wCAAwC,iDAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iDAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,4BAA4B,iDAAQ;AACpC;AACA;AACA;AACA,4BAA4B,iDAAQ;AACpC;AACA;AACA;AACA,wBAAwB,iDAAQ;AAChC;AACA;AACA;AACA;AACA,4BAA4B,iDAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA,0BAA0B,gDAAO;AACjC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,yDAAW;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,yDAAW;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,wBAAwB;AAC3E;AACA;AACA,yBAAyB,yDAAW;AACpC;AACA;AACA,yBAAyB,yDAAW;AACpC,yBAAyB,yDAAW;AACpC;AACA;AACA,iDAAiD,yDAAW;AAC5D;AACA;AACA;AACA;AACA;AACA,yBAAyB,yDAAW;AACpC;AACA;AACA,yBAAyB,yDAAW;AACpC,wCAAwC,iDAAQ;AAChD;AACA;AACA;AACA;AACA,wCAAwC,iDAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iDAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iDAAQ;AACpC;AACA;AACA;AACA;AACA;AACA,4BAA4B,iDAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS,EAAE,EAAE;AACb;AACA;AACA;AACA;AACA;AACA,yDAAyD,8BAA8B,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,oDAAoD,EAAE;AACpG;AACA;AACA,gCAAgC,iDAAQ;AACxC;AACA;AACA;AACA;AACA,gCAAgC,iDAAQ;AACxC;AACA;AACA;AACA;AACA;AACA,4BAA4B,iDAAQ;AACpC;AACA;AACA;AACA,wBAAwB,iDAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,gCAAgC,EAAE;AAC7F;AACA;AACA,gCAAgC,iDAAQ;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,iDAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,4CAA4C,iDAAQ;AACpD;AACA;AACA,4CAA4C,iDAAQ;AACpD;AACA;AACA;AACA,iFAAiF,gCAAgC,EAAE;AACnH;AACA;AACA,gDAAgD,iDAAQ;AACxD;AACA;AACA;AACA,gDAAgD,iDAAQ;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iDAAQ;AAChD;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,4CAA4C,iDAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iDAAQ;AAChD;AACA;AACA,gFAAgF,wDAAwD,EAAE;AAC1I;AACA;AACA,gDAAgD,iDAAQ,kGAAkG;AAC1J;AACA;AACA;AACA;AACA;AACA,wCAAwC,iDAAQ;AAChD;AACA,4CAA4C,iDAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iDAAQ;AAChD;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,4BAA4B,iDAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yDAAW;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yDAAW;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,wEAAwE,EAAE;AAC5I,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,iFAAiF,EAAE;AACrJ,iBAAiB;AACjB;AACA,kEAAkE,8EAA8E,EAAE;AAClJ,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,yDAAW;AAC7B;AACA;AACA;AACA;AACA;AACA,kBAAkB,yDAAW;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,yDAAW;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yDAAW;AACjC;AACA;AACA;AACA;AACA;AACA,kBAAkB,yDAAW;AAC7B;AACA;AACA;AACA,CAAC;AACwB;AACzB,yC;;;;;;;;;;;;AC54BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,gBAAgB,SAAI,IAAI,SAAI;AAC5B,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACkE;AAChB;AACF;AACX;AACe;AACb;AACM;AAC7C;AACA;AACA,WAAW,iDAAQ;AACnB,WAAW,iDAAQ;AACnB,UAAU,iDAAQ;AAClB,iBAAiB,iDAAQ;AACzB,UAAU,iDAAQ;AAClB,aAAa,iDAAQ;AACrB,WAAW,iDAAQ;AACnB,cAAc,iDAAQ;AACtB,UAAU,iDAAQ;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,uCAAuC;AACtE;AACA;AACA;AACA;AACA,QAAQ,0CAAG;AACX;AACA;AACA;AACA;AACA;AACA,8BAA8B,oDAAa;AAC3C;AACA;AACA,8BAA8B,oDAAa;AAC3C;AACA;AACA;AACA;AACA,QAAQ,0CAAG;AACX;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA,oDAAoD,+BAA+B,oCAAoC;AACvH;AACA;AACA;AACA,wBAAwB,uCAAuC;AAC/D;AACA,eAAe,aAAa,eAAe,sCAAsC;AACjF;AACA;AACA,QAAQ,0CAAG;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,8EAAsB;AAC7D;AACA;AACA,uCAAuC,8EAAsB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uCAAuC;AAC1D;AACA,iBAAiB,cAAc,iBAAiB,uCAAuC;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,8DAAc;AAC3C,eAAe,4DAAa,mCAAmC,mDAAU,gCAAgC,gEAAe;AACxH;AACA;AACA,CAAC;AAC+B;AAChC;AACA;AACA;AACA,gD;;;;;;;;;;;;AC1HA;AAAA;AAAA;AACA;AACA;AACO;AACP;AACA,2EAA2E,2CAA2C;AACtH;AACA,0EAA0E,2CAA2C;AACrH;AACA,0EAA0E,2CAA2C;AACrH;AACA,iFAAiF,iDAAiD;AAClI;AACA,iFAAiF,iDAAiD;AAClI;AACA,oEAAoE,qCAAqC;AACzG;AACA,qEAAqE,sCAAsC;AAC3G;AACA,CAAC,kCAAkC;AACnC,wC;;;;;;;;;;;;ACpBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4BAA4B;AAC7B,mC;;;;;;;;;;;;ACxBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACO;AACP;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC;AACzC,sC;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAC6C;AACR;AACS;AACP;AACiB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAc;AAC5C;AACA,6BAA6B,oCAAoC;AACjE;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mDAAU;AAC/B;AACA;AACA,uBAAuB,oEAAiB;AACxC;AACA,+CAA+C,wBAAwB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,yDAAW;AAChC;AACA;AACA,qBAAqB,yDAAW;AAChC;AACA;AACA,qBAAqB,yDAAW;AAChC;AACA;AACA,qBAAqB,yDAAW;AAChC;AACA;AACA,qBAAqB,yDAAW;AAChC;AACA;AACA;AACA;AACA,+BAA+B,iDAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,oCAAoC;AAClE;AACA,eAAe,WAAW;AAC1B,iBAAiB,OAAO;AACxB;AACA;AACA,eAAe,oEAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC0B;AAC3B,2C;;;;;;;;;;;;ACzGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,oCAAoC;AAC3E;AACA;AACA,CAAC;AACqB;AACtB,mC;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA,mBAAmB,SAAI,IAAI,SAAI;AAC/B,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACoD;AACD;AACd;AACS;AACY;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,gEAAe;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,0CAAG;AAC3B,wBAAwB,0CAAG;AAC3B,wBAAwB,0CAAG,sBAAsB,0DAAc;AAC/D;AACA,wCAAwC,iDAAQ;AAChD;AACA,+CAA+C,0DAAc;AAC7D;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA,+CAA+C,0DAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iDAAQ;AAChD;AACA;AACA;AACA;AACA,4CAA4C,iDAAQ;AACpD;AACA,kDAAkD,iDAAS;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iDAAQ;AAChD;AACA;AACA;AACA;AACA,4CAA4C,iDAAQ;AACpD;AACA;AACA;AACA,4CAA4C,iDAAQ;AACpD;AACA,kDAAkD,iDAAS;AAC3D;AACA;AACA;AACA;AACA;AACA,gDAAgD,iDAAQ,oDAAoD,4DAAa;AACzH;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,iDAAQ;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,iDAAQ;AACpD;AACA;AACA,+CAA+C,oDAAY;AAC3D;AACA,gDAAgD,iDAAQ;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iDAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,0DAAW;AACjD,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iDAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iDAAQ;AAChD;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iDAAQ;AAChD;AACA;AACA,wCAAwC,iDAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iDAAQ;AACpC;AACA;AACA;AACA;AACA,CAAC;AAC+B;AAChC,gD;;;;;;;;;;;;AC1RA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,gBAAgB,SAAI,IAAI,SAAI;AAC5B,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AAC+D;AACP;AACnB;AACG;AACxC;AACA;AACA;AACA;AACA,sBAAsB,KAAyC,GAAG,OAAuB,GAAG,SAAO;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,uBAAuB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4DAAa;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mC;AACA;AACA,0DAA0D;AAC1D;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,yCAAyC,iDAAQ;AACjD,mCAAmC,oDAAY;AAC/C;AACA,qCAAqC,iDAAQ;AAC7C;AACA;AACA;AACA;AACA,gCAAgC,wDAAY;AAC5C;AACA;AACA,+BAA+B,iDAAS;AACxC;AACA,aAAa;AACb;AACA;AACA;AACA,+BAA+B,kDAAU;AACzC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,sDAAU;AACc;AAC1B,0C;;;;;;;;;;;;;AChGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA,mBAAmB,SAAI,IAAI,SAAI;AAC/B,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACqC;AACS;AACsB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,0CAAG;AAC3B,wBAAwB,0CAAG;AAC3B,wBAAwB,0CAAG,sBAAsB,0DAAc;AAC/D,wCAAwC,iDAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,0DAAc;AACjE;AACA;AACA;AACA;AACA,gCAAgC,+CAAQ,cAAc,+CAAQ;AAC9D,qFAAqF,wBAAwB;AAC7G;AACA;AACA;AACA;AACA,qFAAqF,kCAAkC,kBAAkB,EAAE;AAC3I;AACA;AACA;AACA;AACA;AACA,6DAA6D,iDAAQ,4CAA4C,4DAAa;AAC9H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,iDAAQ;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,0DAAW;AACjD,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACoC;AACrC,qD;;;;;;;;;;;;ACvJA;AAAA;AAAA;AAAA;AACA;AAC8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,gBAAgB;AAC7D;AACA;AACA;AACA;AACA;AACA,6CAA6C,gBAAgB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,gBAAgB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0DAAmB;AACtC;AACA;AACA,CAAC;AACkB;AACnB,mC;;;;;;;;;;;;ACrCA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC4B;AAC7B,6C;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA,mBAAmB,SAAI,IAAI,SAAI;AAC/B,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACqC;AACE;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACc;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACmB;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA,+BAA+B,iDAAQ;AACvC;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,+BAA+B,iDAAQ;AACvC;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACO;AACP;AACA,iCAAiC,iDAAQ;AACzC;AACA;AACA,eAAe,mDAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,EAAE;AAChE;AACA;AACA;AACA,CAAC;AAC8B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iDAAQ;AAC7B,qBAAqB,iDAAQ;AAC7B,qFAAqF,iDAAQ;AAC7F;AACA,qBAAqB,iDAAQ;AAC7B,oFAAoF,iDAAQ;AAC5F;AACA,qBAAqB,iDAAQ;AAC7B,oFAAoF,iDAAQ;AAC5F;AACA;AACA;AACA,mFAAmF,iDAAQ;AAC3F;AACA;AACA;AACA;AACA;AACA,CAAC;AACwB;AACzB,iC;;;;;;;;;;;;ACvNA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA,mBAAmB,SAAI,IAAI,SAAI;AAC/B,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACqC;AACS;AACS;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,0CAAG;AAC3B,wBAAwB,0CAAG;AAC3B,wBAAwB,0CAAG,sBAAsB,0DAAc;AAC/D,wCAAwC,iDAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,+CAAQ;AACxC;AACA;AACA;AACA;AACA,qCAAqC;AACrC,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,mDAAmD,0DAAc;AACjE;AACA;AACA;AACA;AACA,iDAAiD,iDAAQ;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,iDAAQ,mDAAmD,4DAAa;AACzH;AACA;AACA;AACA;AACA,kEAAkE,2BAA2B;AAC7F,yBAAyB;AACzB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,4BAA4B,iDAAQ,kDAAkD,4DAAa;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD,oDAAoD;AACpD,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,iDAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC6B;AAC9B,8C;;;;;;;;;;;;AC3JA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AAC8D;AACP;AACnB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,kDAAU;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,kDAAU;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,wDAAY;AAC5C;AACA;AACA,+BAA+B,iDAAS;AACxC;AACA;AACA;AACA,iCAAiC,iDAAQ;AACzC,2BAA2B,iDAAS;AACpC;AACA;AACA,iCAAiC,iDAAQ;AACzC,2BAA2B,oDAAY;AACvC;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC,CAAC,sDAAU;AACa;AACzB,yC;;;;;;;;;;;;ACtFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACO;AACwD;AACP;AACA;AACY;AACN;AACjB;AACR;AAC4B;AAC1B;AACa;AAChB;AACpC,iC;;;;;;;;;;;;AChBa;AACb;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gDAAgD,mIAAmI,EAAE,oBAAoB,oIAAoI,EAAE;AAC/U;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,kCAAkC,EAAE;AAC5G,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,6BAA6B,EAAE;AAC3E;AACA;AACA,oBAAoB;AACpB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC,wBAAwB;AACzB,+C;;;;;;;;;;;;ACrPA,8CAAa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW,mBAAO,CAAC,2CAAO;AAC1B;AACA;AACA;AACA,0BAA0B;AAC1B,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,8BAA8B;AAC9B;AACA,mDAAmD;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,gDAAgD;;AAEhD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,QAAQ;AACjC;AACA;AACA;AACA;AACA;AACA,yBAAyB,QAAQ;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA,yBAAyB;AACzB;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gCAAgC,oBAAoB;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACzeY;;AAEZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kCAAkC,SAAS;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,UAAU;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACtJA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ,aAAa,mBAAO,CAAC,qDAAW;AAChC,cAAc,mBAAO,CAAC,iDAAS;AAC/B,cAAc,mBAAO,CAAC,iDAAS;;AAE/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,mDAAmD;AACxE;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gDAAgD,EAAE;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,eAAe;AACvC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,wBAAwB,QAAQ;AAChC;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,cAAc;AACjuDAAuD,OAAO;AAC9D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD,OAAO;AAC9D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA,GAAG;AACH;AACA,eAAe,SAAS;AACxB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,YAAY;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;AC5vDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA,sCAAsC,QAAQ;AAC9C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA,QAAQ,yBAAyB;AACjC;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;;;;;;;;;;;;AC/bA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,QAAQ,WAAW;;AAEnB;AACA;AACA;AACA,QAAQ,WAAW;;AAEnB;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,QAAQ,WAAW;;AAEnB;AACA;AACA,QAAQ,UAAU;;AAElB;AACA;;;;;;;;;;;;ACnFA,iBAAiB;;AAEjB;AACA;AACA;;;;;;;;;;;;ACJA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA;AACA;AACA,4BAA4B,UAAU;;;;;;;;;;;;ACvLtC;AACA,aAAa,mBAAO,CAAC,+CAAQ;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC7DA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0CAA0C,sBAAsB,EAAE;AAClE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;;;;;;;;;;;;ACzLD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;;AAEA,aAAa,mBAAO,CAAC,yDAAa;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B,sCAAsC,sCAAsC;AACzG;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,C;;;;;;;;;;;ACvSA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,mBAAO,CAAC,kEAAc;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,uBAAuB,SAAS;AAChC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA4C,KAAK;;AAEjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,mCAAmC,OAAO;AAC1C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;AAGA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,mBAAO,CAAC,2EAAoB;;AAE/C;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,WAAW,SAAS;AACpB;AACA,mBAAmB,mBAAO,CAAC,gFAAU;;AAErC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kCAAkC;AAC7D,2BAA2B,mDAAmD;AAC9E;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9rB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","file":"blazor.server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./Boot.Server.ts\");\n","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\n// Not exported from index.\nvar BinaryMessageFormat = /** @class */ (function () {\n    function BinaryMessageFormat() {\n    }\n    // The length prefix of binary messages is encoded as VarInt. Read the comment in\n    // the BinaryMessageParser.TryParseMessage for details.\n    BinaryMessageFormat.write = function (output) {\n        // msgpack5 uses returns Buffer instead of Uint8Array on IE10 and some other browser\n        //  in which case .byteLength does will be undefined\n        var size = output.byteLength || output.length;\n        var lenBuffer = [];\n        do {\n            var sizePart = size & 0x7f;\n            size = size >> 7;\n            if (size > 0) {\n                sizePart |= 0x80;\n            }\n            lenBuffer.push(sizePart);\n        } while (size > 0);\n        // msgpack5 uses returns Buffer instead of Uint8Array on IE10 and some other browser\n        //  in which case .byteLength does will be undefined\n        size = output.byteLength || output.length;\n        var buffer = new Uint8Array(lenBuffer.length + size);\n        buffer.set(lenBuffer, 0);\n        buffer.set(output, lenBuffer.length);\n        return buffer.buffer;\n    };\n    BinaryMessageFormat.parse = function (input) {\n        var result = [];\n        var uint8Array = new Uint8Array(input);\n        var maxLengthPrefixSize = 5;\n        var numBitsToShift = [0, 7, 14, 21, 28];\n        for (var offset = 0; offset < input.byteLength;) {\n            var numBytes = 0;\n            var size = 0;\n            var byteRead = void 0;\n            do {\n                byteRead = uint8Array[offset + numBytes];\n                size = size | ((byteRead & 0x7f) << (numBitsToShift[numBytes]));\n                numBytes++;\n            } while (numBytes < Math.min(maxLengthPrefixSize, input.byteLength - offset) && (byteRead & 0x80) !== 0);\n            if ((byteRead & 0x80) !== 0 && numBytes < maxLengthPrefixSize) {\n                throw new Error(\"Cannot read message size.\");\n            }\n            if (numBytes === maxLengthPrefixSize && byteRead > 7) {\n                throw new Error(\"Messages bigger than 2GB are not supported.\");\n            }\n            if (uint8Array.byteLength >= (offset + numBytes + size)) {\n                // IE does not support .slice() so use subarray\n                result.push(uint8Array.slice\n                    ? uint8Array.slice(offset + numBytes, offset + numBytes + size)\n                    : uint8Array.subarray(offset + numBytes, offset + numBytes + size));\n            }\n            else {\n                throw new Error(\"Incomplete message.\");\n            }\n            offset = offset + numBytes + size;\n        }\n        return result;\n    };\n    return BinaryMessageFormat;\n}());\nexport { BinaryMessageFormat };\n//# sourceMappingURL=BinaryMessageFormat.js.map","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\nimport { Buffer } from \"buffer\";\nimport * as msgpack5 from \"msgpack5\";\nimport { LogLevel, MessageType, NullLogger, TransferFormat, } from \"@microsoft/signalr\";\nimport { BinaryMessageFormat } from \"./BinaryMessageFormat\";\nimport { isArrayBuffer } from \"./Utils\";\n// TypeDoc's @inheritDoc and @link don't work across modules :(\n// constant encoding of the ping message\n// see: https://github.com/aspnet/SignalR/blob/dev/specs/HubProtocol.md#ping-message-encoding-1\n// Don't use Uint8Array.from as IE does not support it\nvar SERIALIZED_PING_MESSAGE = new Uint8Array([0x91, MessageType.Ping]);\n/** Implements the MessagePack Hub Protocol */\nvar MessagePackHubProtocol = /** @class */ (function () {\n    function MessagePackHubProtocol() {\n        /** The name of the protocol. This is used by SignalR to resolve the protocol between the client and server. */\n        this.name = \"messagepack\";\n        /** The version of the protocol. */\n        this.version = 1;\n        /** The TransferFormat of the protocol. */\n        this.transferFormat = TransferFormat.Binary;\n        this.errorResult = 1;\n        this.voidResult = 2;\n        this.nonVoidResult = 3;\n    }\n    /** Creates an array of HubMessage objects from the specified serialized representation.\n     *\n     * @param {ArrayBuffer | Buffer} input An ArrayBuffer or Buffer containing the serialized representation.\n     * @param {ILogger} logger A logger that will be used to log messages that occur during parsing.\n     */\n    MessagePackHubProtocol.prototype.parseMessages = function (input, logger) {\n        // The interface does allow \"string\" to be passed in, but this implementation does not. So let's throw a useful error.\n        if (!(input instanceof Buffer) && !(isArrayBuffer(input))) {\n            throw new Error(\"Invalid input for MessagePack hub protocol. Expected an ArrayBuffer or Buffer.\");\n        }\n        if (logger === null) {\n            logger = NullLogger.instance;\n        }\n        var messages = BinaryMessageFormat.parse(input);\n        var hubMessages = [];\n        for (var _i = 0, messages_1 = messages; _i < messages_1.length; _i++) {\n            var message = messages_1[_i];\n            var parsedMessage = this.parseMessage(message, logger);\n            // Can be null for an unknown message. Unknown message is logged in parseMessage\n            if (parsedMessage) {\n                hubMessages.push(parsedMessage);\n            }\n        }\n        return hubMessages;\n    };\n    /** Writes the specified HubMessage to an ArrayBuffer and returns it.\n     *\n     * @param {HubMessage} message The message to write.\n     * @returns {ArrayBuffer} An ArrayBuffer containing the serialized representation of the message.\n     */\n    MessagePackHubProtocol.prototype.writeMessage = function (message) {\n        switch (message.type) {\n            case MessageType.Invocation:\n                return this.writeInvocation(message);\n            case MessageType.StreamInvocation:\n                return this.writeStreamInvocation(message);\n            case MessageType.StreamItem:\n                return this.writeStreamItem(message);\n            case MessageType.Completion:\n                return this.writeCompletion(message);\n            case MessageType.Ping:\n                return BinaryMessageFormat.write(SERIALIZED_PING_MESSAGE);\n            case MessageType.CancelInvocation:\n                return this.writeCancelInvocation(message);\n            default:\n                throw new Error(\"Invalid message type.\");\n        }\n    };\n    MessagePackHubProtocol.prototype.parseMessage = function (input, logger) {\n        if (input.length === 0) {\n            throw new Error(\"Invalid payload.\");\n        }\n        var msgpack = msgpack5();\n        var properties = msgpack.decode(Buffer.from(input));\n        if (properties.length === 0 || !(properties instanceof Array)) {\n            throw new Error(\"Invalid payload.\");\n        }\n        var messageType = properties[0];\n        switch (messageType) {\n            case MessageType.Invocation:\n                return this.createInvocationMessage(this.readHeaders(properties), properties);\n            case MessageType.StreamItem:\n                return this.createStreamItemMessage(this.readHeaders(properties), properties);\n            case MessageType.Completion:\n                return this.createCompletionMessage(this.readHeaders(properties), properties);\n            case MessageType.Ping:\n                return this.createPingMessage(properties);\n            case MessageType.Close:\n                return this.createCloseMessage(properties);\n            default:\n                // Future protocol changes can add message types, old clients can ignore them\n                logger.log(LogLevel.Information, \"Unknown message type '\" + messageType + \"' ignored.\");\n                return null;\n        }\n    };\n    MessagePackHubProtocol.prototype.createCloseMessage = function (properties) {\n        // check minimum length to allow protocol to add items to the end of objects in future releases\n        if (properties.length < 2) {\n            throw new Error(\"Invalid payload for Close message.\");\n        }\n        return {\n            // Close messages have no headers.\n            error: properties[1],\n            type: MessageType.Close,\n        };\n    };\n    MessagePackHubProtocol.prototype.createPingMessage = function (properties) {\n        // check minimum length to allow protocol to add items to the end of objects in future releases\n        if (properties.length < 1) {\n            throw new Error(\"Invalid payload for Ping message.\");\n        }\n        return {\n            // Ping messages have no headers.\n            type: MessageType.Ping,\n        };\n    };\n    MessagePackHubProtocol.prototype.createInvocationMessage = function (headers, properties) {\n        // check minimum length to allow protocol to add items to the end of objects in future releases\n        if (properties.length < 5) {\n            throw new Error(\"Invalid payload for Invocation message.\");\n        }\n        var invocationId = properties[2];\n        if (invocationId) {\n            return {\n                arguments: properties[4],\n                headers: headers,\n                invocationId: invocationId,\n                streamIds: [],\n                target: properties[3],\n                type: MessageType.Invocation,\n            };\n        }\n        else {\n            return {\n                arguments: properties[4],\n                headers: headers,\n                streamIds: [],\n                target: properties[3],\n                type: MessageType.Invocation,\n            };\n        }\n    };\n    MessagePackHubProtocol.prototype.createStreamItemMessage = function (headers, properties) {\n        // check minimum length to allow protocol to add items to the end of objects in future releases\n        if (properties.length < 4) {\n            throw new Error(\"Invalid payload for StreamItem message.\");\n        }\n        return {\n            headers: headers,\n            invocationId: properties[2],\n            item: properties[3],\n            type: MessageType.StreamItem,\n        };\n    };\n    MessagePackHubProtocol.prototype.createCompletionMessage = function (headers, properties) {\n        // check minimum length to allow protocol to add items to the end of objects in future releases\n        if (properties.length < 4) {\n            throw new Error(\"Invalid payload for Completion message.\");\n        }\n        var resultKind = properties[3];\n        if (resultKind !== this.voidResult && properties.length < 5) {\n            throw new Error(\"Invalid payload for Completion message.\");\n        }\n        var error;\n        var result;\n        switch (resultKind) {\n            case this.errorResult:\n                error = properties[4];\n                break;\n            case this.nonVoidResult:\n                result = properties[4];\n                break;\n        }\n        var completionMessage = {\n            error: error,\n            headers: headers,\n            invocationId: properties[2],\n            result: result,\n            type: MessageType.Completion,\n        };\n        return completionMessage;\n    };\n    MessagePackHubProtocol.prototype.writeInvocation = function (invocationMessage) {\n        var msgpack = msgpack5();\n        var payload = msgpack.encode([MessageType.Invocation, invocationMessage.headers || {}, invocationMessage.invocationId || null,\n            invocationMessage.target, invocationMessage.arguments, invocationMessage.streamIds]);\n        return BinaryMessageFormat.write(payload.slice());\n    };\n    MessagePackHubProtocol.prototype.writeStreamInvocation = function (streamInvocationMessage) {\n        var msgpack = msgpack5();\n        var payload = msgpack.encode([MessageType.StreamInvocation, streamInvocationMessage.headers || {}, streamInvocationMessage.invocationId,\n            streamInvocationMessage.target, streamInvocationMessage.arguments, streamInvocationMessage.streamIds]);\n        return BinaryMessageFormat.write(payload.slice());\n    };\n    MessagePackHubProtocol.prototype.writeStreamItem = function (streamItemMessage) {\n        var msgpack = msgpack5();\n        var payload = msgpack.encode([MessageType.StreamItem, streamItemMessage.headers || {}, streamItemMessage.invocationId,\n            streamItemMessage.item]);\n        return BinaryMessageFormat.write(payload.slice());\n    };\n    MessagePackHubProtocol.prototype.writeCompletion = function (completionMessage) {\n        var msgpack = msgpack5();\n        var resultKind = completionMessage.error ? this.errorResult : completionMessage.result ? this.nonVoidResult : this.voidResult;\n        var payload;\n        switch (resultKind) {\n            case this.errorResult:\n                payload = msgpack.encode([MessageType.Completion, completionMessage.headers || {}, completionMessage.invocationId, resultKind, completionMessage.error]);\n                break;\n            case this.voidResult:\n                payload = msgpack.encode([MessageType.Completion, completionMessage.headers || {}, completionMessage.invocationId, resultKind]);\n                break;\n            case this.nonVoidResult:\n                payload = msgpack.encode([MessageType.Completion, completionMessage.headers || {}, completionMessage.invocationId, resultKind, completionMessage.result]);\n                break;\n        }\n        return BinaryMessageFormat.write(payload.slice());\n    };\n    MessagePackHubProtocol.prototype.writeCancelInvocation = function (cancelInvocationMessage) {\n        var msgpack = msgpack5();\n        var payload = msgpack.encode([MessageType.CancelInvocation, cancelInvocationMessage.headers || {}, cancelInvocationMessage.invocationId]);\n        return BinaryMessageFormat.write(payload.slice());\n    };\n    MessagePackHubProtocol.prototype.readHeaders = function (properties) {\n        var headers = properties[1];\n        if (typeof headers !== \"object\") {\n            throw new Error(\"Invalid headers.\");\n        }\n        return headers;\n    };\n    return MessagePackHubProtocol;\n}());\nexport { MessagePackHubProtocol };\n//# sourceMappingURL=MessagePackHubProtocol.js.map","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\n// Copied from signalr/Utils.ts\n/** @private */\nexport function isArrayBuffer(val) {\n    return val && typeof ArrayBuffer !== \"undefined\" &&\n        (val instanceof ArrayBuffer ||\n            // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof\n            (val.constructor && val.constructor.name === \"ArrayBuffer\"));\n}\n//# sourceMappingURL=Utils.js.map","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\n// Version token that will be replaced by the prepack command\n/** The version of the SignalR Message Pack protocol library. */\nexport var VERSION = \"3.1.0-dev\";\nexport { MessagePackHubProtocol } from \"./MessagePackHubProtocol\";\n//# sourceMappingURL=index.js.map","var DuplexStream = require('readable-stream/duplex')\n  , util         = require('util')\n  , Buffer       = require('safe-buffer').Buffer\n\n\nfunction BufferList (callback) {\n  if (!(this instanceof BufferList))\n    return new BufferList(callback)\n\n  this._bufs  = []\n  this.length = 0\n\n  if (typeof callback == 'function') {\n    this._callback = callback\n\n    var piper = function piper (err) {\n      if (this._callback) {\n        this._callback(err)\n        this._callback = null\n      }\n    }.bind(this)\n\n    this.on('pipe', function onPipe (src) {\n      src.on('error', piper)\n    })\n    this.on('unpipe', function onUnpipe (src) {\n      src.removeListener('error', piper)\n    })\n  } else {\n    this.append(callback)\n  }\n\n  DuplexStream.call(this)\n}\n\n\nutil.inherits(BufferList, DuplexStream)\n\n\nBufferList.prototype._offset = function _offset (offset) {\n  var tot = 0, i = 0, _t\n  if (offset === 0) return [ 0, 0 ]\n  for (; i < this._bufs.length; i++) {\n    _t = tot + this._bufs[i].length\n    if (offset < _t || i == this._bufs.length - 1)\n      return [ i, offset - tot ]\n    tot = _t\n  }\n}\n\n\nBufferList.prototype.append = function append (buf) {\n  var i = 0\n\n  if (Buffer.isBuffer(buf)) {\n    this._appendBuffer(buf);\n  } else if (Array.isArray(buf)) {\n    for (; i < buf.length; i++)\n      this.append(buf[i])\n  } else if (buf instanceof BufferList) {\n    // unwrap argument into individual BufferLists\n    for (; i < buf._bufs.length; i++)\n      this.append(buf._bufs[i])\n  } else if (buf != null) {\n    // coerce number arguments to strings, since Buffer(number) does\n    // uninitialized memory allocation\n    if (typeof buf == 'number')\n      buf = buf.toString()\n\n    this._appendBuffer(Buffer.from(buf));\n  }\n\n  return this\n}\n\n\nBufferList.prototype._appendBuffer = function appendBuffer (buf) {\n  this._bufs.push(buf)\n  this.length += buf.length\n}\n\n\nBufferList.prototype._write = function _write (buf, encoding, callback) {\n  this._appendBuffer(buf)\n\n  if (typeof callback == 'function')\n    callback()\n}\n\n\nBufferList.prototype._read = function _read (size) {\n  if (!this.length)\n    return this.push(null)\n\n  size = Math.min(size, this.length)\n  this.push(this.slice(0, size))\n  this.consume(size)\n}\n\n\nBufferList.prototype.end = function end (chunk) {\n  DuplexStream.prototype.end.call(this, chunk)\n\n  if (this._callback) {\n    this._callback(null, this.slice())\n    this._callback = null\n  }\n}\n\n\nBufferList.prototype.get = function get (index) {\n  return this.slice(index, index + 1)[0]\n}\n\n\nBufferList.prototype.slice = function slice (start, end) {\n  if (typeof start == 'number' && start < 0)\n    start += this.length\n  if (typeof end == 'number' && end < 0)\n    end += this.length\n  return this.copy(null, 0, start, end)\n}\n\n\nBufferList.prototype.copy = function copy (dst, dstStart, srcStart, srcEnd) {\n  if (typeof srcStart != 'number' || srcStart < 0)\n    srcStart = 0\n  if (typeof srcEnd != 'number' || srcEnd > this.length)\n    srcEnd = this.length\n  if (srcStart >= this.length)\n    return dst || Buffer.alloc(0)\n  if (srcEnd <= 0)\n    return dst || Buffer.alloc(0)\n\n  var copy   = !!dst\n    , off    = this._offset(srcStart)\n    , len    = srcEnd - srcStart\n    , bytes  = len\n    , bufoff = (copy && dstStart) || 0\n    , start  = off[1]\n    , l\n    , i\n\n  // copy/slice everything\n  if (srcStart === 0 && srcEnd == this.length) {\n    if (!copy) { // slice, but full concat if multiple buffers\n      return this._bufs.length === 1\n        ? this._bufs[0]\n        : Buffer.concat(this._bufs, this.length)\n    }\n\n    // copy, need to copy individual buffers\n    for (i = 0; i < this._bufs.length; i++) {\n      this._bufs[i].copy(dst, bufoff)\n      bufoff += this._bufs[i].length\n    }\n\n    return dst\n  }\n\n  // easy, cheap case where it's a subset of one of the buffers\n  if (bytes <= this._bufs[off[0]].length - start) {\n    return copy\n      ? this._bufs[off[0]].copy(dst, dstStart, start, start + bytes)\n      : this._bufs[off[0]].slice(start, start + bytes)\n  }\n\n  if (!copy) // a slice, we need something to copy in to\n    dst = Buffer.allocUnsafe(len)\n\n  for (i = off[0]; i < this._bufs.length; i++) {\n    l = this._bufs[i].length - start\n\n    if (bytes > l) {\n      this._bufs[i].copy(dst, bufoff, start)\n    } else {\n      this._bufs[i].copy(dst, bufoff, start, start + bytes)\n      break\n    }\n\n    bufoff += l\n    bytes -= l\n\n    if (start)\n      start = 0\n  }\n\n  return dst\n}\n\nBufferList.prototype.shallowSlice = function shallowSlice (start, end) {\n  start = start || 0\n  end = end || this.length\n\n  if (start < 0)\n    start += this.length\n  if (end < 0)\n    end += this.length\n\n  var startOffset = this._offset(start)\n    , endOffset = this._offset(end)\n    , buffers = this._bufs.slice(startOffset[0], endOffset[0] + 1)\n\n  if (endOffset[1] == 0)\n    buffers.pop()\n  else\n    buffers[buffers.length-1] = buffers[buffers.length-1].slice(0, endOffset[1])\n\n  if (startOffset[1] != 0)\n    buffers[0] = buffers[0].slice(startOffset[1])\n\n  return new BufferList(buffers)\n}\n\nBufferList.prototype.toString = function toString (encoding, start, end) {\n  return this.slice(start, end).toString(encoding)\n}\n\nBufferList.prototype.consume = function consume (bytes) {\n  while (this._bufs.length) {\n    if (bytes >= this._bufs[0].length) {\n      bytes -= this._bufs[0].length\n      this.length -= this._bufs[0].length\n      this._bufs.shift()\n    } else {\n      this._bufs[0] = this._bufs[0].slice(bytes)\n      this.length -= bytes\n      break\n    }\n  }\n  return this\n}\n\n\nBufferList.prototype.duplicate = function duplicate () {\n  var i = 0\n    , copy = new BufferList()\n\n  for (; i < this._bufs.length; i++)\n    copy.append(this._bufs[i])\n\n  return copy\n}\n\n\nBufferList.prototype.destroy = function destroy () {\n  this._bufs.length = 0\n  this.length = 0\n  this.push(null)\n}\n\n\n;(function () {\n  var methods = {\n      'readDoubleBE' : 8\n    , 'readDoubleLE' : 8\n    , 'readFloatBE'  : 4\n    , 'readFloatLE'  : 4\n    , 'readInt32BE'  : 4\n    , 'readInt32LE'  : 4\n    , 'readUInt32BE' : 4\n    , 'readUInt32LE' : 4\n    , 'readInt16BE'  : 2\n    , 'readInt16LE'  : 2\n    , 'readUInt16BE' : 2\n    , 'readUInt16LE' : 2\n    , 'readInt8'     : 1\n    , 'readUInt8'    : 1\n  }\n\n  for (var m in methods) {\n    (function (m) {\n      BufferList.prototype[m] = function (offset) {\n        return this.slice(offset, offset + methods[m])[m](0)\n      }\n    }(m))\n  }\n}())\n\n\nmodule.exports = BufferList\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","'use strict'\n\nvar Buffer = require('safe-buffer').Buffer\nvar assert = require('assert')\nvar bl = require('bl')\nvar streams = require('./lib/streams')\nvar buildDecode = require('./lib/decoder')\nvar buildEncode = require('./lib/encoder')\n\nfunction msgpack (options) {\n  var encodingTypes = []\n  var decodingTypes = []\n\n  options = options || {\n    forceFloat64: false,\n    compatibilityMode: false,\n    disableTimestampEncoding: false // if true, skips encoding Dates using the msgpack timestamp ext format (-1)\n  }\n\n  function registerEncoder (check, encode) {\n    assert(check, 'must have an encode function')\n    assert(encode, 'must have an encode function')\n\n    encodingTypes.push({\n      check: check, encode: encode\n    })\n\n    return this\n  }\n\n  function registerDecoder (type, decode) {\n    assert(type >= 0, 'must have a non-negative type')\n    assert(decode, 'must have a decode function')\n\n    decodingTypes.push({\n      type: type, decode: decode\n    })\n\n    return this\n  }\n\n  function register (type, constructor, encode, decode) {\n    assert(constructor, 'must have a constructor')\n    assert(encode, 'must have an encode function')\n    assert(type >= 0, 'must have a non-negative type')\n    assert(decode, 'must have a decode function')\n\n    function check (obj) {\n      return (obj instanceof constructor)\n    }\n\n    function reEncode (obj) {\n      var buf = bl()\n      var header = Buffer.allocUnsafe(1)\n\n      header.writeInt8(type, 0)\n\n      buf.append(header)\n      buf.append(encode(obj))\n\n      return buf\n    }\n\n    this.registerEncoder(check, reEncode)\n    this.registerDecoder(type, decode)\n\n    return this\n  }\n\n  return {\n    encode: buildEncode(encodingTypes, options.forceFloat64, options.compatibilityMode, options.disableTimestampEncoding),\n    decode: buildDecode(decodingTypes),\n    register: register,\n    registerEncoder: registerEncoder,\n    registerDecoder: registerDecoder,\n    encoder: streams.encoder,\n    decoder: streams.decoder,\n    // needed for levelup support\n    buffer: true,\n    type: 'msgpack5',\n    IncompleteBufferError: buildDecode.IncompleteBufferError\n  }\n}\n\nmodule.exports = msgpack\n","var bl = require('bl')\nvar util = require('util')\n\nfunction IncompleteBufferError (message) {\n  Error.call(this) // super constructor\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor) // super helper method to include stack trace in error object\n  }\n  this.name = this.constructor.name\n  this.message = message || 'unable to decode'\n}\n\nutil.inherits(IncompleteBufferError, Error)\n\nmodule.exports = function buildDecode (decodingTypes) {\n  return decode\n\n  function getSize (first) {\n    switch (first) {\n      case 0xc4:\n        return 2\n      case 0xc5:\n        return 3\n      case 0xc6:\n        return 5\n      case 0xc7:\n        return 3\n      case 0xc8:\n        return 4\n      case 0xc9:\n        return 6\n      case 0xca:\n        return 5\n      case 0xcb:\n        return 9\n      case 0xcc:\n        return 2\n      case 0xcd:\n        return 3\n      case 0xce:\n        return 5\n      case 0xcf:\n        return 9\n      case 0xd0:\n        return 2\n      case 0xd1:\n        return 3\n      case 0xd2:\n        return 5\n      case 0xd3:\n        return 9\n      case 0xd4:\n        return 3\n      case 0xd5:\n        return 4\n      case 0xd6:\n        return 6\n      case 0xd7:\n        return 10\n      case 0xd8:\n        return 18\n      case 0xd9:\n        return 2\n      case 0xda:\n        return 3\n      case 0xdb:\n        return 5\n      case 0xde:\n        return 3\n      default:\n        return -1\n    }\n  }\n\n  function hasMinBufferSize (first, length) {\n    var size = getSize(first)\n\n    if (size !== -1 && length < size) {\n      return false\n    } else {\n      return true\n    }\n  }\n\n  function isValidDataSize (dataLength, bufLength, headerLength) {\n    return bufLength >= headerLength + dataLength\n  }\n\n  function buildDecodeResult (value, bytesConsumed) {\n    return {\n      value: value,\n      bytesConsumed: bytesConsumed\n    }\n  }\n\n  function decode (buf) {\n    if (!(buf instanceof bl)) {\n      buf = bl().append(buf)\n    }\n\n    var result = tryDecode(buf)\n    if (result) {\n      buf.consume(result.bytesConsumed)\n      return result.value\n    } else {\n      throw new IncompleteBufferError()\n    }\n  }\n\n  function tryDecode (buf, offset) {\n    offset = offset === undefined ? 0 : offset\n    var bufLength = buf.length - offset\n    if (bufLength <= 0) {\n      return null\n    }\n\n    var first = buf.readUInt8(offset)\n    var length\n    var result = 0\n    var type\n    var bytePos\n\n    if (!hasMinBufferSize(first, bufLength)) {\n      return null\n    }\n\n    switch (first) {\n      case 0xc0:\n        return buildDecodeResult(null, 1)\n      case 0xc2:\n        return buildDecodeResult(false, 1)\n      case 0xc3:\n        return buildDecodeResult(true, 1)\n      case 0xcc:\n        // 1-byte unsigned int\n        result = buf.readUInt8(offset + 1)\n        return buildDecodeResult(result, 2)\n      case 0xcd:\n        // 2-bytes BE unsigned int\n        result = buf.readUInt16BE(offset + 1)\n        return buildDecodeResult(result, 3)\n      case 0xce:\n        // 4-bytes BE unsigned int\n        result = buf.readUInt32BE(offset + 1)\n        return buildDecodeResult(result, 5)\n      case 0xcf:\n        // 8-bytes BE unsigned int\n        // Read long byte by byte, big-endian\n        for (bytePos = 7; bytePos >= 0; bytePos--) {\n          result += (buf.readUInt8(offset + bytePos + 1) * Math.pow(2, (8 * (7 - bytePos))))\n        }\n        return buildDecodeResult(result, 9)\n      case 0xd0:\n        // 1-byte signed int\n        result = buf.readInt8(offset + 1)\n        return buildDecodeResult(result, 2)\n      case 0xd1:\n        // 2-bytes signed int\n        result = buf.readInt16BE(offset + 1)\n        return buildDecodeResult(result, 3)\n      case 0xd2:\n        // 4-bytes signed int\n        result = buf.readInt32BE(offset + 1)\n        return buildDecodeResult(result, 5)\n      case 0xd3:\n        result = readInt64BE(buf.slice(offset + 1, offset + 9), 0)\n        return buildDecodeResult(result, 9)\n      case 0xca:\n        // 4-bytes float\n        result = buf.readFloatBE(offset + 1)\n        return buildDecodeResult(result, 5)\n      case 0xcb:\n        // 8-bytes double\n        result = buf.readDoubleBE(offset + 1)\n        return buildDecodeResult(result, 9)\n      case 0xd9:\n        // strings up to 2^8 - 1 bytes\n        length = buf.readUInt8(offset + 1)\n        if (!isValidDataSize(length, bufLength, 2)) {\n          return null\n        }\n        result = buf.toString('utf8', offset + 2, offset + 2 + length)\n        return buildDecodeResult(result, 2 + length)\n      case 0xda:\n        // strings up to 2^16 - 2 bytes\n        length = buf.readUInt16BE(offset + 1)\n        if (!isValidDataSize(length, bufLength, 3)) {\n          return null\n        }\n        result = buf.toString('utf8', offset + 3, offset + 3 + length)\n        return buildDecodeResult(result, 3 + length)\n      case 0xdb:\n        // strings up to 2^32 - 4 bytes\n        length = buf.readUInt32BE(offset + 1)\n        if (!isValidDataSize(length, bufLength, 5)) {\n          return null\n        }\n        result = buf.toString('utf8', offset + 5, offset + 5 + length)\n        return buildDecodeResult(result, 5 + length)\n      case 0xc4:\n        // buffers up to 2^8 - 1 bytes\n        length = buf.readUInt8(offset + 1)\n        if (!isValidDataSize(length, bufLength, 2)) {\n          return null\n        }\n        result = buf.slice(offset + 2, offset + 2 + length)\n        return buildDecodeResult(result, 2 + length)\n      case 0xc5:\n        // buffers up to 2^16 - 1 bytes\n        length = buf.readUInt16BE(offset + 1)\n        if (!isValidDataSize(length, bufLength, 3)) {\n          return null\n        }\n        result = buf.slice(offset + 3, offset + 3 + length)\n        return buildDecodeResult(result, 3 + length)\n      case 0xc6:\n        // buffers up to 2^32 - 1 bytes\n        length = buf.readUInt32BE(offset + 1)\n        if (!isValidDataSize(length, bufLength, 5)) {\n          return null\n        }\n        result = buf.slice(offset + 5, offset + 5 + length)\n        return buildDecodeResult(result, 5 + length)\n      case 0xdc:\n        // array up to 2^16 elements - 2 bytes\n        if (bufLength < 3) {\n          return null\n        }\n\n        length = buf.readUInt16BE(offset + 1)\n        return decodeArray(buf, offset, length, 3)\n      case 0xdd:\n        // array up to 2^32 elements - 4 bytes\n        if (bufLength < 5) {\n          return null\n        }\n\n        length = buf.readUInt32BE(offset + 1)\n        return decodeArray(buf, offset, length, 5)\n      case 0xde:\n        // maps up to 2^16 elements - 2 bytes\n        length = buf.readUInt16BE(offset + 1)\n        return decodeMap(buf, offset, length, 3)\n      case 0xdf:\n        throw new Error('map too big to decode in JS')\n      case 0xd4:\n        return decodeFixExt(buf, offset, 1)\n      case 0xd5:\n        return decodeFixExt(buf, offset, 2)\n      case 0xd6:\n        return decodeFixExt(buf, offset, 4)\n      case 0xd7:\n        return decodeFixExt(buf, offset, 8)\n      case 0xd8:\n        return decodeFixExt(buf, offset, 16)\n      case 0xc7:\n        // ext up to 2^8 - 1 bytes\n        length = buf.readUInt8(offset + 1)\n        type = buf.readUInt8(offset + 2)\n        if (!isValidDataSize(length, bufLength, 3)) {\n          return null\n        }\n        return decodeExt(buf, offset, type, length, 3)\n      case 0xc8:\n        // ext up to 2^16 - 1 bytes\n        length = buf.readUInt16BE(offset + 1)\n        type = buf.readUInt8(offset + 3)\n        if (!isValidDataSize(length, bufLength, 4)) {\n          return null\n        }\n        return decodeExt(buf, offset, type, length, 4)\n      case 0xc9:\n        // ext up to 2^32 - 1 bytes\n        length = buf.readUInt32BE(offset + 1)\n        type = buf.readUInt8(offset + 5)\n        if (!isValidDataSize(length, bufLength, 6)) {\n          return null\n        }\n        return decodeExt(buf, offset, type, length, 6)\n    }\n\n    if ((first & 0xf0) === 0x90) {\n      // we have an array with less than 15 elements\n      length = first & 0x0f\n      return decodeArray(buf, offset, length, 1)\n    } else if ((first & 0xf0) === 0x80) {\n      // we have a map with less than 15 elements\n      length = first & 0x0f\n      return decodeMap(buf, offset, length, 1)\n    } else if ((first & 0xe0) === 0xa0) {\n      // fixstr up to 31 bytes\n      length = first & 0x1f\n      if (isValidDataSize(length, bufLength, 1)) {\n        result = buf.toString('utf8', offset + 1, offset + length + 1)\n        return buildDecodeResult(result, length + 1)\n      } else {\n        return null\n      }\n    } else if (first >= 0xe0) {\n      // 5 bits negative ints\n      result = first - 0x100\n      return buildDecodeResult(result, 1)\n    } else if (first < 0x80) {\n      // 7-bits positive ints\n      return buildDecodeResult(first, 1)\n    } else {\n      throw new Error('not implemented yet')\n    }\n  }\n\n  function readInt64BE (buf, offset) {\n    var negate = (buf[offset] & 0x80) == 0x80 // eslint-disable-line\n\n    if (negate) {\n      var carry = 1\n      for (var i = offset + 7; i >= offset; i--) {\n        var v = (buf[i] ^ 0xff) + carry\n        buf[i] = v & 0xff\n        carry = v >> 8\n      }\n    }\n\n    var hi = buf.readUInt32BE(offset + 0)\n    var lo = buf.readUInt32BE(offset + 4)\n    return (hi * 4294967296 + lo) * (negate ? -1 : +1)\n  }\n\n  function decodeArray (buf, offset, length, headerLength) {\n    var result = []\n    var i\n    var totalBytesConsumed = 0\n\n    offset += headerLength\n    for (i = 0; i < length; i++) {\n      var decodeResult = tryDecode(buf, offset)\n      if (decodeResult) {\n        result.push(decodeResult.value)\n        offset += decodeResult.bytesConsumed\n        totalBytesConsumed += decodeResult.bytesConsumed\n      } else {\n        return null\n      }\n    }\n    return buildDecodeResult(result, headerLength + totalBytesConsumed)\n  }\n\n  function decodeMap (buf, offset, length, headerLength) {\n    var result = {}\n    var key\n    var i\n    var totalBytesConsumed = 0\n\n    offset += headerLength\n    for (i = 0; i < length; i++) {\n      var keyResult = tryDecode(buf, offset)\n      if (keyResult) {\n        offset += keyResult.bytesConsumed\n        var valueResult = tryDecode(buf, offset)\n        if (valueResult) {\n          key = keyResult.value\n          result[key] = valueResult.value\n          offset += valueResult.bytesConsumed\n          totalBytesConsumed += (keyResult.bytesConsumed + valueResult.bytesConsumed)\n        } else {\n          return null\n        }\n      } else {\n        return null\n      }\n    }\n    return buildDecodeResult(result, headerLength + totalBytesConsumed)\n  }\n\n  function decodeFixExt (buf, offset, size) {\n    var type = buf.readInt8(offset + 1) // Signed\n    return decodeExt(buf, offset, type, size, 2)\n  }\n  function decodeTimestamp (buf, size, headerSize) {\n    var seconds, nanoseconds\n    nanoseconds = 0\n\n    switch (size) {\n      case 4:\n          // timestamp 32 stores the number of seconds that have elapsed since 1970-01-01 00:00:00 UTC in an 32-bit unsigned integer\n        seconds = buf.readUInt32BE(0)\n        break\n\n      case 8: // Timestamp 64 stores the number of seconds and nanoseconds that have elapsed\n                // since 1970-01-01 00:00:00 UTC in 32-bit unsigned integers, split 30/34 bits\n        var upper = buf.readUInt32BE(0)\n        var lower = buf.readUInt32BE(4)\n        nanoseconds = upper / 4\n        seconds = ((upper & 0x03) * Math.pow(2, 32)) + lower // If we use bitwise operators, we get truncated to 32bits\n        break\n\n      case 12:\n        throw new Error('timestamp 96 is not yet implemented')\n    }\n\n    var millis = (seconds * 1000) + Math.round(nanoseconds / 1E6)\n    return buildDecodeResult(new Date(millis), size + headerSize)\n  }\n\n  function decodeExt (buf, offset, type, size, headerSize) {\n    var i,\n      toDecode\n\n    offset += headerSize\n\n    // Pre-defined\n    if (type < 0) { // Reserved for future extensions\n      switch (type) {\n        case -1: // Tiemstamp https://github.com/msgpack/msgpack/blob/master/spec.md#timestamp-extension-type\n          toDecode = buf.slice(offset, offset + size)\n          return decodeTimestamp(toDecode, size, headerSize)\n      }\n    }\n\n    for (i = 0; i < decodingTypes.length; i++) {\n      if (type === decodingTypes[i].type) {\n        toDecode = buf.slice(offset, offset + size)\n        var value = decodingTypes[i].decode(toDecode)\n        return buildDecodeResult(value, headerSize + size)\n      }\n    }\n\n    throw new Error('unable to find ext type ' + type)\n  }\n}\n\nmodule.exports.IncompleteBufferError = IncompleteBufferError\n","'use strict'\n\nvar Buffer = require('safe-buffer').Buffer\nvar bl = require('bl')\nvar TOLERANCE = 0.1\n\nmodule.exports = function buildEncode (encodingTypes, forceFloat64, compatibilityMode, disableTimestampEncoding) {\n  function encode (obj, avoidSlice) {\n    var buf,\n      len\n\n    if (obj === undefined) {\n      throw new Error('undefined is not encodable in msgpack!')\n    } else if (obj === null) {\n      buf = Buffer.allocUnsafe(1)\n      buf[0] = 0xc0\n    } else if (obj === true) {\n      buf = Buffer.allocUnsafe(1)\n      buf[0] = 0xc3\n    } else if (obj === false) {\n      buf = Buffer.allocUnsafe(1)\n      buf[0] = 0xc2\n    } else if (typeof obj === 'string') {\n      len = Buffer.byteLength(obj)\n      if (len < 32) {\n        buf = Buffer.allocUnsafe(1 + len)\n        buf[0] = 0xa0 | len\n        if (len > 0) {\n          buf.write(obj, 1)\n        }\n      } else if (len <= 0xff && !compatibilityMode) {\n        // str8, but only when not in compatibility mode\n        buf = Buffer.allocUnsafe(2 + len)\n        buf[0] = 0xd9\n        buf[1] = len\n        buf.write(obj, 2)\n      } else if (len <= 0xffff) {\n        buf = Buffer.allocUnsafe(3 + len)\n        buf[0] = 0xda\n        buf.writeUInt16BE(len, 1)\n        buf.write(obj, 3)\n      } else {\n        buf = Buffer.allocUnsafe(5 + len)\n        buf[0] = 0xdb\n        buf.writeUInt32BE(len, 1)\n        buf.write(obj, 5)\n      }\n    } else if (obj && (obj.readUInt32LE || obj instanceof Uint8Array)) {\n      if (obj instanceof Uint8Array) {\n        obj = Buffer.from(obj)\n      }\n      // weird hack to support Buffer\n      // and Buffer-like objects\n      if (obj.length <= 0xff) {\n        buf = Buffer.allocUnsafe(2)\n        buf[0] = 0xc4\n        buf[1] = obj.length\n      } else if (obj.length <= 0xffff) {\n        buf = Buffer.allocUnsafe(3)\n        buf[0] = 0xc5\n        buf.writeUInt16BE(obj.length, 1)\n      } else {\n        buf = Buffer.allocUnsafe(5)\n        buf[0] = 0xc6\n        buf.writeUInt32BE(obj.length, 1)\n      }\n\n      buf = bl([buf, obj])\n    } else if (Array.isArray(obj)) {\n      if (obj.length < 16) {\n        buf = Buffer.allocUnsafe(1)\n        buf[0] = 0x90 | obj.length\n      } else if (obj.length < 65536) {\n        buf = Buffer.allocUnsafe(3)\n        buf[0] = 0xdc\n        buf.writeUInt16BE(obj.length, 1)\n      } else {\n        buf = Buffer.allocUnsafe(5)\n        buf[0] = 0xdd\n        buf.writeUInt32BE(obj.length, 1)\n      }\n\n      buf = obj.reduce(function (acc, obj) {\n        acc.append(encode(obj, true))\n        return acc\n      }, bl().append(buf))\n    } else if (!disableTimestampEncoding && typeof obj.getDate === 'function') {\n      return encodeDate(obj)\n    } else if (typeof obj === 'object') {\n      buf = encodeExt(obj) || encodeObject(obj)\n    } else if (typeof obj === 'number') {\n      if (isFloat(obj)) {\n        return encodeFloat(obj, forceFloat64)\n      } else if (obj >= 0) {\n        if (obj < 128) {\n          buf = Buffer.allocUnsafe(1)\n          buf[0] = obj\n        } else if (obj < 256) {\n          buf = Buffer.allocUnsafe(2)\n          buf[0] = 0xcc\n          buf[1] = obj\n        } else if (obj < 65536) {\n          buf = Buffer.allocUnsafe(3)\n          buf[0] = 0xcd\n          buf.writeUInt16BE(obj, 1)\n        } else if (obj <= 0xffffffff) {\n          buf = Buffer.allocUnsafe(5)\n          buf[0] = 0xce\n          buf.writeUInt32BE(obj, 1)\n        } else if (obj <= 9007199254740991) {\n          buf = Buffer.allocUnsafe(9)\n          buf[0] = 0xcf\n          write64BitUint(buf, obj)\n        } else {\n          return encodeFloat(obj, true)\n        }\n      } else {\n        if (obj >= -32) {\n          buf = Buffer.allocUnsafe(1)\n          buf[0] = 0x100 + obj\n        } else if (obj >= -128) {\n          buf = Buffer.allocUnsafe(2)\n          buf[0] = 0xd0\n          buf.writeInt8(obj, 1)\n        } else if (obj >= -32768) {\n          buf = Buffer.allocUnsafe(3)\n          buf[0] = 0xd1\n          buf.writeInt16BE(obj, 1)\n        } else if (obj > -214748365) {\n          buf = Buffer.allocUnsafe(5)\n          buf[0] = 0xd2\n          buf.writeInt32BE(obj, 1)\n        } else if (obj >= -9007199254740991) {\n          buf = Buffer.allocUnsafe(9)\n          buf[0] = 0xd3\n          write64BitInt(buf, 1, obj)\n        } else {\n          return encodeFloat(obj, true)\n        }\n      }\n    }\n\n    if (!buf) {\n      throw new Error('not implemented yet')\n    }\n\n    if (avoidSlice) {\n      return buf\n    } else {\n      return buf.slice()\n    }\n  }\n\n  function encodeDate (dt) {\n    var encoded\n    var millis = dt * 1\n    var seconds = Math.floor(millis / 1000)\n    var nanos = (millis - (seconds * 1000)) * 1E6\n\n    if (nanos || seconds > 0xFFFFFFFF) {\n        // Timestamp64\n      encoded = new Buffer(10)\n      encoded[0] = 0xd7\n      encoded[1] = -1\n\n      var upperNanos = ((nanos * 4))\n      var upperSeconds = seconds / Math.pow(2, 32)\n      var upper = (upperNanos + upperSeconds) & 0xFFFFFFFF\n      var lower = seconds & 0xFFFFFFFF\n\n      encoded.writeInt32BE(upper, 2)\n      encoded.writeInt32BE(lower, 6)\n    } else {\n        // Timestamp32\n      encoded = new Buffer(6)\n      encoded[0] = 0xd6\n      encoded[1] = -1\n      encoded.writeUInt32BE(Math.floor(millis / 1000), 2)\n    }\n    return bl().append(encoded)\n  }\n\n  function encodeExt (obj) {\n    var i\n    var encoded\n    var length = -1\n    var headers = []\n\n    for (i = 0; i < encodingTypes.length; i++) {\n      if (encodingTypes[i].check(obj)) {\n        encoded = encodingTypes[i].encode(obj)\n        break\n      }\n    }\n\n    if (!encoded) {\n      return null\n    }\n\n    // we subtract 1 because the length does not\n    // include the type\n    length = encoded.length - 1\n\n    if (length === 1) {\n      headers.push(0xd4)\n    } else if (length === 2) {\n      headers.push(0xd5)\n    } else if (length === 4) {\n      headers.push(0xd6)\n    } else if (length === 8) {\n      headers.push(0xd7)\n    } else if (length === 16) {\n      headers.push(0xd8)\n    } else if (length < 256) {\n      headers.push(0xc7)\n      headers.push(length)\n    } else if (length < 0x10000) {\n      headers.push(0xc8)\n      headers.push(length >> 8)\n      headers.push(length & 0x00ff)\n    } else {\n      headers.push(0xc9)\n      headers.push(length >> 24)\n      headers.push((length >> 16) & 0x000000ff)\n      headers.push((length >> 8) & 0x000000ff)\n      headers.push(length & 0x000000ff)\n    }\n\n    return bl().append(Buffer.from(headers)).append(encoded)\n  }\n\n  function encodeObject (obj) {\n    var acc = []\n    var length = 0\n    var key\n    var header\n\n    for (key in obj) {\n      if (obj.hasOwnProperty(key) &&\n        obj[key] !== undefined &&\n        typeof obj[key] !== 'function') {\n        ++length\n        acc.push(encode(key, true))\n        acc.push(encode(obj[key], true))\n      }\n    }\n\n    if (length < 16) {\n      header = Buffer.allocUnsafe(1)\n      header[0] = 0x80 | length\n    } else {\n      header = Buffer.allocUnsafe(3)\n      header[0] = 0xde\n      header.writeUInt16BE(length, 1)\n    }\n\n    acc.unshift(header)\n\n    var result = acc.reduce(function (list, buf) {\n      return list.append(buf)\n    }, bl())\n\n    return result\n  }\n\n  return encode\n}\n\nfunction write64BitUint (buf, obj) {\n  // Write long byte by byte, in big-endian order\n  for (var currByte = 7; currByte >= 0; currByte--) {\n    buf[currByte + 1] = (obj & 0xff)\n    obj = obj / 256\n  }\n}\n\nfunction write64BitInt (buf, offset, num) {\n  var negate = num < 0\n\n  if (negate) {\n    num = Math.abs(num)\n  }\n\n  var lo = num % 4294967296\n  var hi = num / 4294967296\n  buf.writeUInt32BE(Math.floor(hi), offset + 0)\n  buf.writeUInt32BE(lo, offset + 4)\n\n  if (negate) {\n    var carry = 1\n    for (var i = offset + 7; i >= offset; i--) {\n      var v = (buf[i] ^ 0xff) + carry\n      buf[i] = v & 0xff\n      carry = v >> 8\n    }\n  }\n}\n\nfunction isFloat (n) {\n  return n !== Math.floor(n)\n}\n\nfunction encodeFloat (obj, forceFloat64) {\n  var buf\n\n  buf = Buffer.allocUnsafe(5)\n  buf[0] = 0xca\n  buf.writeFloatBE(obj, 1)\n\n  // FIXME is there a way to check if a\n  // value fits in a float?\n  if (forceFloat64 || Math.abs(obj - buf.readFloatBE(1)) > TOLERANCE) {\n    buf = Buffer.allocUnsafe(9)\n    buf[0] = 0xcb\n    buf.writeDoubleBE(obj, 1)\n  }\n\n  return buf\n}\n","'use strict'\n\nvar Transform = require('readable-stream').Transform\nvar inherits = require('inherits')\nvar bl = require('bl')\n\nfunction Base (opts) {\n  opts = opts || {}\n\n  opts.objectMode = true\n  opts.highWaterMark = 16\n\n  Transform.call(this, opts)\n\n  this._msgpack = opts.msgpack\n}\n\ninherits(Base, Transform)\n\nfunction Encoder (opts) {\n  if (!(this instanceof Encoder)) {\n    opts = opts || {}\n    opts.msgpack = this\n    return new Encoder(opts)\n  }\n\n  Base.call(this, opts)\n}\n\ninherits(Encoder, Base)\n\nEncoder.prototype._transform = function (obj, enc, done) {\n  var buf = null\n\n  try {\n    buf = this._msgpack.encode(obj).slice(0)\n  } catch (err) {\n    this.emit('error', err)\n    return done()\n  }\n\n  this.push(buf)\n  done()\n}\n\nfunction Decoder (opts) {\n  if (!(this instanceof Decoder)) {\n    opts = opts || {}\n    opts.msgpack = this\n    return new Decoder(opts)\n  }\n\n  Base.call(this, opts)\n\n  this._chunks = bl()\n}\n\ninherits(Decoder, Base)\n\nDecoder.prototype._transform = function (buf, enc, done) {\n  if (buf) {\n    this._chunks.append(buf)\n  }\n\n  try {\n    var result = this._msgpack.decode(this._chunks)\n    this.push(result)\n  } catch (err) {\n    if (err instanceof this._msgpack.IncompleteBufferError) {\n      done()\n    } else {\n      this.emit('error', err)\n    }\n    return\n  }\n\n  if (this._chunks.length > 0) {\n    this._transform(null, enc, done)\n  } else {\n    done()\n  }\n}\n\nmodule.exports.decoder = Decoder\nmodule.exports.encoder = Encoder\n","'use strict';\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n","module.exports = require('./lib/_stream_duplex.js');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}","'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};","module.exports = require('events').EventEmitter;\n","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\n// Rough polyfill of https://developer.mozilla.org/en-US/docs/Web/API/AbortController\n// We don't actually ever use the API being polyfilled, we always use the polyfill because\n// it's a very new API right now.\n// Not exported from index.\n/** @private */\nvar AbortController = /** @class */ (function () {\n    function AbortController() {\n        this.isAborted = false;\n        this.onabort = null;\n    }\n    AbortController.prototype.abort = function () {\n        if (!this.isAborted) {\n            this.isAborted = true;\n            if (this.onabort) {\n                this.onabort();\n            }\n        }\n    };\n    Object.defineProperty(AbortController.prototype, \"signal\", {\n        get: function () {\n            return this;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbortController.prototype, \"aborted\", {\n        get: function () {\n            return this.isAborted;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return AbortController;\n}());\nexport { AbortController };\n//# sourceMappingURL=AbortController.js.map","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { AbortError } from \"./Errors\";\nimport { HttpClient } from \"./HttpClient\";\nimport { NodeHttpClient } from \"./NodeHttpClient\";\nimport { XhrHttpClient } from \"./XhrHttpClient\";\n/** Default implementation of {@link @microsoft/signalr.HttpClient}. */\nvar DefaultHttpClient = /** @class */ (function (_super) {\n    __extends(DefaultHttpClient, _super);\n    /** Creates a new instance of the {@link @microsoft/signalr.DefaultHttpClient}, using the provided {@link @microsoft/signalr.ILogger} to log messages. */\n    function DefaultHttpClient(logger) {\n        var _this = _super.call(this) || this;\n        if (typeof XMLHttpRequest !== \"undefined\") {\n            _this.httpClient = new XhrHttpClient(logger);\n        }\n        else {\n            _this.httpClient = new NodeHttpClient(logger);\n        }\n        return _this;\n    }\n    /** @inheritDoc */\n    DefaultHttpClient.prototype.send = function (request) {\n        // Check that abort was not signaled before calling send\n        if (request.abortSignal && request.abortSignal.aborted) {\n            return Promise.reject(new AbortError());\n        }\n        if (!request.method) {\n            return Promise.reject(new Error(\"No method defined.\"));\n        }\n        if (!request.url) {\n            return Promise.reject(new Error(\"No url defined.\"));\n        }\n        return this.httpClient.send(request);\n    };\n    DefaultHttpClient.prototype.getCookieString = function (url) {\n        return this.httpClient.getCookieString(url);\n    };\n    return DefaultHttpClient;\n}(HttpClient));\nexport { DefaultHttpClient };\n//# sourceMappingURL=DefaultHttpClient.js.map","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\n// 0, 2, 10, 30 second delays before reconnect attempts.\nvar DEFAULT_RETRY_DELAYS_IN_MILLISECONDS = [0, 2000, 10000, 30000, null];\n/** @private */\nvar DefaultReconnectPolicy = /** @class */ (function () {\n    function DefaultReconnectPolicy(retryDelays) {\n        this.retryDelays = retryDelays !== undefined ? retryDelays.concat([null]) : DEFAULT_RETRY_DELAYS_IN_MILLISECONDS;\n    }\n    DefaultReconnectPolicy.prototype.nextRetryDelayInMilliseconds = function (retryContext) {\n        return this.retryDelays[retryContext.previousRetryCount];\n    };\n    return DefaultReconnectPolicy;\n}());\nexport { DefaultReconnectPolicy };\n//# sourceMappingURL=DefaultReconnectPolicy.js.map","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/** Error thrown when an HTTP request fails. */\nvar HttpError = /** @class */ (function (_super) {\n    __extends(HttpError, _super);\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpError}.\n     *\n     * @param {string} errorMessage A descriptive error message.\n     * @param {number} statusCode The HTTP status code represented by this error.\n     */\n    function HttpError(errorMessage, statusCode) {\n        var _newTarget = this.constructor;\n        var _this = this;\n        var trueProto = _newTarget.prototype;\n        _this = _super.call(this, errorMessage) || this;\n        _this.statusCode = statusCode;\n        // Workaround issue in Typescript compiler\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\n        _this.__proto__ = trueProto;\n        return _this;\n    }\n    return HttpError;\n}(Error));\nexport { HttpError };\n/** Error thrown when a timeout elapses. */\nvar TimeoutError = /** @class */ (function (_super) {\n    __extends(TimeoutError, _super);\n    /** Constructs a new instance of {@link @microsoft/signalr.TimeoutError}.\n     *\n     * @param {string} errorMessage A descriptive error message.\n     */\n    function TimeoutError(errorMessage) {\n        var _newTarget = this.constructor;\n        if (errorMessage === void 0) { errorMessage = \"A timeout occurred.\"; }\n        var _this = this;\n        var trueProto = _newTarget.prototype;\n        _this = _super.call(this, errorMessage) || this;\n        // Workaround issue in Typescript compiler\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\n        _this.__proto__ = trueProto;\n        return _this;\n    }\n    return TimeoutError;\n}(Error));\nexport { TimeoutError };\n/** Error thrown when an action is aborted. */\nvar AbortError = /** @class */ (function (_super) {\n    __extends(AbortError, _super);\n    /** Constructs a new instance of {@link AbortError}.\n     *\n     * @param {string} errorMessage A descriptive error message.\n     */\n    function AbortError(errorMessage) {\n        var _newTarget = this.constructor;\n        if (errorMessage === void 0) { errorMessage = \"An abort occurred.\"; }\n        var _this = this;\n        var trueProto = _newTarget.prototype;\n        _this = _super.call(this, errorMessage) || this;\n        // Workaround issue in Typescript compiler\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\n        _this.__proto__ = trueProto;\n        return _this;\n    }\n    return AbortError;\n}(Error));\nexport { AbortError };\n//# sourceMappingURL=Errors.js.map","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\nimport { TextMessageFormat } from \"./TextMessageFormat\";\nimport { isArrayBuffer } from \"./Utils\";\n/** @private */\nvar HandshakeProtocol = /** @class */ (function () {\n    function HandshakeProtocol() {\n    }\n    // Handshake request is always JSON\n    HandshakeProtocol.prototype.writeHandshakeRequest = function (handshakeRequest) {\n        return TextMessageFormat.write(JSON.stringify(handshakeRequest));\n    };\n    HandshakeProtocol.prototype.parseHandshakeResponse = function (data) {\n        var responseMessage;\n        var messageData;\n        var remainingData;\n        if (isArrayBuffer(data) || (typeof Buffer !== \"undefined\" && data instanceof Buffer)) {\n            // Format is binary but still need to read JSON text from handshake response\n            var binaryData = new Uint8Array(data);\n            var separatorIndex = binaryData.indexOf(TextMessageFormat.RecordSeparatorCode);\n            if (separatorIndex === -1) {\n                throw new Error(\"Message is incomplete.\");\n            }\n            // content before separator is handshake response\n            // optional content after is additional messages\n            var responseLength = separatorIndex + 1;\n            messageData = String.fromCharCode.apply(null, binaryData.slice(0, responseLength));\n            remainingData = (binaryData.byteLength > responseLength) ? binaryData.slice(responseLength).buffer : null;\n        }\n        else {\n            var textData = data;\n            var separatorIndex = textData.indexOf(TextMessageFormat.RecordSeparator);\n            if (separatorIndex === -1) {\n                throw new Error(\"Message is incomplete.\");\n            }\n            // content before separator is handshake response\n            // optional content after is additional messages\n            var responseLength = separatorIndex + 1;\n            messageData = textData.substring(0, responseLength);\n            remainingData = (textData.length > responseLength) ? textData.substring(responseLength) : null;\n        }\n        // At this point we should have just the single handshake message\n        var messages = TextMessageFormat.parse(messageData);\n        var response = JSON.parse(messages[0]);\n        if (response.type) {\n            throw new Error(\"Expected a handshake response from the server.\");\n        }\n        responseMessage = response;\n        // multiple messages could have arrived with handshake\n        // return additional data to be parsed as usual, or null if all parsed\n        return [remainingData, responseMessage];\n    };\n    return HandshakeProtocol;\n}());\nexport { HandshakeProtocol };\n//# sourceMappingURL=HandshakeProtocol.js.map","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\n/** Represents an HTTP response. */\nvar HttpResponse = /** @class */ (function () {\n    function HttpResponse(statusCode, statusText, content) {\n        this.statusCode = statusCode;\n        this.statusText = statusText;\n        this.content = content;\n    }\n    return HttpResponse;\n}());\nexport { HttpResponse };\n/** Abstraction over an HTTP client.\n *\n * This class provides an abstraction over an HTTP client so that a different implementation can be provided on different platforms.\n */\nvar HttpClient = /** @class */ (function () {\n    function HttpClient() {\n    }\n    HttpClient.prototype.get = function (url, options) {\n        return this.send(__assign({}, options, { method: \"GET\", url: url }));\n    };\n    HttpClient.prototype.post = function (url, options) {\n        return this.send(__assign({}, options, { method: \"POST\", url: url }));\n    };\n    HttpClient.prototype.delete = function (url, options) {\n        return this.send(__assign({}, options, { method: \"DELETE\", url: url }));\n    };\n    /** Gets all cookies that apply to the specified URL.\n     *\n     * @param url The URL that the cookies are valid for.\n     * @returns {string} A string containing all the key-value cookie pairs for the specified URL.\n     */\n    // @ts-ignore\n    HttpClient.prototype.getCookieString = function (url) {\n        return \"\";\n    };\n    return HttpClient;\n}());\nexport { HttpClient };\n//# sourceMappingURL=HttpClient.js.map","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { DefaultHttpClient } from \"./DefaultHttpClient\";\nimport { LogLevel } from \"./ILogger\";\nimport { HttpTransportType, TransferFormat } from \"./ITransport\";\nimport { LongPollingTransport } from \"./LongPollingTransport\";\nimport { ServerSentEventsTransport } from \"./ServerSentEventsTransport\";\nimport { Arg, createLogger, Platform } from \"./Utils\";\nimport { WebSocketTransport } from \"./WebSocketTransport\";\nvar MAX_REDIRECTS = 100;\nvar WebSocketModule = null;\nvar EventSourceModule = null;\nif (Platform.isNode && typeof require !== \"undefined\") {\n    // In order to ignore the dynamic require in webpack builds we need to do this magic\n    // @ts-ignore: TS doesn't know about these names\n    var requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\n    WebSocketModule = requireFunc(\"ws\");\n    EventSourceModule = requireFunc(\"eventsource\");\n}\n/** @private */\nvar HttpConnection = /** @class */ (function () {\n    function HttpConnection(url, options) {\n        if (options === void 0) { options = {}; }\n        this.features = {};\n        Arg.isRequired(url, \"url\");\n        this.logger = createLogger(options.logger);\n        this.baseUrl = this.resolveUrl(url);\n        options = options || {};\n        options.logMessageContent = options.logMessageContent || false;\n        if (!Platform.isNode && typeof WebSocket !== \"undefined\" && !options.WebSocket) {\n            options.WebSocket = WebSocket;\n        }\n        else if (Platform.isNode && !options.WebSocket) {\n            if (WebSocketModule) {\n                options.WebSocket = WebSocketModule;\n            }\n        }\n        if (!Platform.isNode && typeof EventSource !== \"undefined\" && !options.EventSource) {\n            options.EventSource = EventSource;\n        }\n        else if (Platform.isNode && !options.EventSource) {\n            if (typeof EventSourceModule !== \"undefined\") {\n                options.EventSource = EventSourceModule;\n            }\n        }\n        this.httpClient = options.httpClient || new DefaultHttpClient(this.logger);\n        this.connectionState = \"Disconnected\" /* Disconnected */;\n        this.connectionStarted = false;\n        this.options = options;\n        this.onreceive = null;\n        this.onclose = null;\n    }\n    HttpConnection.prototype.start = function (transferFormat) {\n        return __awaiter(this, void 0, void 0, function () {\n            var message, message;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        transferFormat = transferFormat || TransferFormat.Binary;\n                        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\n                        this.logger.log(LogLevel.Debug, \"Starting connection with transfer format '\" + TransferFormat[transferFormat] + \"'.\");\n                        if (this.connectionState !== \"Disconnected\" /* Disconnected */) {\n                            return [2 /*return*/, Promise.reject(new Error(\"Cannot start an HttpConnection that is not in the 'Disconnected' state.\"))];\n                        }\n                        this.connectionState = \"Connecting \" /* Connecting */;\n                        this.startInternalPromise = this.startInternal(transferFormat);\n                        return [4 /*yield*/, this.startInternalPromise];\n                    case 1:\n                        _a.sent();\n                        if (!(this.connectionState === \"Disconnecting\" /* Disconnecting */)) return [3 /*break*/, 3];\n                        message = \"Failed to start the HttpConnection before stop() was called.\";\n                        this.logger.log(LogLevel.Error, message);\n                        // We cannot await stopPromise inside startInternal since stopInternal awaits the startInternalPromise.\n                        return [4 /*yield*/, this.stopPromise];\n                    case 2:\n                        // We cannot await stopPromise inside startInternal since stopInternal awaits the startInternalPromise.\n                        _a.sent();\n                        return [2 /*return*/, Promise.reject(new Error(message))];\n                    case 3:\n                        if (this.connectionState !== \"Connected\" /* Connected */) {\n                            message = \"HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!\";\n                            this.logger.log(LogLevel.Error, message);\n                            return [2 /*return*/, Promise.reject(new Error(message))];\n                        }\n                        _a.label = 4;\n                    case 4:\n                        this.connectionStarted = true;\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    HttpConnection.prototype.send = function (data) {\n        if (this.connectionState !== \"Connected\" /* Connected */) {\n            return Promise.reject(new Error(\"Cannot send data if the connection is not in the 'Connected' State.\"));\n        }\n        if (!this.sendQueue) {\n            this.sendQueue = new TransportSendQueue(this.transport);\n        }\n        // Transport will not be null if state is connected\n        return this.sendQueue.send(data);\n    };\n    HttpConnection.prototype.stop = function (error) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.connectionState === \"Disconnected\" /* Disconnected */) {\n                            this.logger.log(LogLevel.Debug, \"Call to HttpConnection.stop(\" + error + \") ignored because the connection is already in the disconnected state.\");\n                            return [2 /*return*/, Promise.resolve()];\n                        }\n                        if (this.connectionState === \"Disconnecting\" /* Disconnecting */) {\n                            this.logger.log(LogLevel.Debug, \"Call to HttpConnection.stop(\" + error + \") ignored because the connection is already in the disconnecting state.\");\n                            return [2 /*return*/, this.stopPromise];\n                        }\n                        this.connectionState = \"Disconnecting\" /* Disconnecting */;\n                        this.stopPromise = new Promise(function (resolve) {\n                            // Don't complete stop() until stopConnection() completes.\n                            _this.stopPromiseResolver = resolve;\n                        });\n                        // stopInternal should never throw so just observe it.\n                        return [4 /*yield*/, this.stopInternal(error)];\n                    case 1:\n                        // stopInternal should never throw so just observe it.\n                        _a.sent();\n                        return [4 /*yield*/, this.stopPromise];\n                    case 2:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    HttpConnection.prototype.stopInternal = function (error) {\n        return __awaiter(this, void 0, void 0, function () {\n            var e_1, e_2, e_3;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        // Set error as soon as possible otherwise there is a race between\n                        // the transport closing and providing an error and the error from a close message\n                        // We would prefer the close message error.\n                        this.stopError = error;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this.startInternalPromise];\n                    case 2:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        e_1 = _a.sent();\n                        return [3 /*break*/, 4];\n                    case 4:\n                        if (!this.sendQueue) return [3 /*break*/, 9];\n                        _a.label = 5;\n                    case 5:\n                        _a.trys.push([5, 7, , 8]);\n                        return [4 /*yield*/, this.sendQueue.stop()];\n                    case 6:\n                        _a.sent();\n                        return [3 /*break*/, 8];\n                    case 7:\n                        e_2 = _a.sent();\n                        this.logger.log(LogLevel.Error, \"TransportSendQueue.stop() threw error '\" + e_2 + \"'.\");\n                        return [3 /*break*/, 8];\n                    case 8:\n                        this.sendQueue = undefined;\n                        _a.label = 9;\n                    case 9:\n                        if (!this.transport) return [3 /*break*/, 14];\n                        _a.label = 10;\n                    case 10:\n                        _a.trys.push([10, 12, , 13]);\n                        return [4 /*yield*/, this.transport.stop()];\n                    case 11:\n                        _a.sent();\n                        return [3 /*break*/, 13];\n                    case 12:\n                        e_3 = _a.sent();\n                        this.logger.log(LogLevel.Error, \"HttpConnection.transport.stop() threw error '\" + e_3 + \"'.\");\n                        this.stopConnection();\n                        return [3 /*break*/, 13];\n                    case 13:\n                        this.transport = undefined;\n                        return [3 /*break*/, 15];\n                    case 14:\n                        this.logger.log(LogLevel.Debug, \"HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.\");\n                        this.stopConnection();\n                        _a.label = 15;\n                    case 15: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    HttpConnection.prototype.startInternal = function (transferFormat) {\n        return __awaiter(this, void 0, void 0, function () {\n            var url, negotiateResponse, redirects, _loop_1, this_1, e_4;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        url = this.baseUrl;\n                        this.accessTokenFactory = this.options.accessTokenFactory;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 12, , 13]);\n                        if (!this.options.skipNegotiation) return [3 /*break*/, 5];\n                        if (!(this.options.transport === HttpTransportType.WebSockets)) return [3 /*break*/, 3];\n                        // No need to add a connection ID in this case\n                        this.transport = this.constructTransport(HttpTransportType.WebSockets);\n                        // We should just call connect directly in this case.\n                        // No fallback or negotiate in this case.\n                        return [4 /*yield*/, this.startTransport(url, transferFormat)];\n                    case 2:\n                        // We should just call connect directly in this case.\n                        // No fallback or negotiate in this case.\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3: throw new Error(\"Negotiation can only be skipped when using the WebSocket transport directly.\");\n                    case 4: return [3 /*break*/, 11];\n                    case 5:\n                        negotiateResponse = null;\n                        redirects = 0;\n                        _loop_1 = function () {\n                            var accessToken_1;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0: return [4 /*yield*/, this_1.getNegotiationResponse(url)];\n                                    case 1:\n                                        negotiateResponse = _a.sent();\n                                        // the user tries to stop the connection when it is being started\n                                        if (this_1.connectionState === \"Disconnecting\" /* Disconnecting */ || this_1.connectionState === \"Disconnected\" /* Disconnected */) {\n                                            throw new Error(\"The connection was stopped during negotiation.\");\n                                        }\n                                        if (negotiateResponse.error) {\n                                            throw new Error(negotiateResponse.error);\n                                        }\n                                        if (negotiateResponse.ProtocolVersion) {\n                                            throw new Error(\"Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.\");\n                                        }\n                                        if (negotiateResponse.url) {\n                                            url = negotiateResponse.url;\n                                        }\n                                        if (negotiateResponse.accessToken) {\n                                            accessToken_1 = negotiateResponse.accessToken;\n                                            this_1.accessTokenFactory = function () { return accessToken_1; };\n                                        }\n                                        redirects++;\n                                        return [2 /*return*/];\n                                }\n                            });\n                        };\n                        this_1 = this;\n                        _a.label = 6;\n                    case 6: return [5 /*yield**/, _loop_1()];\n                    case 7:\n                        _a.sent();\n                        _a.label = 8;\n                    case 8:\n                        if (negotiateResponse.url && redirects < MAX_REDIRECTS) return [3 /*break*/, 6];\n                        _a.label = 9;\n                    case 9:\n                        if (redirects === MAX_REDIRECTS && negotiateResponse.url) {\n                            throw new Error(\"Negotiate redirection limit exceeded.\");\n                        }\n                        this.connectionId = negotiateResponse.connectionId;\n                        return [4 /*yield*/, this.createTransport(url, this.options.transport, negotiateResponse, transferFormat)];\n                    case 10:\n                        _a.sent();\n                        _a.label = 11;\n                    case 11:\n                        if (this.transport instanceof LongPollingTransport) {\n                            this.features.inherentKeepAlive = true;\n                        }\n                        if (this.connectionState === \"Connecting \" /* Connecting */) {\n                            // Ensure the connection transitions to the connected state prior to completing this.startInternalPromise.\n                            // start() will handle the case when stop was called and startInternal exits still in the disconnecting state.\n                            this.logger.log(LogLevel.Debug, \"The HttpConnection connected successfully.\");\n                            this.connectionState = \"Connected\" /* Connected */;\n                        }\n                        return [3 /*break*/, 13];\n                    case 12:\n                        e_4 = _a.sent();\n                        this.logger.log(LogLevel.Error, \"Failed to start the connection: \" + e_4);\n                        this.connectionState = \"Disconnected\" /* Disconnected */;\n                        this.transport = undefined;\n                        return [2 /*return*/, Promise.reject(e_4)];\n                    case 13: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    HttpConnection.prototype.getNegotiationResponse = function (url) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, headers, token, negotiateUrl, response, e_5;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!this.accessTokenFactory) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.accessTokenFactory()];\n                    case 1:\n                        token = _b.sent();\n                        if (token) {\n                            headers = (_a = {},\n                                _a[\"Authorization\"] = \"Bearer \" + token,\n                                _a);\n                        }\n                        _b.label = 2;\n                    case 2:\n                        negotiateUrl = this.resolveNegotiateUrl(url);\n                        this.logger.log(LogLevel.Debug, \"Sending negotiation request: \" + negotiateUrl + \".\");\n                        _b.label = 3;\n                    case 3:\n                        _b.trys.push([3, 5, , 6]);\n                        return [4 /*yield*/, this.httpClient.post(negotiateUrl, {\n                                content: \"\",\n                                headers: headers,\n                            })];\n                    case 4:\n                        response = _b.sent();\n                        if (response.statusCode !== 200) {\n                            return [2 /*return*/, Promise.reject(new Error(\"Unexpected status code returned from negotiate \" + response.statusCode))];\n                        }\n                        return [2 /*return*/, JSON.parse(response.content)];\n                    case 5:\n                        e_5 = _b.sent();\n                        this.logger.log(LogLevel.Error, \"Failed to complete negotiation with the server: \" + e_5);\n                        return [2 /*return*/, Promise.reject(e_5)];\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    HttpConnection.prototype.createConnectUrl = function (url, connectionId) {\n        if (!connectionId) {\n            return url;\n        }\n        return url + (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + (\"id=\" + connectionId);\n    };\n    HttpConnection.prototype.createTransport = function (url, requestedTransport, negotiateResponse, requestedTransferFormat) {\n        return __awaiter(this, void 0, void 0, function () {\n            var connectUrl, transportExceptions, transports, _i, transports_1, endpoint, transportOrError, ex_1, ex_2, message;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        connectUrl = this.createConnectUrl(url, negotiateResponse.connectionId);\n                        if (!this.isITransport(requestedTransport)) return [3 /*break*/, 2];\n                        this.logger.log(LogLevel.Debug, \"Connection was provided an instance of ITransport, using that directly.\");\n                        this.transport = requestedTransport;\n                        return [4 /*yield*/, this.startTransport(connectUrl, requestedTransferFormat)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                    case 2:\n                        transportExceptions = [];\n                        transports = negotiateResponse.availableTransports || [];\n                        _i = 0, transports_1 = transports;\n                        _a.label = 3;\n                    case 3:\n                        if (!(_i < transports_1.length)) return [3 /*break*/, 13];\n                        endpoint = transports_1[_i];\n                        transportOrError = this.resolveTransportOrError(endpoint, requestedTransport, requestedTransferFormat);\n                        if (!(transportOrError instanceof Error)) return [3 /*break*/, 4];\n                        // Store the error and continue, we don't want to cause a re-negotiate in these cases\n                        transportExceptions.push(endpoint.transport + \" failed: \" + transportOrError);\n                        return [3 /*break*/, 12];\n                    case 4:\n                        if (!this.isITransport(transportOrError)) return [3 /*break*/, 12];\n                        this.transport = transportOrError;\n                        if (!!negotiateResponse.connectionId) return [3 /*break*/, 9];\n                        _a.label = 5;\n                    case 5:\n                        _a.trys.push([5, 7, , 8]);\n                        return [4 /*yield*/, this.getNegotiationResponse(url)];\n                    case 6:\n                        negotiateResponse = _a.sent();\n                        return [3 /*break*/, 8];\n                    case 7:\n                        ex_1 = _a.sent();\n                        return [2 /*return*/, Promise.reject(ex_1)];\n                    case 8:\n                        connectUrl = this.createConnectUrl(url, negotiateResponse.connectionId);\n                        _a.label = 9;\n                    case 9:\n                        _a.trys.push([9, 11, , 12]);\n                        return [4 /*yield*/, this.startTransport(connectUrl, requestedTransferFormat)];\n                    case 10:\n                        _a.sent();\n                        return [2 /*return*/];\n                    case 11:\n                        ex_2 = _a.sent();\n                        this.logger.log(LogLevel.Error, \"Failed to start the transport '\" + endpoint.transport + \"': \" + ex_2);\n                        negotiateResponse.connectionId = undefined;\n                        transportExceptions.push(endpoint.transport + \" failed: \" + ex_2);\n                        if (this.connectionState !== \"Connecting \" /* Connecting */) {\n                            message = \"Failed to select transport before stop() was called.\";\n                            this.logger.log(LogLevel.Debug, message);\n                            return [2 /*return*/, Promise.reject(new Error(message))];\n                        }\n                        return [3 /*break*/, 12];\n                    case 12:\n                        _i++;\n                        return [3 /*break*/, 3];\n                    case 13:\n                        if (transportExceptions.length > 0) {\n                            return [2 /*return*/, Promise.reject(new Error(\"Unable to connect to the server with any of the available transports. \" + transportExceptions.join(\" \")))];\n                        }\n                        return [2 /*return*/, Promise.reject(new Error(\"None of the transports supported by the client are supported by the server.\"))];\n                }\n            });\n        });\n    };\n    HttpConnection.prototype.constructTransport = function (transport) {\n        switch (transport) {\n            case HttpTransportType.WebSockets:\n                if (!this.options.WebSocket) {\n                    throw new Error(\"'WebSocket' is not supported in your environment.\");\n                }\n                return new WebSocketTransport(this.httpClient, this.accessTokenFactory, this.logger, this.options.logMessageContent || false, this.options.WebSocket);\n            case HttpTransportType.ServerSentEvents:\n                if (!this.options.EventSource) {\n                    throw new Error(\"'EventSource' is not supported in your environment.\");\n                }\n                return new ServerSentEventsTransport(this.httpClient, this.accessTokenFactory, this.logger, this.options.logMessageContent || false, this.options.EventSource);\n            case HttpTransportType.LongPolling:\n                return new LongPollingTransport(this.httpClient, this.accessTokenFactory, this.logger, this.options.logMessageContent || false);\n            default:\n                throw new Error(\"Unknown transport: \" + transport + \".\");\n        }\n    };\n    HttpConnection.prototype.startTransport = function (url, transferFormat) {\n        var _this = this;\n        this.transport.onreceive = this.onreceive;\n        this.transport.onclose = function (e) { return _this.stopConnection(e); };\n        return this.transport.connect(url, transferFormat);\n    };\n    HttpConnection.prototype.resolveTransportOrError = function (endpoint, requestedTransport, requestedTransferFormat) {\n        var transport = HttpTransportType[endpoint.transport];\n        if (transport === null || transport === undefined) {\n            this.logger.log(LogLevel.Debug, \"Skipping transport '\" + endpoint.transport + \"' because it is not supported by this client.\");\n            return new Error(\"Skipping transport '\" + endpoint.transport + \"' because it is not supported by this client.\");\n        }\n        else {\n            if (transportMatches(requestedTransport, transport)) {\n                var transferFormats = endpoint.transferFormats.map(function (s) { return TransferFormat[s]; });\n                if (transferFormats.indexOf(requestedTransferFormat) >= 0) {\n                    if ((transport === HttpTransportType.WebSockets && !this.options.WebSocket) ||\n                        (transport === HttpTransportType.ServerSentEvents && !this.options.EventSource)) {\n                        this.logger.log(LogLevel.Debug, \"Skipping transport '\" + HttpTransportType[transport] + \"' because it is not supported in your environment.'\");\n                        return new Error(\"'\" + HttpTransportType[transport] + \"' is not supported in your environment.\");\n                    }\n                    else {\n                        this.logger.log(LogLevel.Debug, \"Selecting transport '\" + HttpTransportType[transport] + \"'.\");\n                        try {\n                            return this.constructTransport(transport);\n                        }\n                        catch (ex) {\n                            return ex;\n                        }\n                    }\n                }\n                else {\n                    this.logger.log(LogLevel.Debug, \"Skipping transport '\" + HttpTransportType[transport] + \"' because it does not support the requested transfer format '\" + TransferFormat[requestedTransferFormat] + \"'.\");\n                    return new Error(\"'\" + HttpTransportType[transport] + \"' does not support \" + TransferFormat[requestedTransferFormat] + \".\");\n                }\n            }\n            else {\n                this.logger.log(LogLevel.Debug, \"Skipping transport '\" + HttpTransportType[transport] + \"' because it was disabled by the client.\");\n                return new Error(\"'\" + HttpTransportType[transport] + \"' is disabled by the client.\");\n            }\n        }\n    };\n    HttpConnection.prototype.isITransport = function (transport) {\n        return transport && typeof (transport) === \"object\" && \"connect\" in transport;\n    };\n    HttpConnection.prototype.stopConnection = function (error) {\n        this.logger.log(LogLevel.Debug, \"HttpConnection.stopConnection(\" + error + \") called while in state \" + this.connectionState + \".\");\n        this.transport = undefined;\n        // If we have a stopError, it takes precedence over the error from the transport\n        error = this.stopError || error;\n        this.stopError = undefined;\n        if (this.connectionState === \"Disconnected\" /* Disconnected */) {\n            this.logger.log(LogLevel.Debug, \"Call to HttpConnection.stopConnection(\" + error + \") was ignored because the connection is already in the disconnected state.\");\n            return;\n        }\n        if (this.connectionState === \"Connecting \" /* Connecting */) {\n            this.logger.log(LogLevel.Warning, \"Call to HttpConnection.stopConnection(\" + error + \") was ignored because the connection hasn't yet left the in the connecting state.\");\n            return;\n        }\n        if (this.connectionState === \"Disconnecting\" /* Disconnecting */) {\n            // A call to stop() induced this call to stopConnection and needs to be completed.\n            // Any stop() awaiters will be scheduled to continue after the onclose callback fires.\n            this.stopPromiseResolver();\n        }\n        if (error) {\n            this.logger.log(LogLevel.Error, \"Connection disconnected with error '\" + error + \"'.\");\n        }\n        else {\n            this.logger.log(LogLevel.Information, \"Connection disconnected.\");\n        }\n        this.connectionId = undefined;\n        this.connectionState = \"Disconnected\" /* Disconnected */;\n        if (this.onclose && this.connectionStarted) {\n            this.connectionStarted = false;\n            try {\n                this.onclose(error);\n            }\n            catch (e) {\n                this.logger.log(LogLevel.Error, \"HttpConnection.onclose(\" + error + \") threw error '\" + e + \"'.\");\n            }\n        }\n    };\n    HttpConnection.prototype.resolveUrl = function (url) {\n        // startsWith is not supported in IE\n        if (url.lastIndexOf(\"https://\", 0) === 0 || url.lastIndexOf(\"http://\", 0) === 0) {\n            return url;\n        }\n        if (!Platform.isBrowser || !window.document) {\n            throw new Error(\"Cannot resolve '\" + url + \"'.\");\n        }\n        // Setting the url to the href propery of an anchor tag handles normalization\n        // for us. There are 3 main cases.\n        // 1. Relative  path normalization e.g \"b\" -> \"http://localhost:5000/a/b\"\n        // 2. Absolute path normalization e.g \"/a/b\" -> \"http://localhost:5000/a/b\"\n        // 3. Networkpath reference normalization e.g \"//localhost:5000/a/b\" -> \"http://localhost:5000/a/b\"\n        var aTag = window.document.createElement(\"a\");\n        aTag.href = url;\n        this.logger.log(LogLevel.Information, \"Normalizing '\" + url + \"' to '\" + aTag.href + \"'.\");\n        return aTag.href;\n    };\n    HttpConnection.prototype.resolveNegotiateUrl = function (url) {\n        var index = url.indexOf(\"?\");\n        var negotiateUrl = url.substring(0, index === -1 ? url.length : index);\n        if (negotiateUrl[negotiateUrl.length - 1] !== \"/\") {\n            negotiateUrl += \"/\";\n        }\n        negotiateUrl += \"negotiate\";\n        negotiateUrl += index === -1 ? \"\" : url.substring(index);\n        return negotiateUrl;\n    };\n    return HttpConnection;\n}());\nexport { HttpConnection };\nfunction transportMatches(requestedTransport, actualTransport) {\n    return !requestedTransport || ((actualTransport & requestedTransport) !== 0);\n}\nvar TransportSendQueue = /** @class */ (function () {\n    function TransportSendQueue(transport) {\n        this.transport = transport;\n        this.buffer = [];\n        this.executing = true;\n        this.sendBufferedData = new PromiseSource();\n        this.transportResult = new PromiseSource();\n        this.sendLoopPromise = this.sendLoop();\n    }\n    TransportSendQueue.prototype.send = function (data) {\n        this.bufferData(data);\n        if (!this.transportResult) {\n            this.transportResult = new PromiseSource();\n        }\n        return this.transportResult.promise;\n    };\n    TransportSendQueue.prototype.stop = function () {\n        this.executing = false;\n        this.sendBufferedData.resolve();\n        return this.sendLoopPromise;\n    };\n    TransportSendQueue.prototype.bufferData = function (data) {\n        if (this.buffer.length && typeof (this.buffer[0]) !== typeof (data)) {\n            throw new Error(\"Expected data to be of type \" + typeof (this.buffer) + \" but was of type \" + typeof (data));\n        }\n        this.buffer.push(data);\n        this.sendBufferedData.resolve();\n    };\n    TransportSendQueue.prototype.sendLoop = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var transportResult, data, error_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!true) return [3 /*break*/, 6];\n                        return [4 /*yield*/, this.sendBufferedData.promise];\n                    case 1:\n                        _a.sent();\n                        if (!this.executing) {\n                            if (this.transportResult) {\n                                this.transportResult.reject(\"Connection stopped.\");\n                            }\n                            return [3 /*break*/, 6];\n                        }\n                        this.sendBufferedData = new PromiseSource();\n                        transportResult = this.transportResult;\n                        this.transportResult = undefined;\n                        data = typeof (this.buffer[0]) === \"string\" ?\n                            this.buffer.join(\"\") :\n                            TransportSendQueue.concatBuffers(this.buffer);\n                        this.buffer.length = 0;\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 4, , 5]);\n                        return [4 /*yield*/, this.transport.send(data)];\n                    case 3:\n                        _a.sent();\n                        transportResult.resolve();\n                        return [3 /*break*/, 5];\n                    case 4:\n                        error_1 = _a.sent();\n                        transportResult.reject(error_1);\n                        return [3 /*break*/, 5];\n                    case 5: return [3 /*break*/, 0];\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    TransportSendQueue.concatBuffers = function (arrayBuffers) {\n        var totalLength = arrayBuffers.map(function (b) { return b.byteLength; }).reduce(function (a, b) { return a + b; });\n        var result = new Uint8Array(totalLength);\n        var offset = 0;\n        for (var _i = 0, arrayBuffers_1 = arrayBuffers; _i < arrayBuffers_1.length; _i++) {\n            var item = arrayBuffers_1[_i];\n            result.set(new Uint8Array(item), offset);\n            offset += item.byteLength;\n        }\n        return result;\n    };\n    return TransportSendQueue;\n}());\nexport { TransportSendQueue };\nvar PromiseSource = /** @class */ (function () {\n    function PromiseSource() {\n        var _this = this;\n        this.promise = new Promise(function (resolve, reject) {\n            var _a;\n            return _a = [resolve, reject], _this.resolver = _a[0], _this.rejecter = _a[1], _a;\n        });\n    }\n    PromiseSource.prototype.resolve = function () {\n        this.resolver();\n    };\n    PromiseSource.prototype.reject = function (reason) {\n        this.rejecter(reason);\n    };\n    return PromiseSource;\n}());\n//# sourceMappingURL=HttpConnection.js.map","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { HandshakeProtocol } from \"./HandshakeProtocol\";\nimport { MessageType } from \"./IHubProtocol\";\nimport { LogLevel } from \"./ILogger\";\nimport { Subject } from \"./Subject\";\nimport { Arg } from \"./Utils\";\nvar DEFAULT_TIMEOUT_IN_MS = 30 * 1000;\nvar DEFAULT_PING_INTERVAL_IN_MS = 15 * 1000;\n/** Describes the current state of the {@link HubConnection} to the server. */\nexport var HubConnectionState;\n(function (HubConnectionState) {\n    /** The hub connection is disconnected. */\n    HubConnectionState[\"Disconnected\"] = \"Disconnected\";\n    /** The hub connection is connecting. */\n    HubConnectionState[\"Connecting\"] = \"Connecting\";\n    /** The hub connection is connected. */\n    HubConnectionState[\"Connected\"] = \"Connected\";\n    /** The hub connection is disconnecting. */\n    HubConnectionState[\"Disconnecting\"] = \"Disconnecting\";\n    /** The hub connection is reconnecting. */\n    HubConnectionState[\"Reconnecting\"] = \"Reconnecting\";\n})(HubConnectionState || (HubConnectionState = {}));\n/** Represents a connection to a SignalR Hub. */\nvar HubConnection = /** @class */ (function () {\n    function HubConnection(connection, logger, protocol, reconnectPolicy) {\n        var _this = this;\n        Arg.isRequired(connection, \"connection\");\n        Arg.isRequired(logger, \"logger\");\n        Arg.isRequired(protocol, \"protocol\");\n        this.serverTimeoutInMilliseconds = DEFAULT_TIMEOUT_IN_MS;\n        this.keepAliveIntervalInMilliseconds = DEFAULT_PING_INTERVAL_IN_MS;\n        this.logger = logger;\n        this.protocol = protocol;\n        this.connection = connection;\n        this.reconnectPolicy = reconnectPolicy;\n        this.handshakeProtocol = new HandshakeProtocol();\n        this.connection.onreceive = function (data) { return _this.processIncomingData(data); };\n        this.connection.onclose = function (error) { return _this.connectionClosed(error); };\n        this.callbacks = {};\n        this.methods = {};\n        this.closedCallbacks = [];\n        this.reconnectingCallbacks = [];\n        this.reconnectedCallbacks = [];\n        this.invocationId = 0;\n        this.receivedHandshakeResponse = false;\n        this.connectionState = HubConnectionState.Disconnected;\n        this.connectionStarted = false;\n        this.cachedPingMessage = this.protocol.writeMessage({ type: MessageType.Ping });\n    }\n    /** @internal */\n    // Using a public static factory method means we can have a private constructor and an _internal_\n    // create method that can be used by HubConnectionBuilder. An \"internal\" constructor would just\n    // be stripped away and the '.d.ts' file would have no constructor, which is interpreted as a\n    // public parameter-less constructor.\n    HubConnection.create = function (connection, logger, protocol, reconnectPolicy) {\n        return new HubConnection(connection, logger, protocol, reconnectPolicy);\n    };\n    Object.defineProperty(HubConnection.prototype, \"state\", {\n        /** Indicates the state of the {@link HubConnection} to the server. */\n        get: function () {\n            return this.connectionState;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HubConnection.prototype, \"connectionId\", {\n        /** Represents the connection id of the {@link HubConnection} on the server. The connection id will be null when the connection is either\n         *  in the disconnected state or if the negotiation step was skipped.\n         */\n        get: function () {\n            return this.connection ? (this.connection.connectionId || null) : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HubConnection.prototype, \"baseUrl\", {\n        /** Indicates the url of the {@link HubConnection} to the server. */\n        get: function () {\n            return this.connection.baseUrl || \"\";\n        },\n        /**\n         * Sets a new url for the HubConnection. Note that the url can only be changed when the connection is in either the Disconnected or\n         * Reconnecting states.\n         * @param {string} url The url to connect to.\n         */\n        set: function (url) {\n            if (this.connectionState !== HubConnectionState.Disconnected && this.connectionState !== HubConnectionState.Reconnecting) {\n                throw new Error(\"The HubConnection must be in the Disconnected or Reconnecting state to change the url.\");\n            }\n            if (!url) {\n                throw new Error(\"The HubConnection url must be a valid url.\");\n            }\n            this.connection.baseUrl = url;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Starts the connection.\n     *\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully established, or rejects with an error.\n     */\n    HubConnection.prototype.start = function () {\n        this.startPromise = this.startWithStateTransitions();\n        return this.startPromise;\n    };\n    HubConnection.prototype.startWithStateTransitions = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var e_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.connectionState !== HubConnectionState.Disconnected) {\n                            return [2 /*return*/, Promise.reject(new Error(\"Cannot start a HubConnection that is not in the 'Disconnected' state.\"))];\n                        }\n                        this.connectionState = HubConnectionState.Connecting;\n                        this.logger.log(LogLevel.Debug, \"Starting HubConnection.\");\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this.startInternal()];\n                    case 2:\n                        _a.sent();\n                        this.connectionState = HubConnectionState.Connected;\n                        this.connectionStarted = true;\n                        this.logger.log(LogLevel.Debug, \"HubConnection connected successfully.\");\n                        return [3 /*break*/, 4];\n                    case 3:\n                        e_1 = _a.sent();\n                        this.connectionState = HubConnectionState.Disconnected;\n                        this.logger.log(LogLevel.Debug, \"HubConnection failed to start successfully because of error '\" + e_1 + \"'.\");\n                        return [2 /*return*/, Promise.reject(e_1)];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    HubConnection.prototype.startInternal = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var handshakePromise, handshakeRequest, e_2;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.stopDuringStartError = undefined;\n                        this.receivedHandshakeResponse = false;\n                        handshakePromise = new Promise(function (resolve, reject) {\n                            _this.handshakeResolver = resolve;\n                            _this.handshakeRejecter = reject;\n                        });\n                        return [4 /*yield*/, this.connection.start(this.protocol.transferFormat)];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 5, , 7]);\n                        handshakeRequest = {\n                            protocol: this.protocol.name,\n                            version: this.protocol.version,\n                        };\n                        this.logger.log(LogLevel.Debug, \"Sending handshake request.\");\n                        return [4 /*yield*/, this.sendMessage(this.handshakeProtocol.writeHandshakeRequest(handshakeRequest))];\n                    case 3:\n                        _a.sent();\n                        this.logger.log(LogLevel.Information, \"Using HubProtocol '\" + this.protocol.name + \"'.\");\n                        // defensively cleanup timeout in case we receive a message from the server before we finish start\n                        this.cleanupTimeout();\n                        this.resetTimeoutPeriod();\n                        this.resetKeepAliveInterval();\n                        return [4 /*yield*/, handshakePromise];\n                    case 4:\n                        _a.sent();\n                        // It's important to check the stopDuringStartError instead of just relying on the handshakePromise\n                        // being rejected on close, because this continuation can run after both the handshake completed successfully\n                        // and the connection was closed.\n                        if (this.stopDuringStartError) {\n                            // It's important to throw instead of returning a rejected promise, because we don't want to allow any state\n                            // transitions to occur between now and the calling code observing the exceptions. Returning a rejected promise\n                            // will cause the calling continuation to get scheduled to run later.\n                            throw this.stopDuringStartError;\n                        }\n                        return [3 /*break*/, 7];\n                    case 5:\n                        e_2 = _a.sent();\n                        this.logger.log(LogLevel.Debug, \"Hub handshake failed with error '\" + e_2 + \"' during start(). Stopping HubConnection.\");\n                        this.cleanupTimeout();\n                        this.cleanupPingTimer();\n                        // HttpConnection.stop() should not complete until after the onclose callback is invoked.\n                        // This will transition the HubConnection to the disconnected state before HttpConnection.stop() completes.\n                        return [4 /*yield*/, this.connection.stop(e_2)];\n                    case 6:\n                        // HttpConnection.stop() should not complete until after the onclose callback is invoked.\n                        // This will transition the HubConnection to the disconnected state before HttpConnection.stop() completes.\n                        _a.sent();\n                        throw e_2;\n                    case 7: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /** Stops the connection.\n     *\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully terminated, or rejects with an error.\n     */\n    HubConnection.prototype.stop = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var startPromise, e_3;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        startPromise = this.startPromise;\n                        this.stopPromise = this.stopInternal();\n                        return [4 /*yield*/, this.stopPromise];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 4, , 5]);\n                        // Awaiting undefined continues immediately\n                        return [4 /*yield*/, startPromise];\n                    case 3:\n                        // Awaiting undefined continues immediately\n                        _a.sent();\n                        return [3 /*break*/, 5];\n                    case 4:\n                        e_3 = _a.sent();\n                        return [3 /*break*/, 5];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    HubConnection.prototype.stopInternal = function (error) {\n        if (this.connectionState === HubConnectionState.Disconnected) {\n            this.logger.log(LogLevel.Debug, \"Call to HubConnection.stop(\" + error + \") ignored because it is already in the disconnected state.\");\n            return Promise.resolve();\n        }\n        if (this.connectionState === HubConnectionState.Disconnecting) {\n            this.logger.log(LogLevel.Debug, \"Call to HttpConnection.stop(\" + error + \") ignored because the connection is already in the disconnecting state.\");\n            return this.stopPromise;\n        }\n        this.connectionState = HubConnectionState.Disconnecting;\n        this.logger.log(LogLevel.Debug, \"Stopping HubConnection.\");\n        if (this.reconnectDelayHandle) {\n            // We're in a reconnect delay which means the underlying connection is currently already stopped.\n            // Just clear the handle to stop the reconnect loop (which no one is waiting on thankfully) and\n            // fire the onclose callbacks.\n            this.logger.log(LogLevel.Debug, \"Connection stopped during reconnect delay. Done reconnecting.\");\n            clearTimeout(this.reconnectDelayHandle);\n            this.reconnectDelayHandle = undefined;\n            this.completeClose();\n            return Promise.resolve();\n        }\n        this.cleanupTimeout();\n        this.cleanupPingTimer();\n        this.stopDuringStartError = error || new Error(\"The connection was stopped before the hub handshake could complete.\");\n        // HttpConnection.stop() should not complete until after either HttpConnection.start() fails\n        // or the onclose callback is invoked. The onclose callback will transition the HubConnection\n        // to the disconnected state if need be before HttpConnection.stop() completes.\n        return this.connection.stop(error);\n    };\n    /** Invokes a streaming hub method on the server using the specified name and arguments.\n     *\n     * @typeparam T The type of the items returned by the server.\n     * @param {string} methodName The name of the server method to invoke.\n     * @param {any[]} args The arguments used to invoke the server method.\n     * @returns {IStreamResult<T>} An object that yields results from the server as they are received.\n     */\n    HubConnection.prototype.stream = function (methodName) {\n        var _this = this;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var _a = this.replaceStreamingParams(args), streams = _a[0], streamIds = _a[1];\n        var invocationDescriptor = this.createStreamInvocation(methodName, args, streamIds);\n        var promiseQueue;\n        var subject = new Subject();\n        subject.cancelCallback = function () {\n            var cancelInvocation = _this.createCancelInvocation(invocationDescriptor.invocationId);\n            delete _this.callbacks[invocationDescriptor.invocationId];\n            return promiseQueue.then(function () {\n                return _this.sendWithProtocol(cancelInvocation);\n            });\n        };\n        this.callbacks[invocationDescriptor.invocationId] = function (invocationEvent, error) {\n            if (error) {\n                subject.error(error);\n                return;\n            }\n            else if (invocationEvent) {\n                // invocationEvent will not be null when an error is not passed to the callback\n                if (invocationEvent.type === MessageType.Completion) {\n                    if (invocationEvent.error) {\n                        subject.error(new Error(invocationEvent.error));\n                    }\n                    else {\n                        subject.complete();\n                    }\n                }\n                else {\n                    subject.next((invocationEvent.item));\n                }\n            }\n        };\n        promiseQueue = this.sendWithProtocol(invocationDescriptor)\n            .catch(function (e) {\n            subject.error(e);\n            delete _this.callbacks[invocationDescriptor.invocationId];\n        });\n        this.launchStreams(streams, promiseQueue);\n        return subject;\n    };\n    HubConnection.prototype.sendMessage = function (message) {\n        this.resetKeepAliveInterval();\n        return this.connection.send(message);\n    };\n    /**\n     * Sends a js object to the server.\n     * @param message The js object to serialize and send.\n     */\n    HubConnection.prototype.sendWithProtocol = function (message) {\n        return this.sendMessage(this.protocol.writeMessage(message));\n    };\n    /** Invokes a hub method on the server using the specified name and arguments. Does not wait for a response from the receiver.\n     *\n     * The Promise returned by this method resolves when the client has sent the invocation to the server. The server may still\n     * be processing the invocation.\n     *\n     * @param {string} methodName The name of the server method to invoke.\n     * @param {any[]} args The arguments used to invoke the server method.\n     * @returns {Promise<void>} A Promise that resolves when the invocation has been successfully sent, or rejects with an error.\n     */\n    HubConnection.prototype.send = function (methodName) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var _a = this.replaceStreamingParams(args), streams = _a[0], streamIds = _a[1];\n        var sendPromise = this.sendWithProtocol(this.createInvocation(methodName, args, true, streamIds));\n        this.launchStreams(streams, sendPromise);\n        return sendPromise;\n    };\n    /** Invokes a hub method on the server using the specified name and arguments.\n     *\n     * The Promise returned by this method resolves when the server indicates it has finished invoking the method. When the promise\n     * resolves, the server has finished invoking the method. If the server method returns a result, it is produced as the result of\n     * resolving the Promise.\n     *\n     * @typeparam T The expected return type.\n     * @param {string} methodName The name of the server method to invoke.\n     * @param {any[]} args The arguments used to invoke the server method.\n     * @returns {Promise<T>} A Promise that resolves with the result of the server method (if any), or rejects with an error.\n     */\n    HubConnection.prototype.invoke = function (methodName) {\n        var _this = this;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var _a = this.replaceStreamingParams(args), streams = _a[0], streamIds = _a[1];\n        var invocationDescriptor = this.createInvocation(methodName, args, false, streamIds);\n        var p = new Promise(function (resolve, reject) {\n            // invocationId will always have a value for a non-blocking invocation\n            _this.callbacks[invocationDescriptor.invocationId] = function (invocationEvent, error) {\n                if (error) {\n                    reject(error);\n                    return;\n                }\n                else if (invocationEvent) {\n                    // invocationEvent will not be null when an error is not passed to the callback\n                    if (invocationEvent.type === MessageType.Completion) {\n                        if (invocationEvent.error) {\n                            reject(new Error(invocationEvent.error));\n                        }\n                        else {\n                            resolve(invocationEvent.result);\n                        }\n                    }\n                    else {\n                        reject(new Error(\"Unexpected message type: \" + invocationEvent.type));\n                    }\n                }\n            };\n            var promiseQueue = _this.sendWithProtocol(invocationDescriptor)\n                .catch(function (e) {\n                reject(e);\n                // invocationId will always have a value for a non-blocking invocation\n                delete _this.callbacks[invocationDescriptor.invocationId];\n            });\n            _this.launchStreams(streams, promiseQueue);\n        });\n        return p;\n    };\n    /** Registers a handler that will be invoked when the hub method with the specified method name is invoked.\n     *\n     * @param {string} methodName The name of the hub method to define.\n     * @param {Function} newMethod The handler that will be raised when the hub method is invoked.\n     */\n    HubConnection.prototype.on = function (methodName, newMethod) {\n        if (!methodName || !newMethod) {\n            return;\n        }\n        methodName = methodName.toLowerCase();\n        if (!this.methods[methodName]) {\n            this.methods[methodName] = [];\n        }\n        // Preventing adding the same handler multiple times.\n        if (this.methods[methodName].indexOf(newMethod) !== -1) {\n            return;\n        }\n        this.methods[methodName].push(newMethod);\n    };\n    HubConnection.prototype.off = function (methodName, method) {\n        if (!methodName) {\n            return;\n        }\n        methodName = methodName.toLowerCase();\n        var handlers = this.methods[methodName];\n        if (!handlers) {\n            return;\n        }\n        if (method) {\n            var removeIdx = handlers.indexOf(method);\n            if (removeIdx !== -1) {\n                handlers.splice(removeIdx, 1);\n                if (handlers.length === 0) {\n                    delete this.methods[methodName];\n                }\n            }\n        }\n        else {\n            delete this.methods[methodName];\n        }\n    };\n    /** Registers a handler that will be invoked when the connection is closed.\n     *\n     * @param {Function} callback The handler that will be invoked when the connection is closed. Optionally receives a single argument containing the error that caused the connection to close (if any).\n     */\n    HubConnection.prototype.onclose = function (callback) {\n        if (callback) {\n            this.closedCallbacks.push(callback);\n        }\n    };\n    /** Registers a handler that will be invoked when the connection starts reconnecting.\n     *\n     * @param {Function} callback The handler that will be invoked when the connection starts reconnecting. Optionally receives a single argument containing the error that caused the connection to start reconnecting (if any).\n     */\n    HubConnection.prototype.onreconnecting = function (callback) {\n        if (callback) {\n            this.reconnectingCallbacks.push(callback);\n        }\n    };\n    /** Registers a handler that will be invoked when the connection successfully reconnects.\n     *\n     * @param {Function} callback The handler that will be invoked when the connection successfully reconnects.\n     */\n    HubConnection.prototype.onreconnected = function (callback) {\n        if (callback) {\n            this.reconnectedCallbacks.push(callback);\n        }\n    };\n    HubConnection.prototype.processIncomingData = function (data) {\n        this.cleanupTimeout();\n        if (!this.receivedHandshakeResponse) {\n            data = this.processHandshakeResponse(data);\n            this.receivedHandshakeResponse = true;\n        }\n        // Data may have all been read when processing handshake response\n        if (data) {\n            // Parse the messages\n            var messages = this.protocol.parseMessages(data, this.logger);\n            for (var _i = 0, messages_1 = messages; _i < messages_1.length; _i++) {\n                var message = messages_1[_i];\n                switch (message.type) {\n                    case MessageType.Invocation:\n                        this.invokeClientMethod(message);\n                        break;\n                    case MessageType.StreamItem:\n                    case MessageType.Completion:\n                        var callback = this.callbacks[message.invocationId];\n                        if (callback) {\n                            if (message.type === MessageType.Completion) {\n                                delete this.callbacks[message.invocationId];\n                            }\n                            callback(message);\n                        }\n                        break;\n                    case MessageType.Ping:\n                        // Don't care about pings\n                        break;\n                    case MessageType.Close:\n                        this.logger.log(LogLevel.Information, \"Close message received from server.\");\n                        // We don't want to wait on the stop itself.\n                        this.stopPromise = this.stopInternal(message.error ? new Error(\"Server returned an error on close: \" + message.error) : undefined);\n                        break;\n                    default:\n                        this.logger.log(LogLevel.Warning, \"Invalid message type: \" + message.type + \".\");\n                        break;\n                }\n            }\n        }\n        this.resetTimeoutPeriod();\n    };\n    HubConnection.prototype.processHandshakeResponse = function (data) {\n        var _a;\n        var responseMessage;\n        var remainingData;\n        try {\n            _a = this.handshakeProtocol.parseHandshakeResponse(data), remainingData = _a[0], responseMessage = _a[1];\n        }\n        catch (e) {\n            var message = \"Error parsing handshake response: \" + e;\n            this.logger.log(LogLevel.Error, message);\n            var error = new Error(message);\n            this.handshakeRejecter(error);\n            throw error;\n        }\n        if (responseMessage.error) {\n            var message = \"Server returned handshake error: \" + responseMessage.error;\n            this.logger.log(LogLevel.Error, message);\n            var error = new Error(message);\n            this.handshakeRejecter(error);\n            throw error;\n        }\n        else {\n            this.logger.log(LogLevel.Debug, \"Server handshake complete.\");\n        }\n        this.handshakeResolver();\n        return remainingData;\n    };\n    HubConnection.prototype.resetKeepAliveInterval = function () {\n        var _this = this;\n        this.cleanupPingTimer();\n        this.pingServerHandle = setTimeout(function () { return __awaiter(_this, void 0, void 0, function () {\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(this.connectionState === HubConnectionState.Connected)) return [3 /*break*/, 4];\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this.sendMessage(this.cachedPingMessage)];\n                    case 2:\n                        _b.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        _a = _b.sent();\n                        // We don't care about the error. It should be seen elsewhere in the client.\n                        // The connection is probably in a bad or closed state now, cleanup the timer so it stops triggering\n                        this.cleanupPingTimer();\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        }); }, this.keepAliveIntervalInMilliseconds);\n    };\n    HubConnection.prototype.resetTimeoutPeriod = function () {\n        var _this = this;\n        if (!this.connection.features || !this.connection.features.inherentKeepAlive) {\n            // Set the timeout timer\n            this.timeoutHandle = setTimeout(function () { return _this.serverTimeout(); }, this.serverTimeoutInMilliseconds);\n        }\n    };\n    HubConnection.prototype.serverTimeout = function () {\n        // The server hasn't talked to us in a while. It doesn't like us anymore ... :(\n        // Terminate the connection, but we don't need to wait on the promise. This could trigger reconnecting.\n        // tslint:disable-next-line:no-floating-promises\n        this.connection.stop(new Error(\"Server timeout elapsed without receiving a message from the server.\"));\n    };\n    HubConnection.prototype.invokeClientMethod = function (invocationMessage) {\n        var _this = this;\n        var methods = this.methods[invocationMessage.target.toLowerCase()];\n        if (methods) {\n            try {\n                methods.forEach(function (m) { return m.apply(_this, invocationMessage.arguments); });\n            }\n            catch (e) {\n                this.logger.log(LogLevel.Error, \"A callback for the method \" + invocationMessage.target.toLowerCase() + \" threw error '\" + e + \"'.\");\n            }\n            if (invocationMessage.invocationId) {\n                // This is not supported in v1. So we return an error to avoid blocking the server waiting for the response.\n                var message = \"Server requested a response, which is not supported in this version of the client.\";\n                this.logger.log(LogLevel.Error, message);\n                // We don't want to wait on the stop itself.\n                this.stopPromise = this.stopInternal(new Error(message));\n            }\n        }\n        else {\n            this.logger.log(LogLevel.Warning, \"No client method with the name '\" + invocationMessage.target + \"' found.\");\n        }\n    };\n    HubConnection.prototype.connectionClosed = function (error) {\n        this.logger.log(LogLevel.Debug, \"HubConnection.connectionClosed(\" + error + \") called while in state \" + this.connectionState + \".\");\n        // Triggering this.handshakeRejecter is insufficient because it could already be resolved without the continuation having run yet.\n        this.stopDuringStartError = this.stopDuringStartError || error || new Error(\"The underlying connection was closed before the hub handshake could complete.\");\n        // If the handshake is in progress, start will be waiting for the handshake promise, so we complete it.\n        // If it has already completed, this should just noop.\n        if (this.handshakeResolver) {\n            this.handshakeResolver();\n        }\n        this.cancelCallbacksWithError(error || new Error(\"Invocation canceled due to the underlying connection being closed.\"));\n        this.cleanupTimeout();\n        this.cleanupPingTimer();\n        if (this.connectionState === HubConnectionState.Disconnecting) {\n            this.completeClose(error);\n        }\n        else if (this.connectionState === HubConnectionState.Connected && this.reconnectPolicy) {\n            // tslint:disable-next-line:no-floating-promises\n            this.reconnect(error);\n        }\n        else if (this.connectionState === HubConnectionState.Connected) {\n            this.completeClose(error);\n        }\n        // If none of the above if conditions were true were called the HubConnection must be in either:\n        // 1. The Connecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail it.\n        // 2. The Reconnecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail the current reconnect attempt\n        //    and potentially continue the reconnect() loop.\n        // 3. The Disconnected state in which case we're already done.\n    };\n    HubConnection.prototype.completeClose = function (error) {\n        var _this = this;\n        if (this.connectionStarted) {\n            this.connectionState = HubConnectionState.Disconnected;\n            this.connectionStarted = false;\n            try {\n                this.closedCallbacks.forEach(function (c) { return c.apply(_this, [error]); });\n            }\n            catch (e) {\n                this.logger.log(LogLevel.Error, \"An onclose callback called with error '\" + error + \"' threw error '\" + e + \"'.\");\n            }\n        }\n    };\n    HubConnection.prototype.reconnect = function (error) {\n        return __awaiter(this, void 0, void 0, function () {\n            var reconnectStartTime, previousReconnectAttempts, retryError, nextRetryDelay, e_4;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        reconnectStartTime = Date.now();\n                        previousReconnectAttempts = 0;\n                        retryError = error !== undefined ? error : new Error(\"Attempting to reconnect due to a unknown error.\");\n                        nextRetryDelay = this.getNextRetryDelay(previousReconnectAttempts++, 0, retryError);\n                        if (nextRetryDelay === null) {\n                            this.logger.log(LogLevel.Debug, \"Connection not reconnecting because the IRetryPolicy returned null on the first reconnect attempt.\");\n                            this.completeClose(error);\n                            return [2 /*return*/];\n                        }\n                        this.connectionState = HubConnectionState.Reconnecting;\n                        if (error) {\n                            this.logger.log(LogLevel.Information, \"Connection reconnecting because of error '\" + error + \"'.\");\n                        }\n                        else {\n                            this.logger.log(LogLevel.Information, \"Connection reconnecting.\");\n                        }\n                        if (this.onreconnecting) {\n                            try {\n                                this.reconnectingCallbacks.forEach(function (c) { return c.apply(_this, [error]); });\n                            }\n                            catch (e) {\n                                this.logger.log(LogLevel.Error, \"An onreconnecting callback called with error '\" + error + \"' threw error '\" + e + \"'.\");\n                            }\n                            // Exit early if an onreconnecting callback called connection.stop().\n                            if (this.connectionState !== HubConnectionState.Reconnecting) {\n                                this.logger.log(LogLevel.Debug, \"Connection left the reconnecting state in onreconnecting callback. Done reconnecting.\");\n                                return [2 /*return*/];\n                            }\n                        }\n                        _a.label = 1;\n                    case 1:\n                        if (!(nextRetryDelay !== null)) return [3 /*break*/, 7];\n                        this.logger.log(LogLevel.Information, \"Reconnect attempt number \" + previousReconnectAttempts + \" will start in \" + nextRetryDelay + \" ms.\");\n                        return [4 /*yield*/, new Promise(function (resolve) {\n                                _this.reconnectDelayHandle = setTimeout(resolve, nextRetryDelay);\n                            })];\n                    case 2:\n                        _a.sent();\n                        this.reconnectDelayHandle = undefined;\n                        if (this.connectionState !== HubConnectionState.Reconnecting) {\n                            this.logger.log(LogLevel.Debug, \"Connection left the reconnecting state during reconnect delay. Done reconnecting.\");\n                            return [2 /*return*/];\n                        }\n                        _a.label = 3;\n                    case 3:\n                        _a.trys.push([3, 5, , 6]);\n                        return [4 /*yield*/, this.startInternal()];\n                    case 4:\n                        _a.sent();\n                        this.connectionState = HubConnectionState.Connected;\n                        this.logger.log(LogLevel.Information, \"HubConnection reconnected successfully.\");\n                        if (this.onreconnected) {\n                            try {\n                                this.reconnectedCallbacks.forEach(function (c) { return c.apply(_this, [_this.connection.connectionId]); });\n                            }\n                            catch (e) {\n                                this.logger.log(LogLevel.Error, \"An onreconnected callback called with connectionId '\" + this.connection.connectionId + \"; threw error '\" + e + \"'.\");\n                            }\n                        }\n                        return [2 /*return*/];\n                    case 5:\n                        e_4 = _a.sent();\n                        this.logger.log(LogLevel.Information, \"Reconnect attempt failed because of error '\" + e_4 + \"'.\");\n                        if (this.connectionState !== HubConnectionState.Reconnecting) {\n                            this.logger.log(LogLevel.Debug, \"Connection left the reconnecting state during reconnect attempt. Done reconnecting.\");\n                            return [2 /*return*/];\n                        }\n                        retryError = e_4 instanceof Error ? e_4 : new Error(e_4.toString());\n                        nextRetryDelay = this.getNextRetryDelay(previousReconnectAttempts++, Date.now() - reconnectStartTime, retryError);\n                        return [3 /*break*/, 6];\n                    case 6: return [3 /*break*/, 1];\n                    case 7:\n                        this.logger.log(LogLevel.Information, \"Reconnect retries have been exhausted after \" + (Date.now() - reconnectStartTime) + \" ms and \" + previousReconnectAttempts + \" failed attempts. Connection disconnecting.\");\n                        this.completeClose();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    HubConnection.prototype.getNextRetryDelay = function (previousRetryCount, elapsedMilliseconds, retryReason) {\n        try {\n            return this.reconnectPolicy.nextRetryDelayInMilliseconds({\n                elapsedMilliseconds: elapsedMilliseconds,\n                previousRetryCount: previousRetryCount,\n                retryReason: retryReason,\n            });\n        }\n        catch (e) {\n            this.logger.log(LogLevel.Error, \"IRetryPolicy.nextRetryDelayInMilliseconds(\" + previousRetryCount + \", \" + elapsedMilliseconds + \") threw error '\" + e + \"'.\");\n            return null;\n        }\n    };\n    HubConnection.prototype.cancelCallbacksWithError = function (error) {\n        var callbacks = this.callbacks;\n        this.callbacks = {};\n        Object.keys(callbacks)\n            .forEach(function (key) {\n            var callback = callbacks[key];\n            callback(null, error);\n        });\n    };\n    HubConnection.prototype.cleanupPingTimer = function () {\n        if (this.pingServerHandle) {\n            clearTimeout(this.pingServerHandle);\n        }\n    };\n    HubConnection.prototype.cleanupTimeout = function () {\n        if (this.timeoutHandle) {\n            clearTimeout(this.timeoutHandle);\n        }\n    };\n    HubConnection.prototype.createInvocation = function (methodName, args, nonblocking, streamIds) {\n        if (nonblocking) {\n            return {\n                arguments: args,\n                streamIds: streamIds,\n                target: methodName,\n                type: MessageType.Invocation,\n            };\n        }\n        else {\n            var invocationId = this.invocationId;\n            this.invocationId++;\n            return {\n                arguments: args,\n                invocationId: invocationId.toString(),\n                streamIds: streamIds,\n                target: methodName,\n                type: MessageType.Invocation,\n            };\n        }\n    };\n    HubConnection.prototype.launchStreams = function (streams, promiseQueue) {\n        var _this = this;\n        if (streams.length === 0) {\n            return;\n        }\n        // Synchronize stream data so they arrive in-order on the server\n        if (!promiseQueue) {\n            promiseQueue = Promise.resolve();\n        }\n        var _loop_1 = function (streamId) {\n            streams[streamId].subscribe({\n                complete: function () {\n                    promiseQueue = promiseQueue.then(function () { return _this.sendWithProtocol(_this.createCompletionMessage(streamId)); });\n                },\n                error: function (err) {\n                    var message;\n                    if (err instanceof Error) {\n                        message = err.message;\n                    }\n                    else if (err && err.toString) {\n                        message = err.toString();\n                    }\n                    else {\n                        message = \"Unknown error\";\n                    }\n                    promiseQueue = promiseQueue.then(function () { return _this.sendWithProtocol(_this.createCompletionMessage(streamId, message)); });\n                },\n                next: function (item) {\n                    promiseQueue = promiseQueue.then(function () { return _this.sendWithProtocol(_this.createStreamItemMessage(streamId, item)); });\n                },\n            });\n        };\n        // We want to iterate over the keys, since the keys are the stream ids\n        // tslint:disable-next-line:forin\n        for (var streamId in streams) {\n            _loop_1(streamId);\n        }\n    };\n    HubConnection.prototype.replaceStreamingParams = function (args) {\n        var streams = [];\n        var streamIds = [];\n        for (var i = 0; i < args.length; i++) {\n            var argument = args[i];\n            if (this.isObservable(argument)) {\n                var streamId = this.invocationId;\n                this.invocationId++;\n                // Store the stream for later use\n                streams[streamId] = argument;\n                streamIds.push(streamId.toString());\n                // remove stream from args\n                args.splice(i, 1);\n            }\n        }\n        return [streams, streamIds];\n    };\n    HubConnection.prototype.isObservable = function (arg) {\n        // This allows other stream implementations to just work (like rxjs)\n        return arg && arg.subscribe && typeof arg.subscribe === \"function\";\n    };\n    HubConnection.prototype.createStreamInvocation = function (methodName, args, streamIds) {\n        var invocationId = this.invocationId;\n        this.invocationId++;\n        return {\n            arguments: args,\n            invocationId: invocationId.toString(),\n            streamIds: streamIds,\n            target: methodName,\n            type: MessageType.StreamInvocation,\n        };\n    };\n    HubConnection.prototype.createCancelInvocation = function (id) {\n        return {\n            invocationId: id,\n            type: MessageType.CancelInvocation,\n        };\n    };\n    HubConnection.prototype.createStreamItemMessage = function (id, item) {\n        return {\n            invocationId: id,\n            item: item,\n            type: MessageType.StreamItem,\n        };\n    };\n    HubConnection.prototype.createCompletionMessage = function (id, error, result) {\n        if (error) {\n            return {\n                error: error,\n                invocationId: id,\n                type: MessageType.Completion,\n            };\n        }\n        return {\n            invocationId: id,\n            result: result,\n            type: MessageType.Completion,\n        };\n    };\n    return HubConnection;\n}());\nexport { HubConnection };\n//# sourceMappingURL=HubConnection.js.map","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { DefaultReconnectPolicy } from \"./DefaultReconnectPolicy\";\nimport { HttpConnection } from \"./HttpConnection\";\nimport { HubConnection } from \"./HubConnection\";\nimport { LogLevel } from \"./ILogger\";\nimport { JsonHubProtocol } from \"./JsonHubProtocol\";\nimport { NullLogger } from \"./Loggers\";\nimport { Arg, ConsoleLogger } from \"./Utils\";\n// tslint:disable:object-literal-sort-keys\nvar LogLevelNameMapping = {\n    trace: LogLevel.Trace,\n    debug: LogLevel.Debug,\n    info: LogLevel.Information,\n    information: LogLevel.Information,\n    warn: LogLevel.Warning,\n    warning: LogLevel.Warning,\n    error: LogLevel.Error,\n    critical: LogLevel.Critical,\n    none: LogLevel.None,\n};\nfunction parseLogLevel(name) {\n    // Case-insensitive matching via lower-casing\n    // Yes, I know case-folding is a complicated problem in Unicode, but we only support\n    // the ASCII strings defined in LogLevelNameMapping anyway, so it's fine -anurse.\n    var mapping = LogLevelNameMapping[name.toLowerCase()];\n    if (typeof mapping !== \"undefined\") {\n        return mapping;\n    }\n    else {\n        throw new Error(\"Unknown log level: \" + name);\n    }\n}\n/** A builder for configuring {@link @microsoft/signalr.HubConnection} instances. */\nvar HubConnectionBuilder = /** @class */ (function () {\n    function HubConnectionBuilder() {\n    }\n    HubConnectionBuilder.prototype.configureLogging = function (logging) {\n        Arg.isRequired(logging, \"logging\");\n        if (isLogger(logging)) {\n            this.logger = logging;\n        }\n        else if (typeof logging === \"string\") {\n            var logLevel = parseLogLevel(logging);\n            this.logger = new ConsoleLogger(logLevel);\n        }\n        else {\n            this.logger = new ConsoleLogger(logging);\n        }\n        return this;\n    };\n    HubConnectionBuilder.prototype.withUrl = function (url, transportTypeOrOptions) {\n        Arg.isRequired(url, \"url\");\n        this.url = url;\n        // Flow-typing knows where it's at. Since HttpTransportType is a number and IHttpConnectionOptions is guaranteed\n        // to be an object, we know (as does TypeScript) this comparison is all we need to figure out which overload was called.\n        if (typeof transportTypeOrOptions === \"object\") {\n            this.httpConnectionOptions = __assign({}, this.httpConnectionOptions, transportTypeOrOptions);\n        }\n        else {\n            this.httpConnectionOptions = __assign({}, this.httpConnectionOptions, { transport: transportTypeOrOptions });\n        }\n        return this;\n    };\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use the specified Hub Protocol.\n     *\n     * @param {IHubProtocol} protocol The {@link @microsoft/signalr.IHubProtocol} implementation to use.\n     */\n    HubConnectionBuilder.prototype.withHubProtocol = function (protocol) {\n        Arg.isRequired(protocol, \"protocol\");\n        this.protocol = protocol;\n        return this;\n    };\n    HubConnectionBuilder.prototype.withAutomaticReconnect = function (retryDelaysOrReconnectPolicy) {\n        if (this.reconnectPolicy) {\n            throw new Error(\"A reconnectPolicy has already been set.\");\n        }\n        if (!retryDelaysOrReconnectPolicy) {\n            this.reconnectPolicy = new DefaultReconnectPolicy();\n        }\n        else if (Array.isArray(retryDelaysOrReconnectPolicy)) {\n            this.reconnectPolicy = new DefaultReconnectPolicy(retryDelaysOrReconnectPolicy);\n        }\n        else {\n            this.reconnectPolicy = retryDelaysOrReconnectPolicy;\n        }\n        return this;\n    };\n    /** Creates a {@link @microsoft/signalr.HubConnection} from the configuration options specified in this builder.\n     *\n     * @returns {HubConnection} The configured {@link @microsoft/signalr.HubConnection}.\n     */\n    HubConnectionBuilder.prototype.build = function () {\n        // If httpConnectionOptions has a logger, use it. Otherwise, override it with the one\n        // provided to configureLogger\n        var httpConnectionOptions = this.httpConnectionOptions || {};\n        // If it's 'null', the user **explicitly** asked for null, don't mess with it.\n        if (httpConnectionOptions.logger === undefined) {\n            // If our logger is undefined or null, that's OK, the HttpConnection constructor will handle it.\n            httpConnectionOptions.logger = this.logger;\n        }\n        // Now create the connection\n        if (!this.url) {\n            throw new Error(\"The 'HubConnectionBuilder.withUrl' method must be called before building the connection.\");\n        }\n        var connection = new HttpConnection(this.url, httpConnectionOptions);\n        return HubConnection.create(connection, this.logger || NullLogger.instance, this.protocol || new JsonHubProtocol(), this.reconnectPolicy);\n    };\n    return HubConnectionBuilder;\n}());\nexport { HubConnectionBuilder };\nfunction isLogger(logger) {\n    return logger.log !== undefined;\n}\n//# sourceMappingURL=HubConnectionBuilder.js.map","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\n/** Defines the type of a Hub Message. */\nexport var MessageType;\n(function (MessageType) {\n    /** Indicates the message is an Invocation message and implements the {@link @microsoft/signalr.InvocationMessage} interface. */\n    MessageType[MessageType[\"Invocation\"] = 1] = \"Invocation\";\n    /** Indicates the message is a StreamItem message and implements the {@link @microsoft/signalr.StreamItemMessage} interface. */\n    MessageType[MessageType[\"StreamItem\"] = 2] = \"StreamItem\";\n    /** Indicates the message is a Completion message and implements the {@link @microsoft/signalr.CompletionMessage} interface. */\n    MessageType[MessageType[\"Completion\"] = 3] = \"Completion\";\n    /** Indicates the message is a Stream Invocation message and implements the {@link @microsoft/signalr.StreamInvocationMessage} interface. */\n    MessageType[MessageType[\"StreamInvocation\"] = 4] = \"StreamInvocation\";\n    /** Indicates the message is a Cancel Invocation message and implements the {@link @microsoft/signalr.CancelInvocationMessage} interface. */\n    MessageType[MessageType[\"CancelInvocation\"] = 5] = \"CancelInvocation\";\n    /** Indicates the message is a Ping message and implements the {@link @microsoft/signalr.PingMessage} interface. */\n    MessageType[MessageType[\"Ping\"] = 6] = \"Ping\";\n    /** Indicates the message is a Close message and implements the {@link @microsoft/signalr.CloseMessage} interface. */\n    MessageType[MessageType[\"Close\"] = 7] = \"Close\";\n})(MessageType || (MessageType = {}));\n//# sourceMappingURL=IHubProtocol.js.map","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\n// These values are designed to match the ASP.NET Log Levels since that's the pattern we're emulating here.\n/** Indicates the severity of a log message.\n *\n * Log Levels are ordered in increasing severity. So `Debug` is more severe than `Trace`, etc.\n */\nexport var LogLevel;\n(function (LogLevel) {\n    /** Log level for very low severity diagnostic messages. */\n    LogLevel[LogLevel[\"Trace\"] = 0] = \"Trace\";\n    /** Log level for low severity diagnostic messages. */\n    LogLevel[LogLevel[\"Debug\"] = 1] = \"Debug\";\n    /** Log level for informational diagnostic messages. */\n    LogLevel[LogLevel[\"Information\"] = 2] = \"Information\";\n    /** Log level for diagnostic messages that indicate a non-fatal problem. */\n    LogLevel[LogLevel[\"Warning\"] = 3] = \"Warning\";\n    /** Log level for diagnostic messages that indicate a failure in the current operation. */\n    LogLevel[LogLevel[\"Error\"] = 4] = \"Error\";\n    /** Log level for diagnostic messages that indicate a failure that will terminate the entire application. */\n    LogLevel[LogLevel[\"Critical\"] = 5] = \"Critical\";\n    /** The highest possible log level. Used when configuring logging to indicate that no log messages should be emitted. */\n    LogLevel[LogLevel[\"None\"] = 6] = \"None\";\n})(LogLevel || (LogLevel = {}));\n//# sourceMappingURL=ILogger.js.map","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\n// This will be treated as a bit flag in the future, so we keep it using power-of-two values.\n/** Specifies a specific HTTP transport type. */\nexport var HttpTransportType;\n(function (HttpTransportType) {\n    /** Specifies no transport preference. */\n    HttpTransportType[HttpTransportType[\"None\"] = 0] = \"None\";\n    /** Specifies the WebSockets transport. */\n    HttpTransportType[HttpTransportType[\"WebSockets\"] = 1] = \"WebSockets\";\n    /** Specifies the Server-Sent Events transport. */\n    HttpTransportType[HttpTransportType[\"ServerSentEvents\"] = 2] = \"ServerSentEvents\";\n    /** Specifies the Long Polling transport. */\n    HttpTransportType[HttpTransportType[\"LongPolling\"] = 4] = \"LongPolling\";\n})(HttpTransportType || (HttpTransportType = {}));\n/** Specifies the transfer format for a connection. */\nexport var TransferFormat;\n(function (TransferFormat) {\n    /** Specifies that only text data will be transmitted over the connection. */\n    TransferFormat[TransferFormat[\"Text\"] = 1] = \"Text\";\n    /** Specifies that binary data will be transmitted over the connection. */\n    TransferFormat[TransferFormat[\"Binary\"] = 2] = \"Binary\";\n})(TransferFormat || (TransferFormat = {}));\n//# sourceMappingURL=ITransport.js.map","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\nimport { MessageType } from \"./IHubProtocol\";\nimport { LogLevel } from \"./ILogger\";\nimport { TransferFormat } from \"./ITransport\";\nimport { NullLogger } from \"./Loggers\";\nimport { TextMessageFormat } from \"./TextMessageFormat\";\nvar JSON_HUB_PROTOCOL_NAME = \"json\";\n/** Implements the JSON Hub Protocol. */\nvar JsonHubProtocol = /** @class */ (function () {\n    function JsonHubProtocol() {\n        /** @inheritDoc */\n        this.name = JSON_HUB_PROTOCOL_NAME;\n        /** @inheritDoc */\n        this.version = 1;\n        /** @inheritDoc */\n        this.transferFormat = TransferFormat.Text;\n    }\n    /** Creates an array of {@link @microsoft/signalr.HubMessage} objects from the specified serialized representation.\n     *\n     * @param {string} input A string containing the serialized representation.\n     * @param {ILogger} logger A logger that will be used to log messages that occur during parsing.\n     */\n    JsonHubProtocol.prototype.parseMessages = function (input, logger) {\n        // The interface does allow \"ArrayBuffer\" to be passed in, but this implementation does not. So let's throw a useful error.\n        if (typeof input !== \"string\") {\n            throw new Error(\"Invalid input for JSON hub protocol. Expected a string.\");\n        }\n        if (!input) {\n            return [];\n        }\n        if (logger === null) {\n            logger = NullLogger.instance;\n        }\n        // Parse the messages\n        var messages = TextMessageFormat.parse(input);\n        var hubMessages = [];\n        for (var _i = 0, messages_1 = messages; _i < messages_1.length; _i++) {\n            var message = messages_1[_i];\n            var parsedMessage = JSON.parse(message);\n            if (typeof parsedMessage.type !== \"number\") {\n                throw new Error(\"Invalid payload.\");\n            }\n            switch (parsedMessage.type) {\n                case MessageType.Invocation:\n                    this.isInvocationMessage(parsedMessage);\n                    break;\n                case MessageType.StreamItem:\n                    this.isStreamItemMessage(parsedMessage);\n                    break;\n                case MessageType.Completion:\n                    this.isCompletionMessage(parsedMessage);\n                    break;\n                case MessageType.Ping:\n                    // Single value, no need to validate\n                    break;\n                case MessageType.Close:\n                    // All optional values, no need to validate\n                    break;\n                default:\n                    // Future protocol changes can add message types, old clients can ignore them\n                    logger.log(LogLevel.Information, \"Unknown message type '\" + parsedMessage.type + \"' ignored.\");\n                    continue;\n            }\n            hubMessages.push(parsedMessage);\n        }\n        return hubMessages;\n    };\n    /** Writes the specified {@link @microsoft/signalr.HubMessage} to a string and returns it.\n     *\n     * @param {HubMessage} message The message to write.\n     * @returns {string} A string containing the serialized representation of the message.\n     */\n    JsonHubProtocol.prototype.writeMessage = function (message) {\n        return TextMessageFormat.write(JSON.stringify(message));\n    };\n    JsonHubProtocol.prototype.isInvocationMessage = function (message) {\n        this.assertNotEmptyString(message.target, \"Invalid payload for Invocation message.\");\n        if (message.invocationId !== undefined) {\n            this.assertNotEmptyString(message.invocationId, \"Invalid payload for Invocation message.\");\n        }\n    };\n    JsonHubProtocol.prototype.isStreamItemMessage = function (message) {\n        this.assertNotEmptyString(message.invocationId, \"Invalid payload for StreamItem message.\");\n        if (message.item === undefined) {\n            throw new Error(\"Invalid payload for StreamItem message.\");\n        }\n    };\n    JsonHubProtocol.prototype.isCompletionMessage = function (message) {\n        if (message.result && message.error) {\n            throw new Error(\"Invalid payload for Completion message.\");\n        }\n        if (!message.result && message.error) {\n            this.assertNotEmptyString(message.error, \"Invalid payload for Completion message.\");\n        }\n        this.assertNotEmptyString(message.invocationId, \"Invalid payload for Completion message.\");\n    };\n    JsonHubProtocol.prototype.assertNotEmptyString = function (value, errorMessage) {\n        if (typeof value !== \"string\" || value === \"\") {\n            throw new Error(errorMessage);\n        }\n    };\n    return JsonHubProtocol;\n}());\nexport { JsonHubProtocol };\n//# sourceMappingURL=JsonHubProtocol.js.map","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\n/** A logger that does nothing when log messages are sent to it. */\nvar NullLogger = /** @class */ (function () {\n    function NullLogger() {\n    }\n    /** @inheritDoc */\n    // tslint:disable-next-line\n    NullLogger.prototype.log = function (_logLevel, _message) {\n    };\n    /** The singleton instance of the {@link @microsoft/signalr.NullLogger}. */\n    NullLogger.instance = new NullLogger();\n    return NullLogger;\n}());\nexport { NullLogger };\n//# sourceMappingURL=Loggers.js.map","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { AbortController } from \"./AbortController\";\nimport { HttpError, TimeoutError } from \"./Errors\";\nimport { LogLevel } from \"./ILogger\";\nimport { TransferFormat } from \"./ITransport\";\nimport { Arg, getDataDetail, sendMessage } from \"./Utils\";\n// Not exported from 'index', this type is internal.\n/** @private */\nvar LongPollingTransport = /** @class */ (function () {\n    function LongPollingTransport(httpClient, accessTokenFactory, logger, logMessageContent) {\n        this.httpClient = httpClient;\n        this.accessTokenFactory = accessTokenFactory;\n        this.logger = logger;\n        this.pollAbort = new AbortController();\n        this.logMessageContent = logMessageContent;\n        this.running = false;\n        this.onreceive = null;\n        this.onclose = null;\n    }\n    Object.defineProperty(LongPollingTransport.prototype, \"pollAborted\", {\n        // This is an internal type, not exported from 'index' so this is really just internal.\n        get: function () {\n            return this.pollAbort.aborted;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LongPollingTransport.prototype.connect = function (url, transferFormat) {\n        return __awaiter(this, void 0, void 0, function () {\n            var pollOptions, token, pollUrl, response;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        Arg.isRequired(url, \"url\");\n                        Arg.isRequired(transferFormat, \"transferFormat\");\n                        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\n                        this.url = url;\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) Connecting.\");\n                        // Allow binary format on Node and Browsers that support binary content (indicated by the presence of responseType property)\n                        if (transferFormat === TransferFormat.Binary &&\n                            (typeof XMLHttpRequest !== \"undefined\" && typeof new XMLHttpRequest().responseType !== \"string\")) {\n                            throw new Error(\"Binary protocols over XmlHttpRequest not implementing advanced features are not supported.\");\n                        }\n                        pollOptions = {\n                            abortSignal: this.pollAbort.signal,\n                            headers: {},\n                            timeout: 100000,\n                        };\n                        if (transferFormat === TransferFormat.Binary) {\n                            pollOptions.responseType = \"arraybuffer\";\n                        }\n                        return [4 /*yield*/, this.getAccessToken()];\n                    case 1:\n                        token = _a.sent();\n                        this.updateHeaderToken(pollOptions, token);\n                        pollUrl = url + \"&_=\" + Date.now();\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) polling: \" + pollUrl + \".\");\n                        return [4 /*yield*/, this.httpClient.get(pollUrl, pollOptions)];\n                    case 2:\n                        response = _a.sent();\n                        if (response.statusCode !== 200) {\n                            this.logger.log(LogLevel.Error, \"(LongPolling transport) Unexpected response code: \" + response.statusCode + \".\");\n                            // Mark running as false so that the poll immediately ends and runs the close logic\n                            this.closeError = new HttpError(response.statusText || \"\", response.statusCode);\n                            this.running = false;\n                        }\n                        else {\n                            this.running = true;\n                        }\n                        this.receiving = this.poll(this.url, pollOptions);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    LongPollingTransport.prototype.getAccessToken = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.accessTokenFactory) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.accessTokenFactory()];\n                    case 1: return [2 /*return*/, _a.sent()];\n                    case 2: return [2 /*return*/, null];\n                }\n            });\n        });\n    };\n    LongPollingTransport.prototype.updateHeaderToken = function (request, token) {\n        if (!request.headers) {\n            request.headers = {};\n        }\n        if (token) {\n            // tslint:disable-next-line:no-string-literal\n            request.headers[\"Authorization\"] = \"Bearer \" + token;\n            return;\n        }\n        // tslint:disable-next-line:no-string-literal\n        if (request.headers[\"Authorization\"]) {\n            // tslint:disable-next-line:no-string-literal\n            delete request.headers[\"Authorization\"];\n        }\n    };\n    LongPollingTransport.prototype.poll = function (url, pollOptions) {\n        return __awaiter(this, void 0, void 0, function () {\n            var token, pollUrl, response, e_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, , 8, 9]);\n                        _a.label = 1;\n                    case 1:\n                        if (!this.running) return [3 /*break*/, 7];\n                        return [4 /*yield*/, this.getAccessToken()];\n                    case 2:\n                        token = _a.sent();\n                        this.updateHeaderToken(pollOptions, token);\n                        _a.label = 3;\n                    case 3:\n                        _a.trys.push([3, 5, , 6]);\n                        pollUrl = url + \"&_=\" + Date.now();\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) polling: \" + pollUrl + \".\");\n                        return [4 /*yield*/, this.httpClient.get(pollUrl, pollOptions)];\n                    case 4:\n                        response = _a.sent();\n                        if (response.statusCode === 204) {\n                            this.logger.log(LogLevel.Information, \"(LongPolling transport) Poll terminated by server.\");\n                            this.running = false;\n                        }\n                        else if (response.statusCode !== 200) {\n                            this.logger.log(LogLevel.Error, \"(LongPolling transport) Unexpected response code: \" + response.statusCode + \".\");\n                            // Unexpected status code\n                            this.closeError = new HttpError(response.statusText || \"\", response.statusCode);\n                            this.running = false;\n                        }\n                        else {\n                            // Process the response\n                            if (response.content) {\n                                this.logger.log(LogLevel.Trace, \"(LongPolling transport) data received. \" + getDataDetail(response.content, this.logMessageContent) + \".\");\n                                if (this.onreceive) {\n                                    this.onreceive(response.content);\n                                }\n                            }\n                            else {\n                                // This is another way timeout manifest.\n                                this.logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\n                            }\n                        }\n                        return [3 /*break*/, 6];\n                    case 5:\n                        e_1 = _a.sent();\n                        if (!this.running) {\n                            // Log but disregard errors that occur after stopping\n                            this.logger.log(LogLevel.Trace, \"(LongPolling transport) Poll errored after shutdown: \" + e_1.message);\n                        }\n                        else {\n                            if (e_1 instanceof TimeoutError) {\n                                // Ignore timeouts and reissue the poll.\n                                this.logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\n                            }\n                            else {\n                                // Close the connection with the error as the result.\n                                this.closeError = e_1;\n                                this.running = false;\n                            }\n                        }\n                        return [3 /*break*/, 6];\n                    case 6: return [3 /*break*/, 1];\n                    case 7: return [3 /*break*/, 9];\n                    case 8:\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) Polling complete.\");\n                        // We will reach here with pollAborted==false when the server returned a response causing the transport to stop.\n                        // If pollAborted==true then client initiated the stop and the stop method will raise the close event after DELETE is sent.\n                        if (!this.pollAborted) {\n                            this.raiseOnClose();\n                        }\n                        return [7 /*endfinally*/];\n                    case 9: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    LongPollingTransport.prototype.send = function (data) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (!this.running) {\n                    return [2 /*return*/, Promise.reject(new Error(\"Cannot send until the transport is connected\"))];\n                }\n                return [2 /*return*/, sendMessage(this.logger, \"LongPolling\", this.httpClient, this.url, this.accessTokenFactory, data, this.logMessageContent)];\n            });\n        });\n    };\n    LongPollingTransport.prototype.stop = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var deleteOptions, token;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) Stopping polling.\");\n                        // Tell receiving loop to stop, abort any current request, and then wait for it to finish\n                        this.running = false;\n                        this.pollAbort.abort();\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, , 5, 6]);\n                        return [4 /*yield*/, this.receiving];\n                    case 2:\n                        _a.sent();\n                        // Send DELETE to clean up long polling on the server\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) sending DELETE request to \" + this.url + \".\");\n                        deleteOptions = {\n                            headers: {},\n                        };\n                        return [4 /*yield*/, this.getAccessToken()];\n                    case 3:\n                        token = _a.sent();\n                        this.updateHeaderToken(deleteOptions, token);\n                        return [4 /*yield*/, this.httpClient.delete(this.url, deleteOptions)];\n                    case 4:\n                        _a.sent();\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) DELETE request sent.\");\n                        return [3 /*break*/, 6];\n                    case 5:\n                        this.logger.log(LogLevel.Trace, \"(LongPolling transport) Stop finished.\");\n                        // Raise close event here instead of in polling\n                        // It needs to happen after the DELETE request is sent\n                        this.raiseOnClose();\n                        return [7 /*endfinally*/];\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    LongPollingTransport.prototype.raiseOnClose = function () {\n        if (this.onclose) {\n            var logMessage = \"(LongPolling transport) Firing onclose event.\";\n            if (this.closeError) {\n                logMessage += \" Error: \" + this.closeError;\n            }\n            this.logger.log(LogLevel.Trace, logMessage);\n            this.onclose(this.closeError);\n        }\n    };\n    return LongPollingTransport;\n}());\nexport { LongPollingTransport };\n//# sourceMappingURL=LongPollingTransport.js.map","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\nimport { HttpClient, HttpResponse } from \"./HttpClient\";\nimport { LogLevel } from \"./ILogger\";\nimport { isArrayBuffer } from \"./Utils\";\nvar requestModule;\nif (typeof XMLHttpRequest === \"undefined\") {\n    // In order to ignore the dynamic require in webpack builds we need to do this magic\n    // @ts-ignore: TS doesn't know about these names\n    var requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\n    requestModule = requireFunc(\"request\");\n}\nvar NodeHttpClient = /** @class */ (function (_super) {\n    __extends(NodeHttpClient, _super);\n    function NodeHttpClient(logger) {\n        var _this = _super.call(this) || this;\n        if (typeof requestModule === \"undefined\") {\n            throw new Error(\"The 'request' module could not be loaded.\");\n        }\n        _this.logger = logger;\n        _this.cookieJar = requestModule.jar();\n        _this.request = requestModule.defaults({ jar: _this.cookieJar });\n        return _this;\n    }\n    NodeHttpClient.prototype.send = function (httpRequest) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var requestBody;\n            if (isArrayBuffer(httpRequest.content)) {\n                requestBody = Buffer.from(httpRequest.content);\n            }\n            else {\n                requestBody = httpRequest.content || \"\";\n            }\n            var currentRequest = _this.request(httpRequest.url, {\n                body: requestBody,\n                // If binary is expected 'null' should be used, otherwise for text 'utf8'\n                encoding: httpRequest.responseType === \"arraybuffer\" ? null : \"utf8\",\n                headers: __assign({ \n                    // Tell auth middleware to 401 instead of redirecting\n                    \"X-Requested-With\": \"XMLHttpRequest\" }, httpRequest.headers),\n                method: httpRequest.method,\n                timeout: httpRequest.timeout,\n            }, function (error, response, body) {\n                if (httpRequest.abortSignal) {\n                    httpRequest.abortSignal.onabort = null;\n                }\n                if (error) {\n                    if (error.code === \"ETIMEDOUT\") {\n                        _this.logger.log(LogLevel.Warning, \"Timeout from HTTP request.\");\n                        reject(new TimeoutError());\n                    }\n                    _this.logger.log(LogLevel.Warning, \"Error from HTTP request. \" + error);\n                    reject(error);\n                    return;\n                }\n                if (response.statusCode >= 200 && response.statusCode < 300) {\n                    resolve(new HttpResponse(response.statusCode, response.statusMessage || \"\", body));\n                }\n                else {\n                    reject(new HttpError(response.statusMessage || \"\", response.statusCode || 0));\n                }\n            });\n            if (httpRequest.abortSignal) {\n                httpRequest.abortSignal.onabort = function () {\n                    currentRequest.abort();\n                    reject(new AbortError());\n                };\n            }\n        });\n    };\n    NodeHttpClient.prototype.getCookieString = function (url) {\n        return this.cookieJar.getCookieString(url);\n    };\n    return NodeHttpClient;\n}(HttpClient));\nexport { NodeHttpClient };\n//# sourceMappingURL=NodeHttpClient.js.map","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { LogLevel } from \"./ILogger\";\nimport { TransferFormat } from \"./ITransport\";\nimport { Arg, getDataDetail, Platform, sendMessage } from \"./Utils\";\n/** @private */\nvar ServerSentEventsTransport = /** @class */ (function () {\n    function ServerSentEventsTransport(httpClient, accessTokenFactory, logger, logMessageContent, eventSourceConstructor) {\n        this.httpClient = httpClient;\n        this.accessTokenFactory = accessTokenFactory;\n        this.logger = logger;\n        this.logMessageContent = logMessageContent;\n        this.eventSourceConstructor = eventSourceConstructor;\n        this.onreceive = null;\n        this.onclose = null;\n    }\n    ServerSentEventsTransport.prototype.connect = function (url, transferFormat) {\n        return __awaiter(this, void 0, void 0, function () {\n            var token;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        Arg.isRequired(url, \"url\");\n                        Arg.isRequired(transferFormat, \"transferFormat\");\n                        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\n                        this.logger.log(LogLevel.Trace, \"(SSE transport) Connecting.\");\n                        // set url before accessTokenFactory because this.url is only for send and we set the auth header instead of the query string for send\n                        this.url = url;\n                        if (!this.accessTokenFactory) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.accessTokenFactory()];\n                    case 1:\n                        token = _a.sent();\n                        if (token) {\n                            url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + (\"access_token=\" + encodeURIComponent(token));\n                        }\n                        _a.label = 2;\n                    case 2: return [2 /*return*/, new Promise(function (resolve, reject) {\n                            var opened = false;\n                            if (transferFormat !== TransferFormat.Text) {\n                                reject(new Error(\"The Server-Sent Events transport only supports the 'Text' transfer format\"));\n                                return;\n                            }\n                            var eventSource;\n                            if (Platform.isBrowser || Platform.isWebWorker) {\n                                eventSource = new _this.eventSourceConstructor(url, { withCredentials: true });\n                            }\n                            else {\n                                // Non-browser passes cookies via the dictionary\n                                var cookies = _this.httpClient.getCookieString(url);\n                                eventSource = new _this.eventSourceConstructor(url, { withCredentials: true, headers: { Cookie: cookies } });\n                            }\n                            try {\n                                eventSource.onmessage = function (e) {\n                                    if (_this.onreceive) {\n                                        try {\n                                            _this.logger.log(LogLevel.Trace, \"(SSE transport) data received. \" + getDataDetail(e.data, _this.logMessageContent) + \".\");\n                                            _this.onreceive(e.data);\n                                        }\n                                        catch (error) {\n                                            _this.close(error);\n                                            return;\n                                        }\n                                    }\n                                };\n                                eventSource.onerror = function (e) {\n                                    var error = new Error(e.data || \"Error occurred\");\n                                    if (opened) {\n                                        _this.close(error);\n                                    }\n                                    else {\n                                        reject(error);\n                                    }\n                                };\n                                eventSource.onopen = function () {\n                                    _this.logger.log(LogLevel.Information, \"SSE connected to \" + _this.url);\n                                    _this.eventSource = eventSource;\n                                    opened = true;\n                                    resolve();\n                                };\n                            }\n                            catch (e) {\n                                reject(e);\n                                return;\n                            }\n                        })];\n                }\n            });\n        });\n    };\n    ServerSentEventsTransport.prototype.send = function (data) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (!this.eventSource) {\n                    return [2 /*return*/, Promise.reject(new Error(\"Cannot send until the transport is connected\"))];\n                }\n                return [2 /*return*/, sendMessage(this.logger, \"SSE\", this.httpClient, this.url, this.accessTokenFactory, data, this.logMessageContent)];\n            });\n        });\n    };\n    ServerSentEventsTransport.prototype.stop = function () {\n        this.close();\n        return Promise.resolve();\n    };\n    ServerSentEventsTransport.prototype.close = function (e) {\n        if (this.eventSource) {\n            this.eventSource.close();\n            this.eventSource = undefined;\n            if (this.onclose) {\n                this.onclose(e);\n            }\n        }\n    };\n    return ServerSentEventsTransport;\n}());\nexport { ServerSentEventsTransport };\n//# sourceMappingURL=ServerSentEventsTransport.js.map","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\nimport { SubjectSubscription } from \"./Utils\";\n/** Stream implementation to stream items to the server. */\nvar Subject = /** @class */ (function () {\n    function Subject() {\n        this.observers = [];\n    }\n    Subject.prototype.next = function (item) {\n        for (var _i = 0, _a = this.observers; _i < _a.length; _i++) {\n            var observer = _a[_i];\n            observer.next(item);\n        }\n    };\n    Subject.prototype.error = function (err) {\n        for (var _i = 0, _a = this.observers; _i < _a.length; _i++) {\n            var observer = _a[_i];\n            if (observer.error) {\n                observer.error(err);\n            }\n        }\n    };\n    Subject.prototype.complete = function () {\n        for (var _i = 0, _a = this.observers; _i < _a.length; _i++) {\n            var observer = _a[_i];\n            if (observer.complete) {\n                observer.complete();\n            }\n        }\n    };\n    Subject.prototype.subscribe = function (observer) {\n        this.observers.push(observer);\n        return new SubjectSubscription(this, observer);\n    };\n    return Subject;\n}());\nexport { Subject };\n//# sourceMappingURL=Subject.js.map","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\n// Not exported from index\n/** @private */\nvar TextMessageFormat = /** @class */ (function () {\n    function TextMessageFormat() {\n    }\n    TextMessageFormat.write = function (output) {\n        return \"\" + output + TextMessageFormat.RecordSeparator;\n    };\n    TextMessageFormat.parse = function (input) {\n        if (input[input.length - 1] !== TextMessageFormat.RecordSeparator) {\n            throw new Error(\"Message is incomplete.\");\n        }\n        var messages = input.split(TextMessageFormat.RecordSeparator);\n        messages.pop();\n        return messages;\n    };\n    TextMessageFormat.RecordSeparatorCode = 0x1e;\n    TextMessageFormat.RecordSeparator = String.fromCharCode(TextMessageFormat.RecordSeparatorCode);\n    return TextMessageFormat;\n}());\nexport { TextMessageFormat };\n//# sourceMappingURL=TextMessageFormat.js.map","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { LogLevel } from \"./ILogger\";\nimport { NullLogger } from \"./Loggers\";\n/** @private */\nvar Arg = /** @class */ (function () {\n    function Arg() {\n    }\n    Arg.isRequired = function (val, name) {\n        if (val === null || val === undefined) {\n            throw new Error(\"The '\" + name + \"' argument is required.\");\n        }\n    };\n    Arg.isIn = function (val, values, name) {\n        // TypeScript enums have keys for **both** the name and the value of each enum member on the type itself.\n        if (!(val in values)) {\n            throw new Error(\"Unknown \" + name + \" value: \" + val + \".\");\n        }\n    };\n    return Arg;\n}());\nexport { Arg };\n/** @private */\nvar Platform = /** @class */ (function () {\n    function Platform() {\n    }\n    Object.defineProperty(Platform, \"isBrowser\", {\n        get: function () {\n            return typeof window === \"object\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Platform, \"isWebWorker\", {\n        get: function () {\n            return typeof self === \"object\" && \"importScripts\" in self;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Platform, \"isNode\", {\n        get: function () {\n            return !this.isBrowser && !this.isWebWorker;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Platform;\n}());\nexport { Platform };\n/** @private */\nexport function getDataDetail(data, includeContent) {\n    var detail = \"\";\n    if (isArrayBuffer(data)) {\n        detail = \"Binary data of length \" + data.byteLength;\n        if (includeContent) {\n            detail += \". Content: '\" + formatArrayBuffer(data) + \"'\";\n        }\n    }\n    else if (typeof data === \"string\") {\n        detail = \"String data of length \" + data.length;\n        if (includeContent) {\n            detail += \". Content: '\" + data + \"'\";\n        }\n    }\n    return detail;\n}\n/** @private */\nexport function formatArrayBuffer(data) {\n    var view = new Uint8Array(data);\n    // Uint8Array.map only supports returning another Uint8Array?\n    var str = \"\";\n    view.forEach(function (num) {\n        var pad = num < 16 ? \"0\" : \"\";\n        str += \"0x\" + pad + num.toString(16) + \" \";\n    });\n    // Trim of trailing space.\n    return str.substr(0, str.length - 1);\n}\n// Also in signalr-protocol-msgpack/Utils.ts\n/** @private */\nexport function isArrayBuffer(val) {\n    return val && typeof ArrayBuffer !== \"undefined\" &&\n        (val instanceof ArrayBuffer ||\n            // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof\n            (val.constructor && val.constructor.name === \"ArrayBuffer\"));\n}\n/** @private */\nexport function sendMessage(logger, transportName, httpClient, url, accessTokenFactory, content, logMessageContent) {\n    return __awaiter(this, void 0, void 0, function () {\n        var _a, headers, token, responseType, response;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    if (!accessTokenFactory) return [3 /*break*/, 2];\n                    return [4 /*yield*/, accessTokenFactory()];\n                case 1:\n                    token = _b.sent();\n                    if (token) {\n                        headers = (_a = {},\n                            _a[\"Authorization\"] = \"Bearer \" + token,\n                            _a);\n                    }\n                    _b.label = 2;\n                case 2:\n                    logger.log(LogLevel.Trace, \"(\" + transportName + \" transport) sending data. \" + getDataDetail(content, logMessageContent) + \".\");\n                    responseType = isArrayBuffer(content) ? \"arraybuffer\" : \"text\";\n                    return [4 /*yield*/, httpClient.post(url, {\n                            content: content,\n                            headers: headers,\n                            responseType: responseType,\n                        })];\n                case 3:\n                    response = _b.sent();\n                    logger.log(LogLevel.Trace, \"(\" + transportName + \" transport) request complete. Response status: \" + response.statusCode + \".\");\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n/** @private */\nexport function createLogger(logger) {\n    if (logger === undefined) {\n        return new ConsoleLogger(LogLevel.Information);\n    }\n    if (logger === null) {\n        return NullLogger.instance;\n    }\n    if (logger.log) {\n        return logger;\n    }\n    return new ConsoleLogger(logger);\n}\n/** @private */\nvar SubjectSubscription = /** @class */ (function () {\n    function SubjectSubscription(subject, observer) {\n        this.subject = subject;\n        this.observer = observer;\n    }\n    SubjectSubscription.prototype.dispose = function () {\n        var index = this.subject.observers.indexOf(this.observer);\n        if (index > -1) {\n            this.subject.observers.splice(index, 1);\n        }\n        if (this.subject.observers.length === 0 && this.subject.cancelCallback) {\n            this.subject.cancelCallback().catch(function (_) { });\n        }\n    };\n    return SubjectSubscription;\n}());\nexport { SubjectSubscription };\n/** @private */\nvar ConsoleLogger = /** @class */ (function () {\n    function ConsoleLogger(minimumLogLevel) {\n        this.minimumLogLevel = minimumLogLevel;\n        this.outputConsole = console;\n    }\n    ConsoleLogger.prototype.log = function (logLevel, message) {\n        if (logLevel >= this.minimumLogLevel) {\n            switch (logLevel) {\n                case LogLevel.Critical:\n                case LogLevel.Error:\n                    this.outputConsole.error(\"[\" + new Date().toISOString() + \"] \" + LogLevel[logLevel] + \": \" + message);\n                    break;\n                case LogLevel.Warning:\n                    this.outputConsole.warn(\"[\" + new Date().toISOString() + \"] \" + LogLevel[logLevel] + \": \" + message);\n                    break;\n                case LogLevel.Information:\n                    this.outputConsole.info(\"[\" + new Date().toISOString() + \"] \" + LogLevel[logLevel] + \": \" + message);\n                    break;\n                default:\n                    // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug\n                    this.outputConsole.log(\"[\" + new Date().toISOString() + \"] \" + LogLevel[logLevel] + \": \" + message);\n                    break;\n            }\n        }\n    };\n    return ConsoleLogger;\n}());\nexport { ConsoleLogger };\n//# sourceMappingURL=Utils.js.map","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { LogLevel } from \"./ILogger\";\nimport { TransferFormat } from \"./ITransport\";\nimport { Arg, getDataDetail, Platform } from \"./Utils\";\n/** @private */\nvar WebSocketTransport = /** @class */ (function () {\n    function WebSocketTransport(httpClient, accessTokenFactory, logger, logMessageContent, webSocketConstructor) {\n        this.logger = logger;\n        this.accessTokenFactory = accessTokenFactory;\n        this.logMessageContent = logMessageContent;\n        this.webSocketConstructor = webSocketConstructor;\n        this.httpClient = httpClient;\n        this.onreceive = null;\n        this.onclose = null;\n    }\n    WebSocketTransport.prototype.connect = function (url, transferFormat) {\n        return __awaiter(this, void 0, void 0, function () {\n            var token;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        Arg.isRequired(url, \"url\");\n                        Arg.isRequired(transferFormat, \"transferFormat\");\n                        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\n                        this.logger.log(LogLevel.Trace, \"(WebSockets transport) Connecting.\");\n                        if (!this.accessTokenFactory) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.accessTokenFactory()];\n                    case 1:\n                        token = _a.sent();\n                        if (token) {\n                            url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + (\"access_token=\" + encodeURIComponent(token));\n                        }\n                        _a.label = 2;\n                    case 2: return [2 /*return*/, new Promise(function (resolve, reject) {\n                            url = url.replace(/^http/, \"ws\");\n                            var webSocket;\n                            var cookies = _this.httpClient.getCookieString(url);\n                            if (Platform.isNode && cookies) {\n                                // Only pass cookies when in non-browser environments\n                                webSocket = new _this.webSocketConstructor(url, undefined, {\n                                    headers: {\n                                        Cookie: \"\" + cookies,\n                                    },\n                                });\n                            }\n                            if (!webSocket) {\n                                // Chrome is not happy with passing 'undefined' as protocol\n                                webSocket = new _this.webSocketConstructor(url);\n                            }\n                            if (transferFormat === TransferFormat.Binary) {\n                                webSocket.binaryType = \"arraybuffer\";\n                            }\n                            // tslint:disable-next-line:variable-name\n                            webSocket.onopen = function (_event) {\n                                _this.logger.log(LogLevel.Information, \"WebSocket connected to \" + url + \".\");\n                                _this.webSocket = webSocket;\n                                resolve();\n                            };\n                            webSocket.onerror = function (event) {\n                                var error = null;\n                                // ErrorEvent is a browser only type we need to check if the type exists before using it\n                                if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\n                                    error = event.error;\n                                }\n                                else {\n                                    error = new Error(\"There was an error with the transport.\");\n                                }\n                                reject(error);\n                            };\n                            webSocket.onmessage = function (message) {\n                                _this.logger.log(LogLevel.Trace, \"(WebSockets transport) data received. \" + getDataDetail(message.data, _this.logMessageContent) + \".\");\n                                if (_this.onreceive) {\n                                    _this.onreceive(message.data);\n                                }\n                            };\n                            webSocket.onclose = function (event) { return _this.close(event); };\n                        })];\n                }\n            });\n        });\n    };\n    WebSocketTransport.prototype.send = function (data) {\n        if (this.webSocket && this.webSocket.readyState === this.webSocketConstructor.OPEN) {\n            this.logger.log(LogLevel.Trace, \"(WebSockets transport) sending data. \" + getDataDetail(data, this.logMessageContent) + \".\");\n            this.webSocket.send(data);\n            return Promise.resolve();\n        }\n        return Promise.reject(\"WebSocket is not in the OPEN state\");\n    };\n    WebSocketTransport.prototype.stop = function () {\n        if (this.webSocket) {\n            // Clear websocket handlers because we are considering the socket closed now\n            this.webSocket.onclose = function () { };\n            this.webSocket.onmessage = function () { };\n            this.webSocket.onerror = function () { };\n            this.webSocket.close();\n            this.webSocket = undefined;\n            // Manually invoke onclose callback inline so we know the HttpConnection was closed properly before returning\n            // This also solves an issue where websocket.onclose could take 18+ seconds to trigger during network disconnects\n            this.close(undefined);\n        }\n        return Promise.resolve();\n    };\n    WebSocketTransport.prototype.close = function (event) {\n        // webSocket will be null if the transport did not start successfully\n        this.logger.log(LogLevel.Trace, \"(WebSockets transport) socket closed.\");\n        if (this.onclose) {\n            if (event && (event.wasClean === false || event.code !== 1000)) {\n                this.onclose(new Error(\"WebSocket closed with status code: \" + event.code + \" (\" + event.reason + \").\"));\n            }\n            else {\n                this.onclose();\n            }\n        }\n    };\n    return WebSocketTransport;\n}());\nexport { WebSocketTransport };\n//# sourceMappingURL=WebSocketTransport.js.map","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\nimport { HttpClient, HttpResponse } from \"./HttpClient\";\nimport { LogLevel } from \"./ILogger\";\nvar XhrHttpClient = /** @class */ (function (_super) {\n    __extends(XhrHttpClient, _super);\n    function XhrHttpClient(logger) {\n        var _this = _super.call(this) || this;\n        _this.logger = logger;\n        return _this;\n    }\n    /** @inheritDoc */\n    XhrHttpClient.prototype.send = function (request) {\n        var _this = this;\n        // Check that abort was not signaled before calling send\n        if (request.abortSignal && request.abortSignal.aborted) {\n            return Promise.reject(new AbortError());\n        }\n        if (!request.method) {\n            return Promise.reject(new Error(\"No method defined.\"));\n        }\n        if (!request.url) {\n            return Promise.reject(new Error(\"No url defined.\"));\n        }\n        return new Promise(function (resolve, reject) {\n            var xhr = new XMLHttpRequest();\n            xhr.open(request.method, request.url, true);\n            xhr.withCredentials = true;\n            xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n            // Explicitly setting the Content-Type header for React Native on Android platform.\n            xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\n            var headers = request.headers;\n            if (headers) {\n                Object.keys(headers)\n                    .forEach(function (header) {\n                    xhr.setRequestHeader(header, headers[header]);\n                });\n            }\n            if (request.responseType) {\n                xhr.responseType = request.responseType;\n            }\n            if (request.abortSignal) {\n                request.abortSignal.onabort = function () {\n                    xhr.abort();\n                    reject(new AbortError());\n                };\n            }\n            if (request.timeout) {\n                xhr.timeout = request.timeout;\n            }\n            xhr.onload = function () {\n                if (request.abortSignal) {\n                    request.abortSignal.onabort = null;\n                }\n                if (xhr.status >= 200 && xhr.status < 300) {\n                    resolve(new HttpResponse(xhr.status, xhr.statusText, xhr.response || xhr.responseText));\n                }\n                else {\n                    reject(new HttpError(xhr.statusText, xhr.status));\n                }\n            };\n            xhr.onerror = function () {\n                _this.logger.log(LogLevel.Warning, \"Error from HTTP request. \" + xhr.status + \": \" + xhr.statusText + \".\");\n                reject(new HttpError(xhr.statusText, xhr.status));\n            };\n            xhr.ontimeout = function () {\n                _this.logger.log(LogLevel.Warning, \"Timeout from HTTP request.\");\n                reject(new TimeoutError());\n            };\n            xhr.send(request.content || \"\");\n        });\n    };\n    return XhrHttpClient;\n}(HttpClient));\nexport { XhrHttpClient };\n//# sourceMappingURL=XhrHttpClient.js.map","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\n// Version token that will be replaced by the prepack command\n/** The version of the SignalR client. */\nexport var VERSION = \"0.0.0-DEV_BUILD\";\nexport { AbortError, HttpError, TimeoutError } from \"./Errors\";\nexport { HttpClient, HttpResponse } from \"./HttpClient\";\nexport { DefaultHttpClient } from \"./DefaultHttpClient\";\nexport { HubConnection, HubConnectionState } from \"./HubConnection\";\nexport { HubConnectionBuilder } from \"./HubConnectionBuilder\";\nexport { MessageType } from \"./IHubProtocol\";\nexport { LogLevel } from \"./ILogger\";\nexport { HttpTransportType, TransferFormat } from \"./ITransport\";\nexport { NullLogger } from \"./Loggers\";\nexport { JsonHubProtocol } from \"./JsonHubProtocol\";\nexport { Subject } from \"./Subject\";\n//# sourceMappingURL=index.js.map","\"use strict\";\n// This is a single-file self-contained module to avoid the need for a Webpack build\nvar DotNet;\n(function (DotNet) {\n    window.DotNet = DotNet; // Ensure reachable from anywhere\n    var jsonRevivers = [];\n    var pendingAsyncCalls = {};\n    var cachedJSFunctions = {};\n    var nextAsyncCallId = 1; // Start at 1 because zero signals \"no response needed\"\n    var dotNetDispatcher = null;\n    /**\n     * Sets the specified .NET call dispatcher as the current instance so that it will be used\n     * for future invocations.\n     *\n     * @param dispatcher An object that can dispatch calls from JavaScript to a .NET runtime.\n     */\n    function attachDispatcher(dispatcher) {\n        dotNetDispatcher = dispatcher;\n    }\n    DotNet.attachDispatcher = attachDispatcher;\n    /**\n     * Adds a JSON reviver callback that will be used when parsing arguments received from .NET.\n     * @param reviver The reviver to add.\n     */\n    function attachReviver(reviver) {\n        jsonRevivers.push(reviver);\n    }\n    DotNet.attachReviver = attachReviver;\n    /**\n     * Invokes the specified .NET public method synchronously. Not all hosting scenarios support\n     * synchronous invocation, so if possible use invokeMethodAsync instead.\n     *\n     * @param assemblyName The short name (without key/version or .dll extension) of the .NET assembly containing the method.\n     * @param methodIdentifier The identifier of the method to invoke. The method must have a [JSInvokable] attribute specifying this identifier.\n     * @param args Arguments to pass to the method, each of which must be JSON-serializable.\n     * @returns The result of the operation.\n     */\n    function invokeMethod(assemblyName, methodIdentifier) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        return invokePossibleInstanceMethod(assemblyName, methodIdentifier, null, args);\n    }\n    DotNet.invokeMethod = invokeMethod;\n    /**\n     * Invokes the specified .NET public method asynchronously.\n     *\n     * @param assemblyName The short name (without key/version or .dll extension) of the .NET assembly containing the method.\n     * @param methodIdentifier The identifier of the method to invoke. The method must have a [JSInvokable] attribute specifying this identifier.\n     * @param args Arguments to pass to the method, each of which must be JSON-serializable.\n     * @returns A promise representing the result of the operation.\n     */\n    function invokeMethodAsync(assemblyName, methodIdentifier) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        return invokePossibleInstanceMethodAsync(assemblyName, methodIdentifier, null, args);\n    }\n    DotNet.invokeMethodAsync = invokeMethodAsync;\n    function invokePossibleInstanceMethod(assemblyName, methodIdentifier, dotNetObjectId, args) {\n        var dispatcher = getRequiredDispatcher();\n        if (dispatcher.invokeDotNetFromJS) {\n            var argsJson = JSON.stringify(args, argReplacer);\n            var resultJson = dispatcher.invokeDotNetFromJS(assemblyName, methodIdentifier, dotNetObjectId, argsJson);\n            return resultJson ? parseJsonWithRevivers(resultJson) : null;\n        }\n        else {\n            throw new Error('The current dispatcher does not support synchronous calls from JS to .NET. Use invokeMethodAsync instead.');\n        }\n    }\n    function invokePossibleInstanceMethodAsync(assemblyName, methodIdentifier, dotNetObjectId, args) {\n        if (assemblyName && dotNetObjectId) {\n            throw new Error(\"For instance method calls, assemblyName should be null. Received '\" + assemblyName + \"'.\");\n        }\n        var asyncCallId = nextAsyncCallId++;\n        var resultPromise = new Promise(function (resolve, reject) {\n            pendingAsyncCalls[asyncCallId] = { resolve: resolve, reject: reject };\n        });\n        try {\n            var argsJson = JSON.stringify(args, argReplacer);\n            getRequiredDispatcher().beginInvokeDotNetFromJS(asyncCallId, assemblyName, methodIdentifier, dotNetObjectId, argsJson);\n        }\n        catch (ex) {\n            // Synchronous failure\n            completePendingCall(asyncCallId, false, ex);\n        }\n        return resultPromise;\n    }\n    function getRequiredDispatcher() {\n        if (dotNetDispatcher !== null) {\n            return dotNetDispatcher;\n        }\n        throw new Error('No .NET call dispatcher has been set.');\n    }\n    function completePendingCall(asyncCallId, success, resultOrError) {\n        if (!pendingAsyncCalls.hasOwnProperty(asyncCallId)) {\n            throw new Error(\"There is no pending async call with ID \" + asyncCallId + \".\");\n        }\n        var asyncCall = pendingAsyncCalls[asyncCallId];\n        delete pendingAsyncCalls[asyncCallId];\n        if (success) {\n            asyncCall.resolve(resultOrError);\n        }\n        else {\n            asyncCall.reject(resultOrError);\n        }\n    }\n    /**\n     * Receives incoming calls from .NET and dispatches them to JavaScript.\n     */\n    DotNet.jsCallDispatcher = {\n        /**\n         * Finds the JavaScript function matching the specified identifier.\n         *\n         * @param identifier Identifies the globally-reachable function to be returned.\n         * @returns A Function instance.\n         */\n        findJSFunction: findJSFunction,\n        /**\n         * Invokes the specified synchronous JavaScript function.\n         *\n         * @param identifier Identifies the globally-reachable function to invoke.\n         * @param argsJson JSON representation of arguments to be passed to the function.\n         * @returns JSON representation of the invocation result.\n         */\n        invokeJSFromDotNet: function (identifier, argsJson) {\n            var result = findJSFunction(identifier).apply(null, parseJsonWithRevivers(argsJson));\n            return result === null || result === undefined\n                ? null\n                : JSON.stringify(result, argReplacer);\n        },\n        /**\n         * Invokes the specified synchronous or asynchronous JavaScript function.\n         *\n         * @param asyncHandle A value identifying the asynchronous operation. This value will be passed back in a later call to endInvokeJSFromDotNet.\n         * @param identifier Identifies the globally-reachable function to invoke.\n         * @param argsJson JSON representation of arguments to be passed to the function.\n         */\n        beginInvokeJSFromDotNet: function (asyncHandle, identifier, argsJson) {\n            // Coerce synchronous functions into async ones, plus treat\n            // synchronous exceptions the same as async ones\n            var promise = new Promise(function (resolve) {\n                var synchronousResultOrPromise = findJSFunction(identifier).apply(null, parseJsonWithRevivers(argsJson));\n                resolve(synchronousResultOrPromise);\n            });\n            // We only listen for a result if the caller wants to be notified about it\n            if (asyncHandle) {\n                // On completion, dispatch result back to .NET\n                // Not using \"await\" because it codegens a lot of boilerplate\n                promise.then(function (result) { return getRequiredDispatcher().endInvokeJSFromDotNet(asyncHandle, true, JSON.stringify([asyncHandle, true, result], argReplacer)); }, function (error) { return getRequiredDispatcher().endInvokeJSFromDotNet(asyncHandle, false, JSON.stringify([asyncHandle, false, formatError(error)])); });\n            }\n        },\n        /**\n         * Receives notification that an async call from JS to .NET has completed.\n         * @param asyncCallId The identifier supplied in an earlier call to beginInvokeDotNetFromJS.\n         * @param success A flag to indicate whether the operation completed successfully.\n         * @param resultOrExceptionMessage Either the operation result or an error message.\n         */\n        endInvokeDotNetFromJS: function (asyncCallId, success, resultOrExceptionMessage) {\n            var resultOrError = success ? resultOrExceptionMessage : new Error(resultOrExceptionMessage);\n            completePendingCall(parseInt(asyncCallId), success, resultOrError);\n        }\n    };\n    function parseJsonWithRevivers(json) {\n        return json ? JSON.parse(json, function (key, initialValue) {\n            // Invoke each reviver in order, passing the output from the previous reviver,\n            // so that each one gets a chance to transform the value\n            return jsonRevivers.reduce(function (latestValue, reviver) { return reviver(key, latestValue); }, initialValue);\n        }) : null;\n    }\n    function formatError(error) {\n        if (error instanceof Error) {\n            return error.message + \"\\n\" + error.stack;\n        }\n        else {\n            return error ? error.toString() : 'null';\n        }\n    }\n    function findJSFunction(identifier) {\n        if (cachedJSFunctions.hasOwnProperty(identifier)) {\n            return cachedJSFunctions[identifier];\n        }\n        var result = window;\n        var resultIdentifier = 'window';\n        var lastSegmentValue;\n        identifier.split('.').forEach(function (segment) {\n            if (segment in result) {\n                lastSegmentValue = result;\n                result = result[segment];\n                resultIdentifier += '.' + segment;\n            }\n            else {\n                throw new Error(\"Could not find '\" + segment + \"' in '\" + resultIdentifier + \"'.\");\n            }\n        });\n        if (result instanceof Function) {\n            result = result.bind(lastSegmentValue);\n            cachedJSFunctions[identifier] = result;\n            return result;\n        }\n        else {\n            throw new Error(\"The value '\" + resultIdentifier + \"' is not a function.\");\n        }\n    }\n    var DotNetObject = /** @class */ (function () {\n        function DotNetObject(_id) {\n            this._id = _id;\n        }\n        DotNetObject.prototype.invokeMethod = function (methodIdentifier) {\n            var args = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                args[_i - 1] = arguments[_i];\n            }\n            return invokePossibleInstanceMethod(null, methodIdentifier, this._id, args);\n        };\n        DotNetObject.prototype.invokeMethodAsync = function (methodIdentifier) {\n            var args = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                args[_i - 1] = arguments[_i];\n            }\n            return invokePossibleInstanceMethodAsync(null, methodIdentifier, this._id, args);\n        };\n        DotNetObject.prototype.dispose = function () {\n            var promise = invokePossibleInstanceMethodAsync(null, '__Dispose', this._id, null);\n            promise.catch(function (error) { return console.error(error); });\n        };\n        DotNetObject.prototype.serializeAsArg = function () {\n            return { __dotNetObject: this._id };\n        };\n        return DotNetObject;\n    }());\n    var dotNetObjectRefKey = '__dotNetObject';\n    attachReviver(function reviveDotNetObject(key, value) {\n        if (value && typeof value === 'object' && value.hasOwnProperty(dotNetObjectRefKey)) {\n            return new DotNetObject(value.__dotNetObject);\n        }\n        // Unrecognized - let another reviver handle it\n        return value;\n    });\n    function argReplacer(key, value) {\n        return value instanceof DotNetObject ? value.serializeAsArg() : value;\n    }\n})(DotNet || (DotNet = {}));\n//# sourceMappingURL=Microsoft.JSInterop.js.map","'use strict';\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = require('util/');\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import '@dotnet/jsinterop';\nimport './GlobalExports';\nimport * as signalR from '@aspnet/signalr';\nimport { MessagePackHubProtocol } from '@aspnet/signalr-protocol-msgpack';\nimport { shouldAutoStart } from './BootCommon';\nimport { RenderQueue } from './Platform/Circuits/RenderQueue';\nimport { ConsoleLogger } from './Platform/Logging/Loggers';\nimport { LogLevel, Logger } from './Platform/Logging/Logger';\nimport { discoverComponents, CircuitDescriptor } from './Platform/Circuits/CircuitManager';\nimport { setEventDispatcher } from './Rendering/RendererEventDispatcher';\nimport { resolveOptions, BlazorOptions } from './Platform/Circuits/BlazorOptions';\nimport { DefaultReconnectionHandler } from './Platform/Circuits/DefaultReconnectionHandler';\nimport { attachRootComponentToLogicalElement } from './Rendering/Renderer';\n\nlet renderingFailed = false;\nlet started = false;\n\nasync function boot(userOptions?: Partial<BlazorOptions>): Promise<void> {\n  if (started) {\n    throw new Error('Blazor has already started.');\n  }\n  started = true;\n\n  // Establish options to be used\n  const options = resolveOptions(userOptions);\n  const logger = new ConsoleLogger(options.logLevel);\n  window['Blazor'].defaultReconnectionHandler = new DefaultReconnectionHandler(logger);\n  options.reconnectionHandler = options.reconnectionHandler || window['Blazor'].defaultReconnectionHandler;\n  logger.log(LogLevel.Information, 'Starting up blazor server-side application.');\n\n  const components = discoverComponents(document);\n  const circuit = new CircuitDescriptor(components);\n\n  const initialConnection = await initializeConnection(options, logger, circuit);\n  const circuitStarted = await circuit.startCircuit(initialConnection);\n  if (!circuitStarted) {\n    logger.log(LogLevel.Error, 'Failed to start the circuit.');\n    return;\n  }\n\n  const reconnect = async (existingConnection?: signalR.HubConnection): Promise<boolean> => {\n    if (renderingFailed) {\n      // We can't reconnect after a failure, so exit early.\n      return false;\n    }\n\n    const reconnection = existingConnection || await initializeConnection(options, logger, circuit);\n    if (!(await circuit.reconnect(reconnection))) {\n      logger.log(LogLevel.Information, 'Reconnection attempt to the circuit was rejected by the server. This may indicate that the associated state is no longer available on the server.');\n      return false;\n    }\n\n    options.reconnectionHandler!.onConnectionUp();\n\n    return true;\n  };\n\n  window.addEventListener(\n    'unload',\n    () => {\n      const data = new FormData();\n      const circuitId = circuit.circuitId!;\n      data.append('circuitId', circuitId);\n      navigator.sendBeacon('_blazor/disconnect', data);\n    },\n    false\n  );\n\n  window['Blazor'].reconnect = reconnect;\n\n  logger.log(LogLevel.Information, 'Blazor server-side application started.');\n}\n\nasync function initializeConnection(options: BlazorOptions, logger: Logger, circuit: CircuitDescriptor): Promise<signalR.HubConnection> {\n  const hubProtocol = new MessagePackHubProtocol();\n  (hubProtocol as unknown as { name: string }).name = 'blazorpack';\n\n  const connectionBuilder = new signalR.HubConnectionBuilder()\n    .withUrl('_blazor')\n    .withHubProtocol(hubProtocol);\n\n  options.configureSignalR(connectionBuilder);\n\n  const connection = connectionBuilder.build();\n\n  setEventDispatcher((descriptor, args) => {\n    return connection.send('DispatchBrowserEvent', JSON.stringify(descriptor), JSON.stringify(args));\n  });\n\n  // Configure navigation via SignalR\n  window['Blazor']._internal.navigationManager.listenForNavigationEvents((uri: string, intercepted: boolean): Promise<void> => {\n    return connection.send('OnLocationChanged', uri, intercepted);\n  });\n\n  connection.on('JS.AttachComponent', (componentId, selector) => attachRootComponentToLogicalElement(0, circuit.resolveElement(selector), componentId));\n  connection.on('JS.BeginInvokeJS', DotNet.jsCallDispatcher.beginInvokeJSFromDotNet);\n  connection.on('JS.EndInvokeDotNet', (args: string) => DotNet.jsCallDispatcher.endInvokeDotNetFromJS(...(JSON.parse(args) as [string, boolean, unknown])));\n\n  const renderQueue = RenderQueue.getOrCreate(logger);\n  connection.on('JS.RenderBatch', (batchId: number, batchData: Uint8Array) => {\n    logger.log(LogLevel.Debug, `Received render batch with id ${batchId} and ${batchData.byteLength} bytes.`);\n    renderQueue.processBatch(batchId, batchData, connection);\n  });\n\n  connection.onclose(error => !renderingFailed && options.reconnectionHandler!.onConnectionDown(options.reconnectionOptions, error));\n  connection.on('JS.Error', error => {\n    renderingFailed = true;\n    unhandledError(connection, error, logger);\n  });\n\n  window['Blazor']._internal.forceCloseConnection = () => connection.stop();\n\n  try {\n    await connection.start();\n  } catch (ex) {\n    unhandledError(connection, ex, logger);\n  }\n\n  DotNet.attachDispatcher({\n    beginInvokeDotNetFromJS: (callId, assemblyName, methodIdentifier, dotNetObjectId, argsJson): void => {\n      connection.send('BeginInvokeDotNetFromJS', callId ? callId.toString() : null, assemblyName, methodIdentifier, dotNetObjectId || 0, argsJson);\n    },\n    endInvokeJSFromDotNet: (asyncHandle, succeeded, argsJson): void => {\n      connection.send('EndInvokeJSFromDotNet', asyncHandle, succeeded, argsJson);\n    },\n  });\n\n  return connection;\n}\n\nfunction unhandledError(connection: signalR.HubConnection, err: Error, logger: Logger): void {\n  logger.log(LogLevel.Error, err);\n\n  // Disconnect on errors.\n  //\n  // Trying to call methods on the connection after its been closed will throw.\n  if (connection) {\n    connection.stop();\n  }\n}\n\nwindow['Blazor'].start = boot;\n\nif (shouldAutoStart()) {\n  boot();\n}\n","export async function fetchBootConfigAsync() {\n  // Later we might make the location of this configurable (e.g., as an attribute on the <script>\n  // element that's importing this file), but currently there isn't a use case for that.\n  const bootConfigResponse = await fetch('_framework/blazor.boot.json', { method: 'Get', credentials: 'include' });\n  return bootConfigResponse.json() as Promise<BootJsonData>;\n}\n\nexport function loadEmbeddedResourcesAsync(bootConfig: BootJsonData): Promise<any> {\n  const cssLoadingPromises = bootConfig.cssReferences.map(cssReference => {\n    const linkElement = document.createElement('link');\n    linkElement.rel = 'stylesheet';\n    linkElement.href = cssReference;\n    return loadResourceFromElement(linkElement);\n  });\n  const jsLoadingPromises = bootConfig.jsReferences.map(jsReference => {\n    const scriptElement = document.createElement('script');\n    scriptElement.src = jsReference;\n    return loadResourceFromElement(scriptElement);\n  });\n  return Promise.all(cssLoadingPromises.concat(jsLoadingPromises));\n}\n\nfunction loadResourceFromElement(element: HTMLElement) {\n  return new Promise((resolve, reject) => {\n    element.onload = resolve;\n    element.onerror = reject;\n    document.head!.appendChild(element);\n  });\n}\n\n// Keep in sync with BootJsonData in Microsoft.AspNetCore.Blazor.Build\ninterface BootJsonData {\n  main: string;\n  entryPoint: string;\n  assemblyReferences: string[];\n  cssReferences: string[];\n  jsReferences: string[];\n  linkerEnabled: boolean;\n}\n\n// Tells you if the script was added without <script src=\"...\" autostart=\"false\"></script>\nexport function shouldAutoStart() {\n  return !!(document &&\n    document.currentScript &&\n    document.currentScript.getAttribute('autostart') !== 'false');\n}\n","// Expose an export called 'platform' of the interface type 'Platform',\n// so that consumers can be agnostic about which implementation they use.\n// Basic alternative to having an actual DI container.\nimport { Platform } from './Platform/Platform';\n\nexport let platform: Platform;\n\nexport function setPlatform(platformInstance: Platform) {\n  platform = platformInstance;\n  return platform;\n}\n","import { navigateTo, internalFunctions as navigationManagerInternalFunctions } from './Services/NavigationManager';\nimport { internalFunctions as httpInternalFunctions } from './Services/Http';\nimport { attachRootComponentToElement } from './Rendering/Renderer';\n\n// Make the following APIs available in global scope for invocation from JS\nwindow['Blazor'] = {\n  navigateTo,\n\n  _internal: {\n    attachRootComponentToElement,\n    http: httpInternalFunctions,\n    navigationManager: navigationManagerInternalFunctions,\n  },\n};\n","import { LogLevel } from '../Logging/Logger';\n\nexport interface BlazorOptions {\n  configureSignalR: (builder: signalR.HubConnectionBuilder) => void;\n  logLevel: LogLevel;\n  reconnectionOptions: ReconnectionOptions;\n  reconnectionHandler?: ReconnectionHandler;\n}\n\nexport function resolveOptions(userOptions?: Partial<BlazorOptions>): BlazorOptions {\n    const result = { ...defaultOptions, ...userOptions };\n\n    // The spread operator can't be used for a deep merge, so do the same for subproperties\n    if (userOptions && userOptions.reconnectionOptions) {\n      result.reconnectionOptions = { ...defaultOptions.reconnectionOptions, ...userOptions.reconnectionOptions };\n    }\n\n    return result;\n}\n\nexport interface ReconnectionOptions {\n  maxRetries: number;\n  retryIntervalMilliseconds: number;\n  dialogId: string;\n}\n\nexport interface ReconnectionHandler {\n  onConnectionDown(options: ReconnectionOptions, error?: Error): void;\n  onConnectionUp(): void;\n}\n\nconst defaultOptions: BlazorOptions = {\n    configureSignalR: (_) => { },\n    logLevel: LogLevel.Warning,\n    reconnectionOptions: {\n      maxRetries: 5,\n      retryIntervalMilliseconds: 3000,\n      dialogId: 'components-reconnect-modal',\n    },\n};\n","import { internalFunctions as navigationManagerFunctions } from '../../Services/NavigationManager';\nimport { toLogicalRootCommentElement, LogicalElement } from '../../Rendering/LogicalElements';\n\nexport class CircuitDescriptor {\n  public circuitId?: string;\n\n  public components: ComponentDescriptor[];\n\n  public constructor(components: ComponentDescriptor[]) {\n    this.circuitId = undefined;\n    this.components = components;\n  }\n\n  public reconnect(reconnection: signalR.HubConnection): Promise<boolean> {\n    if (!this.circuitId) {\n      throw new Error('Circuit host not initialized.');\n    }\n\n    return reconnection.invoke<boolean>('ConnectCircuit', this.circuitId);\n  }\n\n  public initialize(circuitId: string): void {\n    if (this.circuitId) {\n      throw new Error(`Circuit host '${this.circuitId}' already initialized.`);\n    }\n\n    this.circuitId = circuitId;\n  }\n\n  public async startCircuit(connection: signalR.HubConnection): Promise<boolean> {\n\n    const result = await connection.invoke<string>(\n      'StartCircuit',\n      navigationManagerFunctions.getBaseURI(),\n      navigationManagerFunctions.getLocationHref(),\n      JSON.stringify(this.components.map(c => c.toRecord()))\n    );\n\n    if (result) {\n      this.initialize(result);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  public resolveElement(sequence: string): LogicalElement {\n    const parsedSequence = Number.parseInt(sequence);\n    if (!Number.isNaN(parsedSequence)) {\n      return toLogicalRootCommentElement(this.components[parsedSequence].start as Comment, this.components[parsedSequence].end as Comment);\n    } else {\n      throw new Error(`Invalid sequence number '${sequence}'.`);\n    }\n  }\n}\n\ninterface ComponentMarker {\n  type: string;\n  sequence: number;\n  descriptor: string;\n}\n\nexport class ComponentDescriptor {\n  public type: string;\n\n  public start: Node;\n\n  public end?: Node;\n\n  public sequence: number;\n\n  public descriptor: string;\n\n  public constructor(type: string, start: Node, end: Node | undefined, sequence: number, descriptor: string) {\n    this.type = type;\n    this.start = start;\n    this.end = end;\n    this.sequence = sequence;\n    this.descriptor = descriptor;\n  }\n\n  public toRecord(): ComponentMarker {\n    const result = { type: this.type, sequence: this.sequence, descriptor: this.descriptor };\n    return result;\n  }\n}\n\nexport function discoverComponents(document: Document): ComponentDescriptor[] {\n  const componentComments = resolveComponentComments(document);\n  const discoveredComponents: ComponentDescriptor[] = [];\n  for (let i = 0; i < componentComments.length; i++) {\n    const componentComment = componentComments[i];\n    const entry = new ComponentDescriptor(\n      componentComment.type,\n      componentComment.start,\n      componentComment.end,\n      componentComment.sequence,\n      componentComment.descriptor,\n    );\n\n    discoveredComponents.push(entry);\n  }\n\n  return discoveredComponents;\n}\n\n\ninterface ComponentComment {\n  type: 'server';\n  sequence: number;\n  descriptor: string;\n  start: Node;\n  end?: Node;\n  prerenderId?: string;\n}\n\nfunction resolveComponentComments(node: Node): ComponentComment[] {\n  if (!node.hasChildNodes()) {\n    return [];\n  }\n\n  const result: ComponentComment[] = [];\n  const childNodeIterator = new ComponentCommentIterator(node.childNodes);\n  while (childNodeIterator.next() && childNodeIterator.currentElement) {\n    const componentComment = getComponentComment(childNodeIterator);\n    if (componentComment) {\n      result.push(componentComment);\n    } else {\n      const childResults = resolveComponentComments(childNodeIterator.currentElement);\n      for (let j = 0; j < childResults.length; j++) {\n        const childResult = childResults[j];\n        result.push(childResult);\n      }\n    }\n  }\n\n  return result;\n}\n\nconst blazorCommentRegularExpression = /\\W*Blazor:[^{]*(.*)$/;\n\nfunction getComponentComment(commentNodeIterator: ComponentCommentIterator): ComponentComment | undefined {\n  const candidateStart = commentNodeIterator.currentElement;\n\n  if (!candidateStart || candidateStart.nodeType !== Node.COMMENT_NODE) {\n    return;\n  }\n  if (candidateStart.textContent) {\n    const componentStartComment = new RegExp(blazorCommentRegularExpression);\n    const definition = componentStartComment.exec(candidateStart.textContent);\n    const json = definition && definition[1];\n\n    if (json) {\n      try {\n        return createComponentComment(json, candidateStart, commentNodeIterator);\n      } catch (error) {\n        throw new Error(`Found malformed component comment at ${candidateStart.textContent}`);\n      }\n    } else {\n      return;\n    }\n  }\n}\n\nfunction createComponentComment(json: string, start: Node, iterator: ComponentCommentIterator): ComponentComment {\n  const payload = JSON.parse(json) as ComponentComment;\n  const { type, sequence, descriptor, prerenderId } = payload;\n  if (type !== 'server') {\n    throw new Error(`Invalid component type '${type}'.`);\n  }\n\n  if (!descriptor) {\n    throw new Error('descriptor must be defined when using a descriptor.');\n  }\n\n  if (sequence === undefined) {\n    throw new Error('sequence must be defined when using a descriptor.');\n  }\n\n  if (!Number.isInteger(sequence)) {\n    throw new Error(`Error parsing the sequence '${sequence}' for component '${json}'`);\n  }\n\n  if (!prerenderId) {\n    return {\n      type,\n      sequence: sequence,\n      descriptor,\n      start,\n    };\n  } else {\n    const end = getComponentEndComment(prerenderId, iterator);\n    if (!end) {\n      throw new Error(`Could not find an end component comment for '${start}'`);\n    }\n\n    return {\n      type,\n      sequence,\n      descriptor,\n      start,\n      prerenderId,\n      end,\n    };\n  }\n}\n\nfunction getComponentEndComment(prerenderedId: string, iterator: ComponentCommentIterator): ChildNode | undefined {\n  while (iterator.next() && iterator.currentElement) {\n    const node = iterator.currentElement;\n    if (node.nodeType !== Node.COMMENT_NODE) {\n      continue;\n    }\n    if (!node.textContent) {\n      continue;\n    }\n\n    const definition = new RegExp(blazorCommentRegularExpression).exec(node.textContent);\n    const json = definition && definition[1];\n    if (!json) {\n      continue;\n    }\n\n    validateEndComponentPayload(json, prerenderedId);\n\n    return node;\n  }\n\n  return undefined;\n}\n\nfunction validateEndComponentPayload(json: string, prerenderedId: string): void {\n  const payload = JSON.parse(json) as ComponentComment;\n  if (Object.keys(payload).length !== 1) {\n    throw new Error(`Invalid end of component comment: '${json}'`);\n  }\n  const prerenderedEndId = payload.prerenderId;\n  if (!prerenderedEndId) {\n    throw new Error(`End of component comment must have a value for the prerendered property: '${json}'`);\n  }\n  if (prerenderedEndId !== prerenderedId) {\n    throw new Error(`End of component comment prerendered property must match the start comment prerender id: '${prerenderedId}', '${prerenderedEndId}'`);\n  }\n}\n\nclass ComponentCommentIterator {\n\n  private childNodes: NodeListOf<ChildNode>;\n\n  private currentIndex: number;\n\n  private length: number;\n\n  public currentElement: ChildNode | undefined;\n\n  public constructor(childNodes: NodeListOf<ChildNode>) {\n    this.childNodes = childNodes;\n    this.currentIndex = -1;\n    this.length = childNodes.length;\n  }\n\n  public next(): boolean {\n    this.currentIndex++;\n    if (this.currentIndex < this.length) {\n      this.currentElement = this.childNodes[this.currentIndex];\n      return true;\n    } else {\n      this.currentElement = undefined;\n      return false;\n    }\n  }\n}\n\n\n","import { ReconnectDisplay } from './ReconnectDisplay';\nimport { Logger, LogLevel } from '../Logging/Logger';\n\nexport class DefaultReconnectDisplay implements ReconnectDisplay {\n  modal: HTMLDivElement;\n\n  message: HTMLHeadingElement;\n\n  button: HTMLButtonElement;\n\n  addedToDom: boolean = false;\n\n  reloadParagraph: HTMLParagraphElement;\n\n  constructor(dialogId: string, private readonly document: Document, private readonly logger: Logger) {\n    this.modal = this.document.createElement('div');\n    this.modal.id = dialogId;\n\n    const modalStyles = [\n      'position: fixed',\n      'top: 0',\n      'right: 0',\n      'bottom: 0',\n      'left: 0',\n      'z-index: 1000',\n      'display: none',\n      'overflow: hidden',\n      'background-color: #fff',\n      'opacity: 0.8',\n      'text-align: center',\n      'font-weight: bold',\n    ];\n\n    this.modal.style.cssText = modalStyles.join(';');\n    this.modal.innerHTML = '<h5 style=\"margin-top: 20px\"></h5><button style=\"margin:5px auto 5px\">Retry</button><p>Alternatively, <a href>reload</a></p>';\n    this.message = this.modal.querySelector('h5')!;\n    this.button = this.modal.querySelector('button')!;\n    this.reloadParagraph = this.modal.querySelector('p')!;\n\n    this.button.addEventListener('click', async () => {\n      this.show();\n\n      try {\n        // reconnect will asynchronously return:\n        // - true to mean success\n        // - false to mean we reached the server, but it rejected the connection (e.g., unknown circuit ID)\n        // - exception to mean we didn't reach the server (this can be sync or async)\n        const successful = await window['Blazor'].reconnect();\n        if (!successful) {\n          this.rejected();\n        }\n      } catch (err) {\n        // We got an exception, server is currently unavailable\n        this.logger.log(LogLevel.Error, err);\n        this.failed();\n      }\n    });\n    this.reloadParagraph.querySelector('a')!.addEventListener('click', () => location.reload());\n  }\n\n  show(): void {\n    if (!this.addedToDom) {\n      this.addedToDom = true;\n      this.document.body.appendChild(this.modal);\n    }\n    this.modal.style.display = 'block';\n    this.button.style.display = 'none';\n    this.reloadParagraph.style.display = 'none';\n    this.message.textContent = 'Attempting to reconnect to the server...';\n  }\n\n  hide(): void {\n    this.modal.style.display = 'none';\n  }\n\n  failed(): void {\n    this.button.style.display = 'block';\n    this.reloadParagraph.style.display = 'none';\n    this.message.innerHTML = 'Reconnection failed. Try <a href>reloading</a> the page if you\\'re unable to reconnect.';\n    this.message.querySelector('a')!.addEventListener('click', () => location.reload());\n  }\n\n  rejected(): void {\n    this.button.style.display = 'none';\n    this.reloadParagraph.style.display = 'none';\n    this.message.innerHTML = 'Could not reconnect to the server. <a href>Reload</a> the page to restore functionality.';\n    this.message.querySelector('a')!.addEventListener('click', () => location.reload());\n  }\n}\n","import { ReconnectionHandler, ReconnectionOptions } from './BlazorOptions';\nimport { ReconnectDisplay } from './ReconnectDisplay';\nimport { DefaultReconnectDisplay } from './DefaultReconnectDisplay';\nimport { UserSpecifiedDisplay } from './UserSpecifiedDisplay';\nimport { Logger, LogLevel } from '../Logging/Logger';\n\nexport class DefaultReconnectionHandler implements ReconnectionHandler {\n  private readonly _logger: Logger;\n  private readonly _reconnectCallback: () => Promise<boolean>;\n  private _currentReconnectionProcess: ReconnectionProcess | null = null;\n  private _reconnectionDisplay?: ReconnectDisplay;\n\n  constructor(logger: Logger, overrideDisplay?: ReconnectDisplay, reconnectCallback?: () => Promise<boolean>) {\n    this._logger = logger;\n    this._reconnectionDisplay = overrideDisplay;\n    this._reconnectCallback = reconnectCallback || (() => window['Blazor'].reconnect());\n  }\n\n  onConnectionDown (options: ReconnectionOptions, error?: Error) {\n    if (!this._reconnectionDisplay) {\n      const modal = document.getElementById(options.dialogId);\n      this._reconnectionDisplay = modal\n          ? new UserSpecifiedDisplay(modal)\n          : new DefaultReconnectDisplay(options.dialogId, document, this._logger);\n    }\n\n    if (!this._currentReconnectionProcess) {\n      this._currentReconnectionProcess = new ReconnectionProcess(options, this._logger, this._reconnectCallback, this._reconnectionDisplay!);\n    }\n  }\n\n  onConnectionUp() {\n    if (this._currentReconnectionProcess) {\n      this._currentReconnectionProcess.dispose();\n      this._currentReconnectionProcess = null;\n    }\n  }\n};\n\nclass ReconnectionProcess {\n  readonly reconnectDisplay: ReconnectDisplay;\n  isDisposed = false;\n\n  constructor(options: ReconnectionOptions, private logger: Logger, private reconnectCallback: () => Promise<boolean>, display: ReconnectDisplay) {\n    this.reconnectDisplay = display;\n    this.reconnectDisplay.show();\n    this.attemptPeriodicReconnection(options);\n  }\n\n  public dispose() {\n    this.isDisposed = true;\n    this.reconnectDisplay.hide();\n  }\n\n  async attemptPeriodicReconnection(options: ReconnectionOptions) {\n    for (let i = 0; i < options.maxRetries; i++) {\n      await this.delay(options.retryIntervalMilliseconds);\n      if (this.isDisposed) {\n        break;\n      }\n\n      try {\n        // reconnectCallback will asynchronously return:\n        // - true to mean success\n        // - false to mean we reached the server, but it rejected the connection (e.g., unknown circuit ID)\n        // - exception to mean we didn't reach the server (this can be sync or async)\n        const result = await this.reconnectCallback();\n        if (!result) {\n          // If the server responded and refused to reconnect, stop auto-retrying.\n          this.reconnectDisplay.rejected();\n          return;\n        }\n        return;\n      } catch (err) {\n        // We got an exception so will try again momentarily\n        this.logger.log(LogLevel.Error, err);\n      }\n    }\n\n    this.reconnectDisplay.failed();\n  }\n\n  delay(durationMilliseconds: number): Promise<void> {\n    return new Promise(resolve => setTimeout(resolve, durationMilliseconds));\n  }\n}\n","import { renderBatch } from '../../Rendering/Renderer';\nimport { OutOfProcessRenderBatch } from '../../Rendering/RenderBatch/OutOfProcessRenderBatch';\nimport { Logger, LogLevel } from '../Logging/Logger';\nimport { HubConnection } from '@aspnet/signalr';\n\nexport class RenderQueue {\n  private static instance: RenderQueue;\n\n  private nextBatchId = 2;\n\n  private fatalError?: string;\n\n  public browserRendererId: number;\n\n  public logger: Logger;\n\n  public constructor(browserRendererId: number, logger: Logger) {\n    this.browserRendererId = browserRendererId;\n    this.logger = logger;\n  }\n\n  public static getOrCreate(logger: Logger): RenderQueue {\n    if (!RenderQueue.instance) {\n      RenderQueue.instance = new RenderQueue(0, logger);\n    }\n\n    return this.instance;\n  }\n\n  public async processBatch(receivedBatchId: number, batchData: Uint8Array, connection: HubConnection): Promise<void> {\n    if (receivedBatchId < this.nextBatchId) {\n      // SignalR delivers messages in order, but it does not guarantee that the message gets delivered.\n      // For that reason, if the server re-sends a batch (for example during a reconnection because it didn't get an ack)\n      // we simply acknowledge it to get back in sync with the server.\n      await this.completeBatch(connection, receivedBatchId);\n      this.logger.log(LogLevel.Debug, `Batch ${receivedBatchId} already processed. Waiting for batch ${this.nextBatchId}.`);\n      return;\n    }\n\n    if (receivedBatchId > this.nextBatchId) {\n      if (this.fatalError) {\n        this.logger.log(LogLevel.Debug, `Received a new batch ${receivedBatchId} but errored out on a previous batch ${this.nextBatchId - 1}`);\n        await connection.send('OnRenderCompleted', this.nextBatchId - 1, this.fatalError.toString());\n        return;\n      }\n\n      this.logger.log(LogLevel.Debug, `Waiting for batch ${this.nextBatchId}. Batch ${receivedBatchId} not processed.`);\n      return;\n    }\n\n    try {\n      this.nextBatchId++;\n      this.logger.log(LogLevel.Debug, `Applying batch ${receivedBatchId}.`);\n      renderBatch(this.browserRendererId, new OutOfProcessRenderBatch(batchData));\n      await this.completeBatch(connection, receivedBatchId);\n    } catch (error) {\n      this.fatalError = error.toString();\n      this.logger.log(LogLevel.Error, `There was an error applying batch ${receivedBatchId}.`);\n\n      // If there's a rendering exception, notify server *and* throw on client\n      connection.send('OnRenderCompleted', receivedBatchId, error.toString());\n      throw error;\n    }\n  }\n\n  public getLastBatchid(): number {\n    return this.nextBatchId - 1;\n  }\n\n  private async completeBatch(connection: signalR.HubConnection, batchId: number): Promise<void> {\n    try {\n      await connection.send('OnRenderCompleted', batchId, null);\n    } catch {\n      this.logger.log(LogLevel.Warning, `Failed to deliver completion notification for render '${batchId}'.`);\n    }\n  }\n}\n","import { ReconnectDisplay } from './ReconnectDisplay';\nexport class UserSpecifiedDisplay implements ReconnectDisplay {\n  static readonly ShowClassName = 'components-reconnect-show';\n\n  static readonly HideClassName = 'components-reconnect-hide';\n\n  static readonly FailedClassName = 'components-reconnect-failed';\n\n  static readonly RejectedClassName = 'components-reconnect-rejected';\n\n  constructor(private dialog: HTMLElement) {\n  }\n\n  show(): void {\n    this.removeClasses();\n    this.dialog.classList.add(UserSpecifiedDisplay.ShowClassName);\n  }\n\n  hide(): void {\n    this.removeClasses();\n    this.dialog.classList.add(UserSpecifiedDisplay.HideClassName);\n  }\n\n  failed(): void {\n    this.removeClasses();\n    this.dialog.classList.add(UserSpecifiedDisplay.FailedClassName);\n  }\n\n  rejected(): void {\n    this.removeClasses();\n    this.dialog.classList.add(UserSpecifiedDisplay.RejectedClassName);\n  }\n\n  private removeClasses() {\n    this.dialog.classList.remove(UserSpecifiedDisplay.ShowClassName, UserSpecifiedDisplay.HideClassName, UserSpecifiedDisplay.FailedClassName, UserSpecifiedDisplay.RejectedClassName);\n  }\n}\n","// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\n\n// These values are designed to match the ASP.NET Log Levels since that's the pattern we're emulating here.\n/** Indicates the severity of a log message.\n *\n * Log Levels are ordered in increasing severity. So `Debug` is more severe than `Trace`, etc.\n */\nexport enum LogLevel {\n  /** Log level for very low severity diagnostic messages. */\n  Trace = 0,\n  /** Log level for low severity diagnostic messages. */\n  Debug = 1,\n  /** Log level for informational diagnostic messages. */\n  Information = 2,\n  /** Log level for diagnostic messages that indicate a non-fatal problem. */\n  Warning = 3,\n  /** Log level for diagnostic messages that indicate a failure in the current operation. */\n  Error = 4,\n  /** Log level for diagnostic messages that indicate a failure that will terminate the entire application. */\n  Critical = 5,\n  /** The highest possible log level. Used when configuring logging to indicate that no log messages should be emitted. */\n  None = 6,\n}\n\n/** An abstraction that provides a sink for diagnostic messages. */\nexport interface Logger { // eslint-disable-line @typescript-eslint/interface-name-prefix\n  /** Called by the framework to emit a diagnostic message.\n   *\n   * @param {LogLevel} logLevel The severity level of the message.\n   * @param {string} message The message.\n   */\n  log(logLevel: LogLevel, message: string | Error): void;\n}\n","/* eslint-disable no-console */\n\nimport { Logger, LogLevel } from './Logger';\n\nexport class NullLogger implements Logger {\n  public static instance: Logger = new NullLogger();\n\n  private constructor() { }\n\n  public log(_logLevel: LogLevel, _message: string): void { // eslint-disable-line @typescript-eslint/no-unused-vars\n  }\n}\n\nexport class ConsoleLogger implements Logger {\n  private readonly minimumLogLevel: LogLevel;\n\n  public constructor(minimumLogLevel: LogLevel) {\n    this.minimumLogLevel = minimumLogLevel;\n  }\n\n  public log(logLevel: LogLevel, message: string | Error): void {\n    if (logLevel >= this.minimumLogLevel) {\n      switch (logLevel) {\n        case LogLevel.Critical:\n        case LogLevel.Error:\n          console.error(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\n          break;\n        case LogLevel.Warning:\n          console.warn(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\n          break;\n        case LogLevel.Information:\n          console.info(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\n          break;\n        default:\n          // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug\n          console.log(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\n          break;\n      }\n    }\n  }\n}\n","import { RenderBatch, ArrayBuilderSegment, RenderTreeEdit, RenderTreeFrame, EditType, FrameType, ArrayValues } from './RenderBatch/RenderBatch';\nimport { EventDelegator } from './EventDelegator';\nimport { EventForDotNet, UIEventArgs, EventArgsType } from './EventForDotNet';\nimport { LogicalElement, PermutationListEntry, toLogicalElement, insertLogicalChild, removeLogicalChild, getLogicalParent, getLogicalChild, createAndInsertLogicalContainer, isSvgElement, getLogicalChildrenArray, getLogicalSiblingEnd, permuteLogicalChildren, getClosestDomElement } from './LogicalElements';\nimport { applyCaptureIdToElement } from './ElementReferenceCapture';\nimport { EventFieldInfo } from './EventFieldInfo';\nimport { dispatchEvent } from './RendererEventDispatcher';\nconst selectValuePropname = '_blazorSelectValue';\nconst sharedTemplateElemForParsing = document.createElement('template');\nconst sharedSvgElemForParsing = document.createElementNS('http://www.w3.org/2000/svg', 'g');\nconst preventDefaultEvents: { [eventType: string]: boolean } = { submit: true };\nconst rootComponentsPendingFirstRender: { [componentId: number]: LogicalElement } = {};\n\nexport class BrowserRenderer {\n  private eventDelegator: EventDelegator;\n\n  private childComponentLocations: { [componentId: number]: LogicalElement } = {};\n\n  private browserRendererId: number;\n\n  public constructor(browserRendererId: number) {\n    this.browserRendererId = browserRendererId;\n    this.eventDelegator = new EventDelegator((event, eventHandlerId, eventArgs, eventFieldInfo) => {\n      raiseEvent(event, this.browserRendererId, eventHandlerId, eventArgs, eventFieldInfo);\n    });\n  }\n\n  public attachRootComponentToLogicalElement(componentId: number, element: LogicalElement): void {\n    this.attachComponentToElement(componentId, element);\n    rootComponentsPendingFirstRender[componentId] = element;\n  }\n\n  public updateComponent(batch: RenderBatch, componentId: number, edits: ArrayBuilderSegment<RenderTreeEdit>, referenceFrames: ArrayValues<RenderTreeFrame>): void {\n    const element = this.childComponentLocations[componentId];\n    if (!element) {\n      throw new Error(`No element is currently associated with component ${componentId}`);\n    }\n\n    // On the first render for each root component, clear any existing content (e.g., prerendered)\n    const rootElementToClear = rootComponentsPendingFirstRender[componentId];\n    if (rootElementToClear) {\n      const rootElementToClearEnd = getLogicalSiblingEnd(rootElementToClear);\n      delete rootComponentsPendingFirstRender[componentId];\n\n      if (!rootElementToClearEnd) {\n        clearElement(rootElementToClear as unknown as Element);\n      } else {\n        clearBetween(rootElementToClear as unknown as Node, rootElementToClearEnd as unknown as Comment);\n      }\n    }\n\n    const ownerDocument = getClosestDomElement(element).ownerDocument;\n    const activeElementBefore = ownerDocument && ownerDocument.activeElement;\n\n    this.applyEdits(batch, componentId, element, 0, edits, referenceFrames);\n\n    // Try to restore focus in case it was lost due to an element move\n    if ((activeElementBefore instanceof HTMLElement) && ownerDocument && ownerDocument.activeElement !== activeElementBefore) {\n      activeElementBefore.focus();\n    }\n  }\n\n  public disposeComponent(componentId: number) {\n    delete this.childComponentLocations[componentId];\n  }\n\n  public disposeEventHandler(eventHandlerId: number) {\n    this.eventDelegator.removeListener(eventHandlerId);\n  }\n\n  private attachComponentToElement(componentId: number, element: LogicalElement) {\n    this.childComponentLocations[componentId] = element;\n  }\n\n  private applyEdits(batch: RenderBatch, componentId: number, parent: LogicalElement, childIndex: number, edits: ArrayBuilderSegment<RenderTreeEdit>, referenceFrames: ArrayValues<RenderTreeFrame>) {\n    let currentDepth = 0;\n    let childIndexAtCurrentDepth = childIndex;\n    let permutationList: PermutationListEntry[] | undefined;\n\n    const arrayBuilderSegmentReader = batch.arrayBuilderSegmentReader;\n    const editReader = batch.editReader;\n    const frameReader = batch.frameReader;\n    const editsValues = arrayBuilderSegmentReader.values(edits);\n    const editsOffset = arrayBuilderSegmentReader.offset(edits);\n    const editsLength = arrayBuilderSegmentReader.count(edits);\n    const maxEditIndexExcl = editsOffset + editsLength;\n\n    for (let editIndex = editsOffset; editIndex < maxEditIndexExcl; editIndex++) {\n      const edit = batch.diffReader.editsEntry(editsValues, editIndex);\n      const editType = editReader.editType(edit);\n      switch (editType) {\n        case EditType.prependFrame: {\n          const frameIndex = editReader.newTreeIndex(edit);\n          const frame = batch.referenceFramesEntry(referenceFrames, frameIndex);\n          const siblingIndex = editReader.siblingIndex(edit);\n          this.insertFrame(batch, componentId, parent, childIndexAtCurrentDepth + siblingIndex, referenceFrames, frame, frameIndex);\n          break;\n        }\n        case EditType.removeFrame: {\n          const siblingIndex = editReader.siblingIndex(edit);\n          removeLogicalChild(parent, childIndexAtCurrentDepth + siblingIndex);\n          break;\n        }\n        case EditType.setAttribute: {\n          const frameIndex = editReader.newTreeIndex(edit);\n          const frame = batch.referenceFramesEntry(referenceFrames, frameIndex);\n          const siblingIndex = editReader.siblingIndex(edit);\n          const element = getLogicalChild(parent, childIndexAtCurrentDepth + siblingIndex);\n          if (element instanceof Element) {\n            this.applyAttribute(batch, componentId, element, frame);\n          } else {\n            throw new Error('Cannot set attribute on non-element child');\n          }\n          break;\n        }\n        case EditType.removeAttribute: {\n          // Note that we don't have to dispose the info we track about event handlers here, because the\n          // disposed event handler IDs are delivered separately (in the 'disposedEventHandlerIds' array)\n          const siblingIndex = editReader.siblingIndex(edit);\n          const element = getLogicalChild(parent, childIndexAtCurrentDepth + siblingIndex);\n          if (element instanceof HTMLElement) {\n            const attributeName = editReader.removedAttributeName(edit)!;\n            // First try to remove any special property we use for this attribute\n            if (!this.tryApplySpecialProperty(batch, element, attributeName, null)) {\n              // If that's not applicable, it's a regular DOM attribute so remove that\n              element.removeAttribute(attributeName);\n            }\n          } else {\n            throw new Error('Cannot remove attribute from non-element child');\n          }\n          break;\n        }\n        case EditType.updateText: {\n          const frameIndex = editReader.newTreeIndex(edit);\n          const frame = batch.referenceFramesEntry(referenceFrames, frameIndex);\n          const siblingIndex = editReader.siblingIndex(edit);\n          const textNode = getLogicalChild(parent, childIndexAtCurrentDepth + siblingIndex);\n          if (textNode instanceof Text) {\n            textNode.textContent = frameReader.textContent(frame);\n          } else {\n            throw new Error('Cannot set text content on non-text child');\n          }\n          break;\n        }\n        case EditType.updateMarkup: {\n          const frameIndex = editReader.newTreeIndex(edit);\n          const frame = batch.referenceFramesEntry(referenceFrames, frameIndex);\n          const siblingIndex = editReader.siblingIndex(edit);\n          removeLogicalChild(parent, childIndexAtCurrentDepth + siblingIndex);\n          this.insertMarkup(batch, parent, childIndexAtCurrentDepth + siblingIndex, frame);\n          break;\n        }\n        case EditType.stepIn: {\n          const siblingIndex = editReader.siblingIndex(edit);\n          parent = getLogicalChild(parent, childIndexAtCurrentDepth + siblingIndex);\n          currentDepth++;\n          childIndexAtCurrentDepth = 0;\n          break;\n        }\n        case EditType.stepOut: {\n          parent = getLogicalParent(parent)!;\n          currentDepth--;\n          childIndexAtCurrentDepth = currentDepth === 0 ? childIndex : 0; // The childIndex is only ever nonzero at zero depth\n          break;\n        }\n        case EditType.permutationListEntry: {\n          permutationList = permutationList || [];\n          permutationList.push({\n            fromSiblingIndex: childIndexAtCurrentDepth + editReader.siblingIndex(edit),\n            toSiblingIndex: childIndexAtCurrentDepth + editReader.moveToSiblingIndex(edit),\n          });\n          break;\n        }\n        case EditType.permutationListEnd: {\n          permuteLogicalChildren(parent, permutationList!);\n          permutationList = undefined;\n          break;\n        }\n        default: {\n          const unknownType: never = editType; // Compile-time verification that the switch was exhaustive\n          throw new Error(`Unknown edit type: ${unknownType}`);\n        }\n      }\n    }\n  }\n\n  private insertFrame(batch: RenderBatch, componentId: number, parent: LogicalElement, childIndex: number, frames: ArrayValues<RenderTreeFrame>, frame: RenderTreeFrame, frameIndex: number): number {\n    const frameReader = batch.frameReader;\n    const frameType = frameReader.frameType(frame);\n    switch (frameType) {\n      case FrameType.element:\n        this.insertElement(batch, componentId, parent, childIndex, frames, frame, frameIndex);\n        return 1;\n      case FrameType.text:\n        this.insertText(batch, parent, childIndex, frame);\n        return 1;\n      case FrameType.attribute:\n        throw new Error('Attribute frames should only be present as leading children of element frames.');\n      case FrameType.component:\n        this.insertComponent(batch, parent, childIndex, frame);\n        return 1;\n      case FrameType.region:\n        return this.insertFrameRange(batch, componentId, parent, childIndex, frames, frameIndex + 1, frameIndex + frameReader.subtreeLength(frame));\n      case FrameType.elementReferenceCapture:\n        if (parent instanceof Element) {\n          applyCaptureIdToElement(parent, frameReader.elementReferenceCaptureId(frame)!);\n          return 0; // A \"capture\" is a child in the diff, but has no node in the DOM\n        } else {\n          throw new Error('Reference capture frames can only be children of element frames.');\n        }\n      case FrameType.markup:\n        this.insertMarkup(batch, parent, childIndex, frame);\n        return 1;\n      default:\n        const unknownType: never = frameType; // Compile-time verification that the switch was exhaustive\n        throw new Error(`Unknown frame type: ${unknownType}`);\n    }\n  }\n\n  private insertElement(batch: RenderBatch, componentId: number, parent: LogicalElement, childIndex: number, frames: ArrayValues<RenderTreeFrame>, frame: RenderTreeFrame, frameIndex: number) {\n    const frameReader = batch.frameReader;\n    const tagName = frameReader.elementName(frame)!;\n    const newDomElementRaw = tagName === 'svg' || isSvgElement(parent) ?\n      document.createElementNS('http://www.w3.org/2000/svg', tagName) :\n      document.createElement(tagName);\n    const newElement = toLogicalElement(newDomElementRaw);\n    insertLogicalChild(newDomElementRaw, parent, childIndex);\n\n    // Apply attributes\n    const descendantsEndIndexExcl = frameIndex + frameReader.subtreeLength(frame);\n    for (let descendantIndex = frameIndex + 1; descendantIndex < descendantsEndIndexExcl; descendantIndex++) {\n      const descendantFrame = batch.referenceFramesEntry(frames, descendantIndex);\n      if (frameReader.frameType(descendantFrame) === FrameType.attribute) {\n        this.applyAttribute(batch, componentId, newDomElementRaw, descendantFrame);\n      } else {\n        // As soon as we see a non-attribute child, all the subsequent child frames are\n        // not attributes, so bail out and insert the remnants recursively\n        this.insertFrameRange(batch, componentId, newElement, 0, frames, descendantIndex, descendantsEndIndexExcl);\n        break;\n      }\n    }\n\n    // We handle setting 'value' on a <select> in two different ways:\n    // [1] When inserting a corresponding <option>, in case you're dynamically adding options\n    // [2] After we finish inserting the <select>, in case the descendant options are being\n    //     added as an opaque markup block rather than individually\n    // Right here we implement [2]\n    if (newDomElementRaw instanceof HTMLSelectElement && selectValuePropname in newDomElementRaw) {\n      const selectValue = newDomElementRaw[selectValuePropname];\n      newDomElementRaw.value = selectValue;\n      delete newDomElementRaw[selectValuePropname];\n    }\n  }\n\n  private insertComponent(batch: RenderBatch, parent: LogicalElement, childIndex: number, frame: RenderTreeFrame) {\n    const containerElement = createAndInsertLogicalContainer(parent, childIndex);\n\n    // All we have to do is associate the child component ID with its location. We don't actually\n    // do any rendering here, because the diff for the child will appear later in the render batch.\n    const childComponentId = batch.frameReader.componentId(frame);\n    this.attachComponentToElement(childComponentId, containerElement);\n  }\n\n  private insertText(batch: RenderBatch, parent: LogicalElement, childIndex: number, textFrame: RenderTreeFrame) {\n    const textContent = batch.frameReader.textContent(textFrame)!;\n    const newTextNode = document.createTextNode(textContent);\n    insertLogicalChild(newTextNode, parent, childIndex);\n  }\n\n  private insertMarkup(batch: RenderBatch, parent: LogicalElement, childIndex: number, markupFrame: RenderTreeFrame) {\n    const markupContainer = createAndInsertLogicalContainer(parent, childIndex);\n\n    const markupContent = batch.frameReader.markupContent(markupFrame);\n    const parsedMarkup = parseMarkup(markupContent, isSvgElement(parent));\n    let logicalSiblingIndex = 0;\n    while (parsedMarkup.firstChild) {\n      insertLogicalChild(parsedMarkup.firstChild, markupContainer, logicalSiblingIndex++);\n    }\n  }\n\n  private applyAttribute(batch: RenderBatch, componentId: number, toDomElement: Element, attributeFrame: RenderTreeFrame) {\n    const frameReader = batch.frameReader;\n    const attributeName = frameReader.attributeName(attributeFrame)!;\n    const browserRendererId = this.browserRendererId;\n    const eventHandlerId = frameReader.attributeEventHandlerId(attributeFrame);\n\n    if (eventHandlerId) {\n      const firstTwoChars = attributeName.substring(0, 2);\n      const eventName = attributeName.substring(2);\n      if (firstTwoChars !== 'on' || !eventName) {\n        throw new Error(`Attribute has nonzero event handler ID, but attribute name '${attributeName}' does not start with 'on'.`);\n      }\n      this.eventDelegator.setListener(toDomElement, eventName, eventHandlerId, componentId);\n      return;\n    }\n\n    // First see if we have special handling for this attribute\n    if (!this.tryApplySpecialProperty(batch, toDomElement, attributeName, attributeFrame)) {\n      // If not, treat it as a regular string-valued attribute\n      toDomElement.setAttribute(\n        attributeName,\n        frameReader.attributeValue(attributeFrame)!\n      );\n    }\n  }\n\n  private tryApplySpecialProperty(batch: RenderBatch, element: Element, attributeName: string, attributeFrame: RenderTreeFrame | null) {\n    switch (attributeName) {\n      case 'value':\n        return this.tryApplyValueProperty(batch, element, attributeFrame);\n      case 'checked':\n        return this.tryApplyCheckedProperty(batch, element, attributeFrame);\n      default:\n        return false;\n    }\n  }\n\n  private tryApplyValueProperty(batch: RenderBatch, element: Element, attributeFrame: RenderTreeFrame | null) {\n    // Certain elements have built-in behaviour for their 'value' property\n    const frameReader = batch.frameReader;\n    switch (element.tagName) {\n      case 'INPUT':\n      case 'SELECT':\n      case 'TEXTAREA': {\n        const value = attributeFrame ? frameReader.attributeValue(attributeFrame) : null;\n        (element as any).value = value;\n\n        if (element.tagName === 'SELECT') {\n          // <select> is special, in that anything we write to .value will be lost if there\n          // isn't yet a matching <option>. To maintain the expected behavior no matter the\n          // element insertion/update order, preserve the desired value separately so\n          // we can recover it when inserting any matching <option> or after inserting an\n          // entire markup block of descendants.\n          element[selectValuePropname] = value;\n        }\n        return true;\n      }\n      case 'OPTION': {\n        const value = attributeFrame ? frameReader.attributeValue(attributeFrame) : null;\n        if (value) {\n          element.setAttribute('value', value);\n        } else {\n          element.removeAttribute('value');\n        }\n        // See above for why we have this special handling for <select>/<option>\n        // Note that this is only one of the two cases where we set the value on a <select>\n        const selectElem = this.findClosestAncestorSelectElement(element);\n        if (selectElem && (selectValuePropname in selectElem) && selectElem[selectValuePropname] === value) {\n          this.tryApplyValueProperty(batch, selectElem, attributeFrame);\n          delete selectElem[selectValuePropname];\n        }\n        return true;\n      }\n      default:\n        return false;\n    }\n  }\n\n  private tryApplyCheckedProperty(batch: RenderBatch, element: Element, attributeFrame: RenderTreeFrame | null) {\n    // Certain elements have built-in behaviour for their 'checked' property\n    if (element.tagName === 'INPUT') {\n      const value = attributeFrame ? batch.frameReader.attributeValue(attributeFrame) : null;\n      (element as any).checked = value !== null;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private findClosestAncestorSelectElement(element: Element | null) {\n    while (element) {\n      if (element instanceof HTMLSelectElement) {\n        return element;\n      } else {\n        element = element.parentElement;\n      }\n    }\n\n    return null;\n  }\n\n  private insertFrameRange(batch: RenderBatch, componentId: number, parent: LogicalElement, childIndex: number, frames: ArrayValues<RenderTreeFrame>, startIndex: number, endIndexExcl: number): number {\n    const origChildIndex = childIndex;\n    for (let index = startIndex; index < endIndexExcl; index++) {\n      const frame = batch.referenceFramesEntry(frames, index);\n      const numChildrenInserted = this.insertFrame(batch, componentId, parent, childIndex, frames, frame, index);\n      childIndex += numChildrenInserted;\n\n      // Skip over any descendants, since they are already dealt with recursively\n      index += countDescendantFrames(batch, frame);\n    }\n\n    return (childIndex - origChildIndex); // Total number of children inserted\n  }\n}\n\nexport interface ComponentDescriptor {\n  start: Node;\n  end: Node;\n}\n\nexport interface EventDescriptor {\n  browserRendererId: number;\n  eventHandlerId: number;\n  eventArgsType: EventArgsType;\n  eventFieldInfo: EventFieldInfo | null;\n}\n\nfunction parseMarkup(markup: string, isSvg: boolean) {\n  if (isSvg) {\n    sharedSvgElemForParsing.innerHTML = markup || ' ';\n    return sharedSvgElemForParsing;\n  } else {\n    sharedTemplateElemForParsing.innerHTML = markup || ' ';\n    return sharedTemplateElemForParsing.content;\n  }\n}\n\nfunction countDescendantFrames(batch: RenderBatch, frame: RenderTreeFrame): number {\n  const frameReader = batch.frameReader;\n  switch (frameReader.frameType(frame)) {\n    // The following frame types have a subtree length. Other frames may use that memory slot\n    // to mean something else, so we must not read it. We should consider having nominal subtypes\n    // of RenderTreeFramePointer that prevent access to non-applicable fields.\n    case FrameType.component:\n    case FrameType.element:\n    case FrameType.region:\n      return frameReader.subtreeLength(frame) - 1;\n    default:\n      return 0;\n  }\n}\n\nfunction raiseEvent(\n  event: Event,\n  browserRendererId: number,\n  eventHandlerId: number,\n  eventArgs: EventForDotNet<UIEventArgs>,\n  eventFieldInfo: EventFieldInfo | null\n): void {\n  if (preventDefaultEvents[event.type]) {\n    event.preventDefault();\n  }\n\n  const eventDescriptor = {\n    browserRendererId,\n    eventHandlerId,\n    eventArgsType: eventArgs.type,\n    eventFieldInfo: eventFieldInfo,\n  };\n\n  dispatchEvent(eventDescriptor, eventArgs.data);\n}\n\nfunction clearElement(element: Element) {\n  let childNode: Node | null;\n  while (childNode = element.firstChild) {\n    element.removeChild(childNode);\n  }\n}\n\nfunction clearBetween(start: Node, end: Node): void {\n  const logicalParent = getLogicalParent(start as unknown as LogicalElement);\n  if (!logicalParent) {\n    throw new Error(\"Can't clear between nodes. The start node does not have a logical parent.\");\n  }\n  const children = getLogicalChildrenArray(logicalParent);\n  const removeStart = children.indexOf(start as unknown as LogicalElement) + 1;\n  const endIndex = children.indexOf(end as unknown as LogicalElement);\n\n  // We remove the end component comment from the DOM as we don't need it after this point.\n  for (let i = removeStart; i <= endIndex; i++) {\n    removeLogicalChild(logicalParent, removeStart);\n  }\n\n  // We sanitize the start comment by removing all the information from it now that we don't need it anymore\n  // as it adds noise to the DOM.\n  start.textContent = '!';\n}\n","export function applyCaptureIdToElement(element: Element, referenceCaptureId: string) {\n  element.setAttribute(getCaptureIdAttributeName(referenceCaptureId), '');\n}\n\nfunction getElementByCaptureId(referenceCaptureId: string) {\n  const selector = `[${getCaptureIdAttributeName(referenceCaptureId)}]`;\n  return document.querySelector(selector);\n}\n\nfunction getCaptureIdAttributeName(referenceCaptureId: string) {\n  return `_bl_${referenceCaptureId}`;\n}\n\n// Support receiving ElementRef instances as args in interop calls\nconst elementRefKey = '__internalId'; // Keep in sync with ElementRef.cs\nDotNet.attachReviver((key, value) => {\n  if (value && typeof value === 'object' && value.hasOwnProperty(elementRefKey) && typeof value[elementRefKey] === 'string') {\n    return getElementByCaptureId(value[elementRefKey]);\n  } else {\n    return value;\n  }\n});\n","import { EventForDotNet, UIEventArgs } from './EventForDotNet';\nimport { EventFieldInfo } from './EventFieldInfo';\n\nconst nonBubblingEvents = toLookup([\n  'abort',\n  'blur',\n  'change',\n  'error',\n  'focus',\n  'load',\n  'loadend',\n  'loadstart',\n  'mouseenter',\n  'mouseleave',\n  'progress',\n  'reset',\n  'scroll',\n  'submit',\n  'unload',\n  'DOMNodeInsertedIntoDocument',\n  'DOMNodeRemovedFromDocument',\n]);\n\nexport interface OnEventCallback {\n  (event: Event, eventHandlerId: number, eventArgs: EventForDotNet<UIEventArgs>, eventFieldInfo: EventFieldInfo | null): void;\n}\n\n// Responsible for adding/removing the eventInfo on an expando property on DOM elements, and\n// calling an EventInfoStore that deals with registering/unregistering the underlying delegated\n// event listeners as required (and also maps actual events back to the given callback).\nexport class EventDelegator {\n  private static nextEventDelegatorId = 0;\n\n  private eventsCollectionKey: string;\n\n  private eventInfoStore: EventInfoStore;\n\n  constructor(private onEvent: OnEventCallback) {\n    const eventDelegatorId = ++EventDelegator.nextEventDelegatorId;\n    this.eventsCollectionKey = `_blazorEvents_${eventDelegatorId}`;\n    this.eventInfoStore = new EventInfoStore(this.onGlobalEvent.bind(this));\n  }\n\n  public setListener(element: Element, eventName: string, eventHandlerId: number, renderingComponentId: number) {\n    // Ensure we have a place to store event info for this element\n    let infoForElement: EventHandlerInfosForElement = element[this.eventsCollectionKey];\n    if (!infoForElement) {\n      infoForElement = element[this.eventsCollectionKey] = {};\n    }\n\n    if (infoForElement.hasOwnProperty(eventName)) {\n      // We can cheaply update the info on the existing object and don't need any other housekeeping\n      const oldInfo = infoForElement[eventName];\n      this.eventInfoStore.update(oldInfo.eventHandlerId, eventHandlerId);\n    } else {\n      // Go through the whole flow which might involve registering a new global handler\n      const newInfo = { element, eventName, eventHandlerId, renderingComponentId };\n      this.eventInfoStore.add(newInfo);\n      infoForElement[eventName] = newInfo;\n    }\n  }\n\n  public removeListener(eventHandlerId: number) {\n    // This method gets called whenever the .NET-side code reports that a certain event handler\n    // has been disposed. However we will already have disposed the info about that handler if\n    // the eventHandlerId for the (element,eventName) pair was replaced during diff application.\n    const info = this.eventInfoStore.remove(eventHandlerId);\n    if (info) {\n      // Looks like this event handler wasn't already disposed\n      // Remove the associated data from the DOM element\n      const element = info.element;\n      if (element.hasOwnProperty(this.eventsCollectionKey)) {\n        const elementEventInfos: EventHandlerInfosForElement = element[this.eventsCollectionKey];\n        delete elementEventInfos[info.eventName];\n        if (Object.getOwnPropertyNames(elementEventInfos).length === 0) {\n          delete element[this.eventsCollectionKey];\n        }\n      }\n    }\n  }\n\n  private onGlobalEvent(evt: Event) {\n    if (!(evt.target instanceof Element)) {\n      return;\n    }\n\n    // Scan up the element hierarchy, looking for any matching registered event handlers\n    let candidateElement = evt.target as Element | null;\n    let eventArgs: EventForDotNet<UIEventArgs> | null = null; // Populate lazily\n    const eventIsNonBubbling = nonBubblingEvents.hasOwnProperty(evt.type);\n    while (candidateElement) {\n      if (candidateElement.hasOwnProperty(this.eventsCollectionKey)) {\n        const handlerInfos: EventHandlerInfosForElement = candidateElement[this.eventsCollectionKey];\n        if (handlerInfos.hasOwnProperty(evt.type)) {\n          // We are going to raise an event for this element, so prepare info needed by the .NET code\n          if (!eventArgs) {\n            eventArgs = EventForDotNet.fromDOMEvent(evt);\n          }\n\n          const handlerInfo = handlerInfos[evt.type];\n          const eventFieldInfo = EventFieldInfo.fromEvent(handlerInfo.renderingComponentId, evt);\n          this.onEvent(evt, handlerInfo.eventHandlerId, eventArgs, eventFieldInfo);\n        }\n      }\n\n      candidateElement = eventIsNonBubbling ? null : candidateElement.parentElement;\n    }\n  }\n}\n\n// Responsible for adding and removing the global listener when the number of listeners\n// for a given event name changes between zero and nonzero\nclass EventInfoStore {\n  private infosByEventHandlerId: { [eventHandlerId: number]: EventHandlerInfo } = {};\n\n  private countByEventName: { [eventName: string]: number } = {};\n\n  constructor(private globalListener: EventListener) {\n  }\n\n  public add(info: EventHandlerInfo) {\n    if (this.infosByEventHandlerId[info.eventHandlerId]) {\n      // Should never happen, but we want to know if it does\n      throw new Error(`Event ${info.eventHandlerId} is already tracked`);\n    }\n\n    this.infosByEventHandlerId[info.eventHandlerId] = info;\n\n    const eventName = info.eventName;\n    if (this.countByEventName.hasOwnProperty(eventName)) {\n      this.countByEventName[eventName]++;\n    } else {\n      this.countByEventName[eventName] = 1;\n\n      // To make delegation work with non-bubbling events, register a 'capture' listener.\n      // We preserve the non-bubbling behavior by only dispatching such events to the targeted element.\n      const useCapture = nonBubblingEvents.hasOwnProperty(eventName);\n      document.addEventListener(eventName, this.globalListener, useCapture);\n    }\n  }\n\n  public update(oldEventHandlerId: number, newEventHandlerId: number) {\n    if (this.infosByEventHandlerId.hasOwnProperty(newEventHandlerId)) {\n      // Should never happen, but we want to know if it does\n      throw new Error(`Event ${newEventHandlerId} is already tracked`);\n    }\n\n    // Since we're just updating the event handler ID, there's no need to update the global counts\n    const info = this.infosByEventHandlerId[oldEventHandlerId];\n    delete this.infosByEventHandlerId[oldEventHandlerId];\n    info.eventHandlerId = newEventHandlerId;\n    this.infosByEventHandlerId[newEventHandlerId] = info;\n  }\n\n  public remove(eventHandlerId: number): EventHandlerInfo {\n    const info = this.infosByEventHandlerId[eventHandlerId];\n    if (info) {\n      delete this.infosByEventHandlerId[eventHandlerId];\n\n      const eventName = info.eventName;\n      if (--this.countByEventName[eventName] === 0) {\n        delete this.countByEventName[eventName];\n        document.removeEventListener(eventName, this.globalListener);\n      }\n    }\n\n    return info;\n  }\n}\n\ninterface EventHandlerInfosForElement {\n  // Although we *could* track multiple event handlers per (element, eventName) pair\n  // (since they have distinct eventHandlerId values), there's no point doing so because\n  // our programming model is that you declare event handlers as attributes. An element\n  // can only have one attribute with a given name, hence only one event handler with\n  // that name at any one time.\n  // So to keep things simple, only track one EventHandlerInfo per (element, eventName)\n  [eventName: string]: EventHandlerInfo;\n}\n\ninterface EventHandlerInfo {\n  element: Element;\n  eventName: string;\n  eventHandlerId: number;\n\n  // The component whose tree includes the event handler attribute frame, *not* necessarily the\n  // same component that will be re-rendered after the event is handled (since we re-render the\n  // component that supplied the delegate, not the one that rendered the event handler frame)\n  renderingComponentId: number;\n}\n\nfunction toLookup(items: string[]): { [key: string]: boolean } {\n  const result = {};\n  items.forEach(value => {\n    result[value] = true;\n  });\n  return result;\n}\n","export class EventFieldInfo {\n    constructor(public componentId: number, public fieldValue: string | boolean) {\n    }\n\n    public static fromEvent(componentId: number, event: Event): EventFieldInfo | null {\n        const elem = event.target;\n        if (elem instanceof Element) {\n            const fieldData = getFormFieldData(elem);\n            if (fieldData) {\n                return new EventFieldInfo(componentId, fieldData.value);\n            }\n        }\n\n        // This event isn't happening on a form field that we can reverse-map back to some incoming attribute\n        return null;\n    }\n}\n\nfunction getFormFieldData(elem: Element) {\n    // The logic in here should be the inverse of the logic in BrowserRenderer's tryApplySpecialProperty.\n    // That is, we're doing the reverse mapping, starting from an HTML property and reconstructing which\n    // \"special\" attribute would have been mapped to that property.\n    if (elem instanceof HTMLInputElement) {\n        return (elem.type && elem.type.toLowerCase() === 'checkbox')\n            ? { value: elem.checked }\n            : { value: elem.value };\n    }\n\n    if (elem instanceof HTMLSelectElement || elem instanceof HTMLTextAreaElement) {\n        return { value: elem.value };\n    }\n\n    return null;\n}\n","export class EventForDotNet<TData extends UIEventArgs> {\n  constructor(public readonly type: EventArgsType, public readonly data: TData) {\n  }\n\n  static fromDOMEvent(event: Event): EventForDotNet<UIEventArgs> {\n    const element = event.target as Element;\n    switch (event.type) {\n\n      case 'input':\n      case 'change': {\n        const targetIsCheckbox = isCheckbox(element);\n        const newValue = targetIsCheckbox ? !!element['checked'] : element['value'];\n        return new EventForDotNet<UIChangeEventArgs>('change', { type: event.type, value: newValue });\n      }\n\n      case 'copy':\n      case 'cut':\n      case 'paste':\n        return new EventForDotNet<UIClipboardEventArgs>('clipboard', { type: event.type });\n\n      case 'drag':\n      case 'dragend':\n      case 'dragenter':\n      case 'dragleave':\n      case 'dragover':\n      case 'dragstart':\n      case 'drop':\n        return new EventForDotNet<UIDragEventArgs>('drag', parseDragEvent(event));\n\n      case 'focus':\n      case 'blur':\n      case 'focusin':\n      case 'focusout':\n        return new EventForDotNet<UIFocusEventArgs>('focus', { type: event.type });\n\n      case 'keydown':\n      case 'keyup':\n      case 'keypress':\n        return new EventForDotNet<UIKeyboardEventArgs>('keyboard', parseKeyboardEvent(<KeyboardEvent>event));\n\n      case 'contextmenu':\n      case 'click':\n      case 'mouseover':\n      case 'mouseout':\n      case 'mousemove':\n      case 'mousedown':\n      case 'mouseup':\n      case 'dblclick':\n        return new EventForDotNet<UIMouseEventArgs>('mouse', parseMouseEvent(<MouseEvent>event));\n\n      case 'error':\n        return new EventForDotNet<UIErrorEventArgs>('error', parseErrorEvent(<ErrorEvent>event));\n\n      case 'loadstart':\n      case 'timeout':\n      case 'abort':\n      case 'load':\n      case 'loadend':\n      case 'progress':\n        return new EventForDotNet<UIProgressEventArgs>('progress', parseProgressEvent(<ProgressEvent>event));\n\n      case 'touchcancel':\n      case 'touchend':\n      case 'touchmove':\n      case 'touchenter':\n      case 'touchleave':\n      case 'touchstart':\n        return new EventForDotNet<UITouchEventArgs>('touch', parseTouchEvent(<TouchEvent>event));\n\n      case 'gotpointercapture':\n      case 'lostpointercapture':\n      case 'pointercancel':\n      case 'pointerdown':\n      case 'pointerenter':\n      case 'pointerleave':\n      case 'pointermove':\n      case 'pointerout':\n      case 'pointerover':\n      case 'pointerup':\n        return new EventForDotNet<UIPointerEventArgs>('pointer', parsePointerEvent(<PointerEvent>event));\n\n      case 'wheel':\n      case 'mousewheel':\n        return new EventForDotNet<UIWheelEventArgs>('wheel', parseWheelEvent(<WheelEvent>event));\n\n      default:\n        return new EventForDotNet<UIEventArgs>('unknown', { type: event.type });\n    }\n  }\n}\n\nfunction parseDragEvent(event: any) {\n  return {\n    ...parseMouseEvent(event),\n    dataTransfer: event.dataTransfer,\n\n  };\n}\n\nfunction parseWheelEvent(event: WheelEvent) {\n  return {\n    ...parseMouseEvent(event),\n    deltaX: event.deltaX,\n    deltaY: event.deltaY,\n    deltaZ: event.deltaZ,\n    deltaMode: event.deltaMode,\n  };\n}\n\nfunction parseErrorEvent(event: ErrorEvent) {\n  return {\n    type: event.type,\n    message: event.message,\n    filename: event.filename,\n    lineno: event.lineno,\n    colno: event.colno,\n  };\n}\n\nfunction parseProgressEvent(event: ProgressEvent) {\n  return {\n    type: event.type,\n    lengthComputable: event.lengthComputable,\n    loaded: event.loaded,\n    total: event.total,\n  };\n}\n\nfunction parseTouchEvent(event: TouchEvent) {\n\n  function parseTouch(touchList: TouchList) {\n    const touches: UITouchPoint[] = [];\n\n    for (let i = 0; i < touchList.length; i++) {\n      const touch = touchList[i];\n      touches.push({\n        identifier: touch.identifier,\n        clientX: touch.clientX,\n        clientY: touch.clientY,\n        screenX: touch.screenX,\n        screenY: touch.screenY,\n        pageX: touch.pageX,\n        pageY: touch.pageY,\n      });\n    }\n    return touches;\n  }\n\n  return {\n    type: event.type,\n    detail: event.detail,\n    touches: parseTouch(event.touches),\n    targetTouches: parseTouch(event.targetTouches),\n    changedTouches: parseTouch(event.changedTouches),\n    ctrlKey: event.ctrlKey,\n    shiftKey: event.shiftKey,\n    altKey: event.altKey,\n    metaKey: event.metaKey,\n  };\n}\n\nfunction parseKeyboardEvent(event: KeyboardEvent) {\n  return {\n    type: event.type,\n    key: event.key,\n    code: event.code,\n    location: event.location,\n    repeat: event.repeat,\n    ctrlKey: event.ctrlKey,\n    shiftKey: event.shiftKey,\n    altKey: event.altKey,\n    metaKey: event.metaKey,\n  };\n}\n\nfunction parsePointerEvent(event: PointerEvent) {\n  return {\n    ...parseMouseEvent(event),\n    pointerId: event.pointerId,\n    width: event.width,\n    height: event.height,\n    pressure: event.pressure,\n    tiltX: event.tiltX,\n    tiltY: event.tiltY,\n    pointerType: event.pointerType,\n    isPrimary: event.isPrimary,\n  };\n}\n\nfunction parseMouseEvent(event: MouseEvent) {\n  return {\n    type: event.type,\n    detail: event.detail,\n    screenX: event.screenX,\n    screenY: event.screenY,\n    clientX: event.clientX,\n    clientY: event.clientY,\n    button: event.button,\n    buttons: event.buttons,\n    ctrlKey: event.ctrlKey,\n    shiftKey: event.shiftKey,\n    altKey: event.altKey,\n    metaKey: event.metaKey,\n  };\n}\n\nfunction isCheckbox(element: Element | null) {\n  return element && element.tagName === 'INPUT' && element.getAttribute('type') === 'checkbox';\n}\n\n// The following interfaces must be kept in sync with the UIEventArgs C# classes\n\nexport type EventArgsType = 'change' | 'clipboard' | 'drag' | 'error' | 'focus' | 'keyboard' | 'mouse' | 'pointer' | 'progress' | 'touch' | 'unknown' | 'wheel';\n\nexport interface UIEventArgs {\n  type: string;\n}\n\ninterface UIChangeEventArgs extends UIEventArgs {\n  value: string | boolean;\n}\n\ninterface UIClipboardEventArgs extends UIEventArgs {\n}\n\ninterface UIDragEventArgs extends UIEventArgs {\n  detail: number;\n  dataTransfer: UIDataTransfer;\n  screenX: number;\n  screenY: number;\n  clientX: number;\n  clientY: number;\n  button: number;\n  buttons: number;\n  ctrlKey: boolean;\n  shiftKey: boolean;\n  altKey: boolean;\n  metaKey: boolean;\n}\n\ninterface UIDataTransfer {\n  dropEffect: string;\n  effectAllowed: string;\n  files: string[];\n  items: UIDataTransferItem[];\n  types: string[];\n}\n\ninterface UIDataTransferItem {\n  kind: string;\n  type: string;\n}\n\ninterface UIErrorEventArgs extends UIEventArgs {\n  message: string;\n  filename: string;\n  lineno: number;\n  colno: number;\n\n  // omitting 'error' here since we'd have to serialize it, and it's not clear we will want to\n  // do that. https://developer.mozilla.org/en-US/docs/Web/API/ErrorEvent\n}\n\ninterface UIFocusEventArgs extends UIEventArgs {\n}\n\ninterface UIKeyboardEventArgs extends UIEventArgs {\n  key: string;\n  code: string;\n  location: number;\n  repeat: boolean;\n  ctrlKey: boolean;\n  shiftKey: boolean;\n  altKey: boolean;\n  metaKey: boolean;\n}\n\ninterface UIMouseEventArgs extends UIEventArgs {\n  detail: number;\n  screenX: number;\n  screenY: number;\n  clientX: number;\n  clientY: number;\n  button: number;\n  buttons: number;\n  ctrlKey: boolean;\n  shiftKey: boolean;\n  altKey: boolean;\n  metaKey: boolean;\n}\n\ninterface UIPointerEventArgs extends UIMouseEventArgs {\n  pointerId: number;\n  width: number;\n  height: number;\n  pressure: number;\n  tiltX: number;\n  tiltY: number;\n  pointerType: string;\n  isPrimary: boolean;\n}\n\ninterface UIProgressEventArgs extends UIEventArgs {\n  lengthComputable: boolean;\n  loaded: number;\n  total: number;\n}\n\ninterface UITouchEventArgs extends UIEventArgs {\n  detail: number;\n  touches: UITouchPoint[];\n  targetTouches: UITouchPoint[];\n  changedTouches: UITouchPoint[];\n  ctrlKey: boolean;\n  shiftKey: boolean;\n  altKey: boolean;\n  metaKey: boolean;\n}\n\ninterface UITouchPoint {\n  identifier: number;\n  screenX: number;\n  screenY: number;\n  clientX: number;\n  clientY: number;\n  pageX: number;\n  pageY: number;\n}\n\ninterface UIWheelEventArgs extends UIMouseEventArgs {\n  deltaX: number;\n  deltaY: number;\n  deltaZ: number;\n  deltaMode: number;\n}\n","/*\n  A LogicalElement plays the same role as an Element instance from the point of view of the\n  API consumer. Inserting and removing logical elements updates the browser DOM just the same.\n\n  The difference is that, unlike regular DOM mutation APIs, the LogicalElement APIs don't use\n  the underlying DOM structure as the data storage for the element hierarchy. Instead, the\n  LogicalElement APIs take care of tracking hierarchical relationships separately. The point\n  of this is to permit a logical tree structure in which parent/child relationships don't\n  have to be materialized in terms of DOM element parent/child relationships. And the reason\n  why we want that is so that hierarchies of Blazor components can be tracked even when those\n  components' render output need not be a single literal DOM element.\n\n  Consumers of the API don't need to know about the implementation, but how it's done is:\n  - Each LogicalElement is materialized in the DOM as either:\n    - A Node instance, for actual Node instances inserted using 'insertLogicalChild' or\n      for Element instances promoted to LogicalElement via 'toLogicalElement'\n    - A Comment instance, for 'logical container' instances inserted using 'createAndInsertLogicalContainer'\n  - Then, on that instance (i.e., the Node or Comment), we store an array of 'logical children'\n    instances, e.g.,\n      [firstChild, secondChild, thirdChild, ...]\n    ... plus we store a reference to the 'logical parent' (if any)\n  - The 'logical children' array means we can look up in O(1):\n    - The number of logical children (not currently implemented because not required, but trivial)\n    - The logical child at any given index\n  - Whenever a logical child is added or removed, we update the parent's array of logical children\n*/\n\nconst logicalChildrenPropname = createSymbolOrFallback('_blazorLogicalChildren');\nconst logicalParentPropname = createSymbolOrFallback('_blazorLogicalParent');\nconst logicalEndSiblingPropname = createSymbolOrFallback('_blazorLogicalEnd');\n\nexport function toLogicalRootCommentElement(start: Comment, end: Comment): LogicalElement {\n  // Now that we support start/end comments as component delimiters we are going to be setting up\n  // adding the components rendered output as siblings of the start/end tags (between).\n  // For that to work, we need to appropriately configure the parent element to be a logical element\n  // with all their children being the child elements.\n  // For example, imagine you have\n  // <app>\n  // <div><p>Static content</p></div>\n  // <!-- start component\n  // <!-- end component\n  // <footer>Some other content</footer>\n  // <app>\n  // We want the parent element to be something like\n  // *app\n  // |- *div\n  // |- *component\n  // |- *footer\n  if (!start.parentNode) {\n    throw new Error(`Comment not connected to the DOM ${start.textContent}`);\n  }\n\n  const parent = start.parentNode;\n  const parentLogicalElement = toLogicalElement(parent, /* allow existing contents */ true);\n  const children = getLogicalChildrenArray(parentLogicalElement);\n  Array.from(parent.childNodes).forEach(n => children.push(n as unknown as LogicalElement));\n  start[logicalParentPropname] = parentLogicalElement;\n  // We might not have an end comment in the case of non-prerendered components.\n  if (end) {\n    start[logicalEndSiblingPropname] = end;\n    toLogicalElement(end, /* allowExistingcontents */ true);\n  }\n  return toLogicalElement(start, /* allowExistingContents */ true);\n}\n\nexport function toLogicalElement(element: Node, allowExistingContents?: boolean): LogicalElement {\n  // Normally it's good to assert that the element has started empty, because that's the usual\n  // situation and we probably have a bug if it's not. But for the element that contain prerendered\n  // root components, we want to let them keep their content until we replace it.\n  if (element.childNodes.length > 0 && !allowExistingContents) {\n    throw new Error('New logical elements must start empty, or allowExistingContents must be true');\n  }\n\n  element[logicalChildrenPropname] = [];\n  return element as unknown as LogicalElement;\n}\n\nexport function createAndInsertLogicalContainer(parent: LogicalElement, childIndex: number): LogicalElement {\n  const containerElement = document.createComment('!');\n  insertLogicalChild(containerElement, parent, childIndex);\n  return containerElement as any as LogicalElement;\n}\n\nexport function insertLogicalChild(child: Node, parent: LogicalElement, childIndex: number) {\n  const childAsLogicalElement = child as any as LogicalElement;\n  if (child instanceof Comment) {\n    const existingGrandchildren = getLogicalChildrenArray(childAsLogicalElement);\n    if (existingGrandchildren && getLogicalChildrenArray(childAsLogicalElement).length > 0) {\n      // There's nothing to stop us implementing support for this scenario, and it's not difficult\n      // (after inserting 'child' itself, also iterate through its logical children and physically\n      // put them as following-siblings in the DOM). However there's no scenario that requires it\n      // presently, so if we did implement it there'd be no good way to have tests for it.\n      throw new Error('Not implemented: inserting non-empty logical container');\n    }\n  }\n\n  if (getLogicalParent(childAsLogicalElement)) {\n    // Likewise, we could easily support this scenario too (in this 'if' block, just splice\n    // out 'child' from the logical children array of its previous logical parent by using\n    // Array.prototype.indexOf to determine its previous sibling index).\n    // But again, since there's not currently any scenario that would use it, we would not\n    // have any test coverage for such an implementation.\n    throw new Error('Not implemented: moving existing logical children');\n  }\n\n  const newSiblings = getLogicalChildrenArray(parent);\n  if (childIndex < newSiblings.length) {\n    // Insert\n    const nextSibling = newSiblings[childIndex] as any as Node;\n    nextSibling.parentNode!.insertBefore(child, nextSibling);\n    newSiblings.splice(childIndex, 0, childAsLogicalElement);\n  } else {\n    // Append\n    appendDomNode(child, parent);\n    newSiblings.push(childAsLogicalElement);\n  }\n\n  childAsLogicalElement[logicalParentPropname] = parent;\n  if (!(logicalChildrenPropname in childAsLogicalElement)) {\n    childAsLogicalElement[logicalChildrenPropname] = [];\n  }\n}\n\nexport function removeLogicalChild(parent: LogicalElement, childIndex: number) {\n  const childrenArray = getLogicalChildrenArray(parent);\n  const childToRemove = childrenArray.splice(childIndex, 1)[0];\n\n  // If it's a logical container, also remove its descendants\n  if (childToRemove instanceof Comment) {\n    const grandchildrenArray = getLogicalChildrenArray(childToRemove);\n    while (grandchildrenArray.length > 0) {\n      removeLogicalChild(childToRemove, 0);\n    }\n  }\n\n  // Finally, remove the node itself\n  const domNodeToRemove = childToRemove as any as Node;\n  domNodeToRemove.parentNode!.removeChild(domNodeToRemove);\n}\n\nexport function getLogicalParent(element: LogicalElement): LogicalElement | null {\n  return (element[logicalParentPropname] as LogicalElement) || null;\n}\n\nexport function getLogicalSiblingEnd(element: LogicalElement): LogicalElement | null {\n  return (element[logicalEndSiblingPropname] as LogicalElement) || null;\n}\n\nexport function getLogicalChild(parent: LogicalElement, childIndex: number): LogicalElement {\n  return getLogicalChildrenArray(parent)[childIndex];\n}\n\nexport function isSvgElement(element: LogicalElement) {\n  return getClosestDomElement(element).namespaceURI === 'http://www.w3.org/2000/svg';\n}\n\nexport function getLogicalChildrenArray(element: LogicalElement) {\n  return element[logicalChildrenPropname] as LogicalElement[];\n}\n\nexport function permuteLogicalChildren(parent: LogicalElement, permutationList: PermutationListEntry[]) {\n  // The permutationList must represent a valid permutation, i.e., the list of 'from' indices\n  // is distinct, and the list of 'to' indices is a permutation of it. The algorithm here\n  // relies on that assumption.\n\n  // Each of the phases here has to happen separately, because each one is designed not to\n  // interfere with the indices or DOM entries used by subsequent phases.\n\n  // Phase 1: track which nodes we will move\n  const siblings = getLogicalChildrenArray(parent);\n  permutationList.forEach((listEntry: PermutationListEntryWithTrackingData) => {\n    listEntry.moveRangeStart = siblings[listEntry.fromSiblingIndex];\n    listEntry.moveRangeEnd = findLastDomNodeInRange(listEntry.moveRangeStart);\n  });\n\n  // Phase 2: insert markers\n  permutationList.forEach((listEntry: PermutationListEntryWithTrackingData) => {\n    const marker = listEntry.moveToBeforeMarker = document.createComment('marker');\n    const insertBeforeNode = siblings[listEntry.toSiblingIndex + 1] as any as Node;\n    if (insertBeforeNode) {\n      insertBeforeNode.parentNode!.insertBefore(marker, insertBeforeNode);\n    } else {\n      appendDomNode(marker, parent);\n    }\n  });\n\n  // Phase 3: move descendants & remove markers\n  permutationList.forEach((listEntry: PermutationListEntryWithTrackingData) => {\n    const insertBefore = listEntry.moveToBeforeMarker!;\n    const parentDomNode = insertBefore.parentNode!;\n    const elementToMove = listEntry.moveRangeStart!;\n    const moveEndNode = listEntry.moveRangeEnd!;\n    let nextToMove = elementToMove as any as Node | null;\n    while (nextToMove) {\n      const nextNext = nextToMove.nextSibling;\n      parentDomNode.insertBefore(nextToMove, insertBefore);\n\n      if (nextToMove === moveEndNode) {\n        break;\n      } else {\n        nextToMove = nextNext;\n      }\n    }\n\n    parentDomNode.removeChild(insertBefore);\n  });\n\n  // Phase 4: update siblings index\n  permutationList.forEach((listEntry: PermutationListEntryWithTrackingData) => {\n    siblings[listEntry.toSiblingIndex] = listEntry.moveRangeStart!;\n  });\n}\n\nexport function getClosestDomElement(logicalElement: LogicalElement) {\n  if (logicalElement instanceof Element) {\n    return logicalElement;\n  } else if (logicalElement instanceof Comment) {\n    return logicalElement.parentNode! as Element;\n  } else {\n    throw new Error('Not a valid logical element');\n  }\n}\n\nexport interface PermutationListEntry {\n  fromSiblingIndex: number,\n  toSiblingIndex: number,\n}\n\ninterface PermutationListEntryWithTrackingData extends PermutationListEntry {\n  // These extra properties are used internally when processing the permutation list\n  moveRangeStart?: LogicalElement,\n  moveRangeEnd?: Node,\n  moveToBeforeMarker?: Node,\n}\n\nfunction getLogicalNextSibling(element: LogicalElement): LogicalElement | null {\n  const siblings = getLogicalChildrenArray(getLogicalParent(element)!);\n  const siblingIndex = Array.prototype.indexOf.call(siblings, element);\n  return siblings[siblingIndex + 1] || null;\n}\n\nfunction appendDomNode(child: Node, parent: LogicalElement) {\n  // This function only puts 'child' into the DOM in the right place relative to 'parent'\n  // It does not update the logical children array of anything\n  if (parent instanceof Element) {\n    parent.appendChild(child);\n  } else if (parent instanceof Comment) {\n    const parentLogicalNextSibling = getLogicalNextSibling(parent) as any as Node;\n    if (parentLogicalNextSibling) {\n      // Since the parent has a logical next-sibling, its appended child goes right before that\n      parentLogicalNextSibling.parentNode!.insertBefore(child, parentLogicalNextSibling);\n    } else {\n      // Since the parent has no logical next-sibling, keep recursing upwards until we find\n      // a logical ancestor that does have a next-sibling or is a physical element.\n      appendDomNode(child, getLogicalParent(parent)!);\n    }\n  } else {\n    // Should never happen\n    throw new Error(`Cannot append node because the parent is not a valid logical element. Parent: ${parent}`);\n  }\n}\n\n// Returns the final node (in depth-first evaluation order) that is a descendant of the logical element.\n// As such, the entire subtree is between 'element' and 'findLastDomNodeInRange(element)' inclusive.\nfunction findLastDomNodeInRange(element: LogicalElement) {\n  if (element instanceof Element) {\n    return element;\n  }\n\n  const nextSibling = getLogicalNextSibling(element);\n  if (nextSibling) {\n    // Simple case: not the last logical sibling, so take the node before the next sibling\n    return (nextSibling as any as Node).previousSibling;\n  } else {\n    // Harder case: there's no logical next-sibling, so recurse upwards until we find\n    // a logical ancestor that does have one, or a physical element\n    const logicalParent = getLogicalParent(element)!;\n    return logicalParent instanceof Element\n      ? logicalParent.lastChild\n      : findLastDomNodeInRange(logicalParent);\n  }\n}\n\nfunction createSymbolOrFallback(fallback: string): symbol | string {\n  return typeof Symbol === 'function' ? Symbol() : fallback;\n}\n\n// Nominal type to represent a logical element without needing to allocate any object for instances\nexport interface LogicalElement { LogicalElement__DO_NOT_IMPLEMENT: any }\n","import { RenderBatch, ArrayRange, RenderTreeDiff, ArrayValues, RenderTreeEdit, EditType, FrameType, RenderTreeFrame, RenderTreeDiffReader, RenderTreeFrameReader, RenderTreeEditReader, ArrayRangeReader, ArrayBuilderSegmentReader, ArrayBuilderSegment } from './RenderBatch';\nimport { decodeUtf8 } from './Utf8Decoder';\n\nconst updatedComponentsEntryLength = 4; // Each is a single int32 giving the location of the data\nconst referenceFramesEntryLength = 20; // 1 int for frame type, then 16 bytes for type-specific data\nconst disposedComponentIdsEntryLength = 4; // Each is an int32 giving the ID\nconst disposedEventHandlerIdsEntryLength = 8; // Each is an int64 giving the ID\nconst editsEntryLength = 16; // 4 ints\nconst stringTableEntryLength = 4; // Each is an int32 giving the string data location, or -1 for null\nconst uint64HighPartShift = Math.pow(2, 32);\nconst maxSafeNumberHighPart = Math.pow(2, 21) - 1; // The high-order int32 from Number.MAX_SAFE_INTEGER\n\nexport class OutOfProcessRenderBatch implements RenderBatch {\n  constructor(private batchData: Uint8Array) {\n    const stringReader = new OutOfProcessStringReader(batchData);\n\n    this.arrayRangeReader = new OutOfProcessArrayRangeReader(batchData);\n    this.arrayBuilderSegmentReader = new OutOfProcessArrayBuilderSegmentReader(batchData);\n    this.diffReader = new OutOfProcessRenderTreeDiffReader(batchData);\n    this.editReader = new OutOfProcessRenderTreeEditReader(batchData, stringReader);\n    this.frameReader = new OutOfProcessRenderTreeFrameReader(batchData, stringReader);\n  }\n\n  updatedComponents(): ArrayRange<RenderTreeDiff> {\n    return readInt32LE(this.batchData, this.batchData.length - 20); // 5th-from-last int32\n  }\n\n  referenceFrames(): ArrayRange<RenderTreeFrame> {\n    return readInt32LE(this.batchData, this.batchData.length - 16); // 4th-from-last int32\n  }\n\n  disposedComponentIds(): ArrayRange<number> {\n    return readInt32LE(this.batchData, this.batchData.length - 12); // 3rd-from-last int32\n  }\n\n  disposedEventHandlerIds(): ArrayRange<number> {\n    return readInt32LE(this.batchData, this.batchData.length - 8); // 2th-from-last int32\n  }\n\n  updatedComponentsEntry(values: ArrayValues<RenderTreeDiff>, index: number): RenderTreeDiff {\n    const tableEntryPos = (values as any) + index * updatedComponentsEntryLength;\n    return readInt32LE(this.batchData, tableEntryPos);\n  }\n\n  referenceFramesEntry(values: ArrayValues<RenderTreeFrame>, index: number): RenderTreeFrame {\n    return (values as any) + index * referenceFramesEntryLength as any;\n  }\n\n  disposedComponentIdsEntry(values: ArrayValues<number>, index: number): number {\n    const entryPos = (values as any) + index * disposedComponentIdsEntryLength;\n    return readInt32LE(this.batchData, entryPos);\n  }\n\n  disposedEventHandlerIdsEntry(values: ArrayValues<number>, index: number): number {\n    const entryPos = (values as any) + index * disposedEventHandlerIdsEntryLength;\n    return readUint64LE(this.batchData, entryPos);\n  }\n\n  diffReader: RenderTreeDiffReader;\n\n  editReader: RenderTreeEditReader;\n\n  frameReader: RenderTreeFrameReader;\n\n  arrayRangeReader: ArrayRangeReader;\n\n  arrayBuilderSegmentReader: ArrayBuilderSegmentReader;\n}\n\nclass OutOfProcessRenderTreeDiffReader implements RenderTreeDiffReader {\n  constructor(private batchDataUint8: Uint8Array) {\n  }\n\n  componentId(diff: RenderTreeDiff) {\n    // First int32 is componentId\n    return readInt32LE(this.batchDataUint8, diff as any);\n  }\n\n  edits(diff: RenderTreeDiff) {\n    // Entries data starts after the componentId (which is a 4-byte int)\n    return (diff as any + 4);\n  }\n\n  editsEntry(values: ArrayValues<RenderTreeEdit>, index: number) {\n    return (values as any) + index * editsEntryLength;\n  }\n}\n\nclass OutOfProcessRenderTreeEditReader implements RenderTreeEditReader {\n  constructor(private batchDataUint8: Uint8Array, private stringReader: OutOfProcessStringReader) {\n  }\n\n  editType(edit: RenderTreeEdit) {\n    return readInt32LE(this.batchDataUint8, edit as any); // 1st int\n  }\n\n  siblingIndex(edit: RenderTreeEdit) {\n    return readInt32LE(this.batchDataUint8, edit as any + 4); // 2nd int\n  }\n\n  newTreeIndex(edit: RenderTreeEdit) {\n    return readInt32LE(this.batchDataUint8, edit as any + 8); // 3rd int\n  }\n\n  moveToSiblingIndex(edit: RenderTreeEdit) {\n    return readInt32LE(this.batchDataUint8, edit as any + 8); // 3rd int\n  }\n\n  removedAttributeName(edit: RenderTreeEdit) {\n    const stringIndex = readInt32LE(this.batchDataUint8, edit as any + 12); // 4th int\n    return this.stringReader.readString(stringIndex);\n  }\n}\n\nclass OutOfProcessRenderTreeFrameReader implements RenderTreeFrameReader {\n  constructor(private batchDataUint8: Uint8Array, private stringReader: OutOfProcessStringReader) {\n  }\n\n  // For render frames, the 2nd-4th ints have different meanings depending on frameType.\n  // It's the caller's responsibility not to evaluate properties that aren't applicable to the frameType.\n\n  frameType(frame: RenderTreeFrame) {\n    return readInt32LE(this.batchDataUint8, frame as any); // 1st int\n  }\n\n  subtreeLength(frame: RenderTreeFrame) {\n    return readInt32LE(this.batchDataUint8, frame as any + 4); // 2nd int\n  }\n\n  elementReferenceCaptureId(frame: RenderTreeFrame) {\n    const stringIndex = readInt32LE(this.batchDataUint8, frame as any + 4); // 2nd int\n    return this.stringReader.readString(stringIndex);\n  }\n\n  componentId(frame: RenderTreeFrame) {\n    return readInt32LE(this.batchDataUint8, frame as any + 8); // 3rd int\n  }\n\n  elementName(frame: RenderTreeFrame) {\n    const stringIndex = readInt32LE(this.batchDataUint8, frame as any + 8); // 3rd int\n    return this.stringReader.readString(stringIndex);\n  }\n\n  textContent(frame: RenderTreeFrame) {\n    const stringIndex = readInt32LE(this.batchDataUint8, frame as any + 4); // 2nd int\n    return this.stringReader.readString(stringIndex);\n  }\n\n  markupContent(frame: RenderTreeFrame) {\n    const stringIndex = readInt32LE(this.batchDataUint8, frame as any + 4); // 2nd int\n    return this.stringReader.readString(stringIndex)!;\n  }\n\n  attributeName(frame: RenderTreeFrame) {\n    const stringIndex = readInt32LE(this.batchDataUint8, frame as any + 4); // 2nd int\n    return this.stringReader.readString(stringIndex);\n  }\n\n  attributeValue(frame: RenderTreeFrame) {\n    const stringIndex = readInt32LE(this.batchDataUint8, frame as any + 8); // 3rd int\n    return this.stringReader.readString(stringIndex);\n  }\n\n  attributeEventHandlerId(frame: RenderTreeFrame) {\n    return readUint64LE(this.batchDataUint8, frame as any + 12); // Bytes 12-19\n  }\n}\n\nclass OutOfProcessStringReader {\n  private stringTableStartIndex: number;\n\n  constructor(private batchDataUint8: Uint8Array) {\n    // Final int gives start position of the string table\n    this.stringTableStartIndex = readInt32LE(batchDataUint8, batchDataUint8.length - 4);\n  }\n\n  readString(index: number): string | null {\n    if (index === -1) { // Special value encodes 'null'\n      return null;\n    } else {\n      const stringTableEntryPos = readInt32LE(this.batchDataUint8, this.stringTableStartIndex + index * stringTableEntryLength);\n\n      // By default, .NET's BinaryWriter gives LEB128-length-prefixed UTF-8 data.\n      // This is convenient enough to decode in JavaScript.\n      const numUtf8Bytes = readLEB128(this.batchDataUint8, stringTableEntryPos);\n      const charsStart = stringTableEntryPos + numLEB128Bytes(numUtf8Bytes);\n      const utf8Data = new Uint8Array(\n        this.batchDataUint8.buffer,\n        this.batchDataUint8.byteOffset + charsStart,\n        numUtf8Bytes\n      );\n      return decodeUtf8(utf8Data);\n    }\n  }\n}\n\nclass OutOfProcessArrayRangeReader implements ArrayRangeReader {\n  constructor(private batchDataUint8: Uint8Array) {\n  }\n\n  count<T>(arrayRange: ArrayRange<T>) {\n    // First int is count\n    return readInt32LE(this.batchDataUint8, arrayRange as any);\n  }\n\n  values<T>(arrayRange: ArrayRange<T>) {\n    // Entries data starts after the 'count' int (i.e., after 4 bytes)\n    return arrayRange as any + 4;\n  }\n}\n\nclass OutOfProcessArrayBuilderSegmentReader implements ArrayBuilderSegmentReader {\n  constructor(private batchDataUint8: Uint8Array) {\n  }\n\n  offset<T>(arrayBuilderSegment: ArrayBuilderSegment<T>) {\n    // Not used by the out-of-process representation of RenderBatch data.\n    // This only exists on the ArrayBuilderSegmentReader for the shared-memory representation.\n    return 0;\n  }\n\n  count<T>(arrayBuilderSegment: ArrayBuilderSegment<T>) {\n    // First int is count\n    return readInt32LE(this.batchDataUint8, arrayBuilderSegment as any);\n  }\n\n  values<T>(arrayBuilderSegment: ArrayBuilderSegment<T>): ArrayValues<T> {\n    // Entries data starts after the 'count' int (i.e., after 4 bytes)\n    return arrayBuilderSegment as any + 4;\n  }\n}\n\nfunction readInt32LE(buffer: Uint8Array, position: number): any {\n  return (buffer[position])\n    | (buffer[position + 1] << 8)\n    | (buffer[position + 2] << 16)\n    | (buffer[position + 3] << 24);\n}\n\nfunction readUint32LE(buffer: Uint8Array, position: number): any {\n  return (buffer[position])\n    + (buffer[position + 1] << 8)\n    + (buffer[position + 2] << 16)\n    + ((buffer[position + 3] << 24) >>> 0); // The >>> 0 coerces the value to unsigned\n}\n\nfunction readUint64LE(buffer: Uint8Array, position: number): any {\n  // This cannot be done using bit-shift operators in JavaScript, because\n  // those all implicitly convert to int32\n  const highPart = readUint32LE(buffer, position + 4);\n  if (highPart > maxSafeNumberHighPart) {\n    throw new Error(`Cannot read uint64 with high order part ${highPart}, because the result would exceed Number.MAX_SAFE_INTEGER.`);\n  }\n\n  return (highPart * uint64HighPartShift) + readUint32LE(buffer, position);\n}\n\nfunction readLEB128(buffer: Uint8Array, position: number) {\n  let result = 0;\n  let shift = 0;\n  for (let index = 0; index < 4; index++) {\n    const byte = buffer[position + index];\n    result |= (byte & 127) << shift;\n    if (byte < 128) {\n      break;\n    }\n    shift += 7;\n  }\n  return result;\n}\n\nfunction numLEB128Bytes(value: number) {\n  return value < 128 ? 1\n    : value < 16384 ? 2\n      : value < 2097152 ? 3 : 4;\n}\n","export interface RenderBatch {\n  updatedComponents(): ArrayRange<RenderTreeDiff>;\n  referenceFrames(): ArrayRange<RenderTreeFrame>;\n  disposedComponentIds(): ArrayRange<number>;\n  disposedEventHandlerIds(): ArrayRange<number>;\n\n  updatedComponentsEntry(values: ArrayValues<RenderTreeDiff>, index: number): RenderTreeDiff;\n  referenceFramesEntry(values: ArrayValues<RenderTreeFrame>, index: number): RenderTreeFrame;\n  disposedComponentIdsEntry(values: ArrayValues<number>, index: number): number;\n  disposedEventHandlerIdsEntry(values: ArrayValues<number>, index: number): number;\n\n  diffReader: RenderTreeDiffReader;\n  editReader: RenderTreeEditReader;\n  frameReader: RenderTreeFrameReader;\n  arrayRangeReader: ArrayRangeReader;\n  arrayBuilderSegmentReader: ArrayBuilderSegmentReader;\n}\n\nexport interface ArrayRangeReader {\n  count<T>(arrayRange: ArrayRange<T>): number;\n  values<T>(arrayRange: ArrayRange<T>): ArrayValues<T>;\n}\n\nexport interface ArrayBuilderSegmentReader {\n  offset<T>(arrayBuilderSegment: ArrayBuilderSegment<T>): number;\n  count<T>(arrayBuilderSegment: ArrayBuilderSegment<T>): number;\n  values<T>(arrayBuilderSegment: ArrayBuilderSegment<T>): ArrayValues<T>;\n}\n\nexport interface RenderTreeDiffReader {\n  componentId(diff: RenderTreeDiff): number;\n  edits(diff: RenderTreeDiff): ArrayBuilderSegment<RenderTreeEdit>;\n  editsEntry(values: ArrayValues<RenderTreeEdit>, index: number): RenderTreeEdit;\n}\n\nexport interface RenderTreeEditReader {\n  editType(edit: RenderTreeEdit): EditType;\n  siblingIndex(edit: RenderTreeEdit): number;\n  newTreeIndex(edit: RenderTreeEdit): number;\n  moveToSiblingIndex(edit: RenderTreeEdit): number;\n  removedAttributeName(edit: RenderTreeEdit): string | null;\n}\n\nexport interface RenderTreeFrameReader {\n  frameType(frame: RenderTreeFrame): FrameType;\n  subtreeLength(frame: RenderTreeFrame): number;\n  elementReferenceCaptureId(frame: RenderTreeFrame): string | null;\n  componentId(frame: RenderTreeFrame): number;\n  elementName(frame: RenderTreeFrame): string | null;\n  textContent(frame: RenderTreeFrame): string | null;\n  markupContent(frame: RenderTreeFrame): string;\n  attributeName(frame: RenderTreeFrame): string | null;\n  attributeValue(frame: RenderTreeFrame): string | null;\n  attributeEventHandlerId(frame: RenderTreeFrame): number;\n}\n\nexport interface ArrayRange<T> { ArrayRange__DO_NOT_IMPLEMENT: any }\nexport interface ArrayBuilderSegment<T> { ArrayBuilderSegment__DO_NOT_IMPLEMENT: any }\nexport interface ArrayValues<T> { ArrayValues__DO_NOT_IMPLEMENT: any }\n\nexport interface RenderTreeDiff { RenderTreeDiff__DO_NOT_IMPLEMENT: any }\nexport interface RenderTreeFrame { RenderTreeFrame__DO_NOT_IMPLEMENT: any }\nexport interface RenderTreeEdit { RenderTreeEdit__DO_NOT_IMPLEMENT: any }\n\nexport enum EditType {\n  // The values must be kept in sync with the .NET equivalent in RenderTreeEditType.cs\n  prependFrame = 1,\n  removeFrame = 2,\n  setAttribute = 3,\n  removeAttribute = 4,\n  updateText = 5,\n  stepIn = 6,\n  stepOut = 7,\n  updateMarkup = 8,\n  permutationListEntry = 9,\n  permutationListEnd = 10,\n}\n\nexport enum FrameType {\n  // The values must be kept in sync with the .NET equivalent in RenderTreeFrameType.cs\n  element = 1,\n  text = 2,\n  attribute = 3,\n  component = 4,\n  region = 5,\n  elementReferenceCapture = 6,\n  markup = 8,\n}\n","const nativeDecoder = typeof TextDecoder === 'function'\n  ? new TextDecoder('utf-8')\n  : null;\n\nexport const decodeUtf8: (bytes: Uint8Array) => string\n  = nativeDecoder ? nativeDecoder.decode.bind(nativeDecoder) : decodeImpl;\n\n/* !\nLogic in decodeImpl is derived from fast-text-encoding\nhttps://github.com/samthor/fast-text-encoding\n\nLicense for fast-text-encoding: Apache 2.0\nhttps://github.com/samthor/fast-text-encoding/blob/master/LICENSE\n*/\n\nfunction decodeImpl(bytes: Uint8Array): string {\n  let pos = 0;\n  const len = bytes.length;\n  const out: number[] = [];\n  const substrings: string[] = [];\n\n  while (pos < len) {\n    const byte1 = bytes[pos++];\n    if (byte1 === 0) {\n      break; // NULL\n    }\n\n    if ((byte1 & 0x80) === 0) { // 1-byte\n      out.push(byte1);\n    } else if ((byte1 & 0xe0) === 0xc0) { // 2-byte\n      const byte2 = bytes[pos++] & 0x3f;\n      out.push(((byte1 & 0x1f) << 6) | byte2);\n    } else if ((byte1 & 0xf0) === 0xe0) {\n      const byte2 = bytes[pos++] & 0x3f;\n      const byte3 = bytes[pos++] & 0x3f;\n      out.push(((byte1 & 0x1f) << 12) | (byte2 << 6) | byte3);\n    } else if ((byte1 & 0xf8) === 0xf0) {\n      const byte2 = bytes[pos++] & 0x3f;\n      const byte3 = bytes[pos++] & 0x3f;\n      const byte4 = bytes[pos++] & 0x3f;\n\n      // this can be > 0xffff, so possibly generate surrogates\n      let codepoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0c) | (byte3 << 0x06) | byte4;\n      if (codepoint > 0xffff) {\n        // codepoint &= ~0x10000;\n        codepoint -= 0x10000;\n        out.push((codepoint >>> 10) & 0x3ff | 0xd800);\n        codepoint = 0xdc00 | codepoint & 0x3ff;\n      }\n      out.push(codepoint);\n    } else {\n      // FIXME: we're ignoring this\n    }\n\n    // As a workaround for https://github.com/samthor/fast-text-encoding/issues/1,\n    // make sure the 'out' array never gets too long. When it reaches a limit, we\n    // stringify what we have so far and append to a list of outputs.\n    if (out.length > 1024) {\n      substrings.push(String.fromCharCode.apply(null, out));\n      out.length = 0;\n    }\n  }\n\n  substrings.push(String.fromCharCode.apply(null, out));\n  return substrings.join('');\n}\n","/* eslint-disable @typescript-eslint/camelcase */\nimport '../Platform/Platform';\nimport '../Environment';\nimport { RenderBatch } from './RenderBatch/RenderBatch';\nimport { BrowserRenderer } from './BrowserRenderer';\nimport { toLogicalElement, LogicalElement } from './LogicalElements';\n\ninterface BrowserRendererRegistry {\n  [browserRendererId: number]: BrowserRenderer;\n}\nconst browserRenderers: BrowserRendererRegistry = {};\nlet shouldResetScrollAfterNextBatch = false;\n\nexport function attachRootComponentToLogicalElement(browserRendererId: number, logicalElement: LogicalElement, componentId: number): void {\n  let browserRenderer = browserRenderers[browserRendererId];\n  if (!browserRenderer) {\n    browserRenderer = browserRenderers[browserRendererId] = new BrowserRenderer(browserRendererId);\n  }\n\n  browserRenderer.attachRootComponentToLogicalElement(componentId, logicalElement);\n}\n\nexport function attachRootComponentToElement(elementSelector: string, componentId: number, browserRendererId?: number): void {\n  const element = document.querySelector(elementSelector);\n  if (!element) {\n    throw new Error(`Could not find any element matching selector '${elementSelector}'.`);\n  }\n\n  // 'allowExistingContents' to keep any prerendered content until we do the first client-side render\n  // Only client-side Blazor supplies a browser renderer ID\n  attachRootComponentToLogicalElement(browserRendererId || 0, toLogicalElement(element, /* allow existing contents */ true), componentId);\n}\n\nexport function renderBatch(browserRendererId: number, batch: RenderBatch): void {\n  const browserRenderer = browserRenderers[browserRendererId];\n  if (!browserRenderer) {\n    throw new Error(`There is no browser renderer with ID ${browserRendererId}.`);\n  }\n\n  const arrayRangeReader = batch.arrayRangeReader;\n  const updatedComponentsRange = batch.updatedComponents();\n  const updatedComponentsValues = arrayRangeReader.values(updatedComponentsRange);\n  const updatedComponentsLength = arrayRangeReader.count(updatedComponentsRange);\n  const referenceFrames = batch.referenceFrames();\n  const referenceFramesValues = arrayRangeReader.values(referenceFrames);\n  const diffReader = batch.diffReader;\n\n  for (let i = 0; i < updatedComponentsLength; i++) {\n    const diff = batch.updatedComponentsEntry(updatedComponentsValues, i);\n    const componentId = diffReader.componentId(diff);\n    const edits = diffReader.edits(diff);\n    browserRenderer.updateComponent(batch, componentId, edits, referenceFramesValues);\n  }\n\n  const disposedComponentIdsRange = batch.disposedComponentIds();\n  const disposedComponentIdsValues = arrayRangeReader.values(disposedComponentIdsRange);\n  const disposedComponentIdsLength = arrayRangeReader.count(disposedComponentIdsRange);\n  for (let i = 0; i < disposedComponentIdsLength; i++) {\n    const componentId = batch.disposedComponentIdsEntry(disposedComponentIdsValues, i);\n    browserRenderer.disposeComponent(componentId);\n  }\n\n  const disposedEventHandlerIdsRange = batch.disposedEventHandlerIds();\n  const disposedEventHandlerIdsValues = arrayRangeReader.values(disposedEventHandlerIdsRange);\n  const disposedEventHandlerIdsLength = arrayRangeReader.count(disposedEventHandlerIdsRange);\n  for (let i = 0; i < disposedEventHandlerIdsLength; i++) {\n    const eventHandlerId = batch.disposedEventHandlerIdsEntry(disposedEventHandlerIdsValues, i);\n    browserRenderer.disposeEventHandler(eventHandlerId);\n  }\n\n  resetScrollIfNeeded();\n}\n\nexport function resetScrollAfterNextBatch() {\n  shouldResetScrollAfterNextBatch = true;\n}\n\nfunction resetScrollIfNeeded() {\n  if (shouldResetScrollAfterNextBatch) {\n    shouldResetScrollAfterNextBatch = false;\n\n    // This assumes the scroller is on the window itself. There isn't a general way to know\n    // if some other element is playing the role of the primary scroll region.\n    window.scrollTo && window.scrollTo(0, 0);\n  }\n}\n","import { EventDescriptor } from './BrowserRenderer';\nimport { UIEventArgs } from './EventForDotNet';\n\ntype EventDispatcher = (eventDescriptor: EventDescriptor, eventArgs: UIEventArgs) => void;\n\nlet eventDispatcherInstance: EventDispatcher;\n\nexport function dispatchEvent(eventDescriptor: EventDescriptor, eventArgs: UIEventArgs): void {\n  if (!eventDispatcherInstance) {\n    throw new Error('eventDispatcher not initialized. Call \\'setEventDispatcher\\' to configure it.');\n  }\n\n  return eventDispatcherInstance(eventDescriptor, eventArgs);\n}\n\nexport function setEventDispatcher(newDispatcher: (eventDescriptor: EventDescriptor, eventArgs: UIEventArgs) => Promise<void>): void {\n  eventDispatcherInstance = newDispatcher;\n}\n","import { platform } from '../Environment';\nimport { MethodHandle, System_String, System_Array } from '../Platform/Platform';\nconst httpClientAssembly = 'Microsoft.AspNetCore.Blazor';\nconst httpClientNamespace = `${httpClientAssembly}.Http`;\nconst httpClientTypeName = 'WebAssemblyHttpMessageHandler';\nlet receiveResponseMethod: MethodHandle;\nlet allocateArrayMethod: MethodHandle;\n\n// These are the functions we're making available for invocation from .NET\nexport const internalFunctions = {\n  sendAsync,\n};\n\nasync function sendAsync(id: number, body: System_Array<any>, jsonFetchArgs: System_String) {\n  let response: Response;\n  let responseData: ArrayBuffer;\n\n  const fetchOptions: FetchOptions = JSON.parse(platform.toJavaScriptString(jsonFetchArgs));\n  const requestInit: RequestInit = Object.assign(convertToRequestInit(fetchOptions.requestInit), fetchOptions.requestInitOverrides);\n\n  if (body) {\n    requestInit.body = platform.toUint8Array(body);\n  }\n\n  try {\n    response = await fetch(fetchOptions.requestUri, requestInit);\n    responseData = await response.arrayBuffer();\n  } catch (ex) {\n    dispatchErrorResponse(id, ex.toString());\n    return;\n  }\n\n  dispatchSuccessResponse(id, response, responseData);\n}\n\nfunction convertToRequestInit(blazorRequestInit: BlazorRequestInit) {\n  return {\n    credentials: blazorRequestInit.credentials,\n    method: blazorRequestInit.method,\n    headers: blazorRequestInit.headers.map(item => [item.name, item.value])\n  };\n}\n\nfunction dispatchSuccessResponse(id: number, response: Response, responseData: ArrayBuffer) {\n  const responseDescriptor: ResponseDescriptor = {\n    statusCode: response.status,\n    statusText: response.statusText,\n    headers: [],\n  };\n  response.headers.forEach((value, name) => {\n    responseDescriptor.headers.push({ name: name, value: value });\n  });\n\n  if (!allocateArrayMethod) {\n    allocateArrayMethod = platform.findMethod(\n      httpClientAssembly,\n      httpClientNamespace,\n      httpClientTypeName,\n      'AllocateArray'\n    );\n  }\n\n  // allocate a managed byte[] of the right size\n  const dotNetArray = platform.callMethod(allocateArrayMethod, null, [platform.toDotNetString(responseData.byteLength.toString())]) as System_Array<any>;\n\n  // get an Uint8Array view of it\n  const array = platform.toUint8Array(dotNetArray);\n\n  // copy the responseData to our managed byte[]\n  array.set(new Uint8Array(responseData));\n\n  dispatchResponse(\n    id,\n    platform.toDotNetString(JSON.stringify(responseDescriptor)),\n    dotNetArray,\n    /* errorMessage */ null\n  );\n}\n\nfunction dispatchErrorResponse(id: number, errorMessage: string) {\n  dispatchResponse(\n    id,\n    /* responseDescriptor */ null,\n    /* responseText */ null,\n    platform.toDotNetString(errorMessage)\n  );\n}\n\nfunction dispatchResponse(id: number, responseDescriptor: System_String | null, responseData: System_Array<any> | null, errorMessage: System_String | null) {\n  if (!receiveResponseMethod) {\n    receiveResponseMethod = platform.findMethod(\n      httpClientAssembly,\n      httpClientNamespace,\n      httpClientTypeName,\n      'ReceiveResponse'\n    );\n  }\n\n  platform.callMethod(receiveResponseMethod, null, [\n    platform.toDotNetString(id.toString()),\n    responseDescriptor,\n    responseData,\n    errorMessage,\n  ]);\n}\n\n// Keep these in sync with the .NET equivalent in WebAssemblyHttpMessageHandler.cs\ninterface FetchOptions {\n  requestUri: string;\n  requestInit: BlazorRequestInit;\n  requestInitOverrides: RequestInit;\n}\n\ninterface BlazorRequestInit {\n  credentials: string;\n  headers: Header[];\n  method: string;\n}\n\ninterface ResponseDescriptor {\n  // We don't have BodyText in here because if we did, then in the JSON-response case (which\n  // is the most common case), we'd be double-encoding it, since the entire ResponseDescriptor\n  // also gets JSON encoded. It would work but is twice the amount of string processing.\n  statusCode: number;\n  statusText: string;\n  headers: Header[];\n}\n\ninterface Header {\n  name: string;\n  value: string;\n}\n","import '@dotnet/jsinterop';\nimport { resetScrollAfterNextBatch } from '../Rendering/Renderer';\n\nlet hasRegisteredNavigationInterception = false;\nlet hasRegisteredNavigationEventListeners = false;\n\n// Will be initialized once someone registers\nlet notifyLocationChangedCallback: ((uri: string, intercepted: boolean) => Promise<void>) | null = null;\n\n// These are the functions we're making available for invocation from .NET\nexport const internalFunctions = {\n  listenForNavigationEvents,\n  enableNavigationInterception,\n  navigateTo,\n  getBaseURI: () => document.baseURI,\n  getLocationHref: () => location.href,\n};\n\nfunction listenForNavigationEvents(callback: (uri: string, intercepted: boolean) => Promise<void>) {\n  notifyLocationChangedCallback = callback;\n\n  if (hasRegisteredNavigationEventListeners) {\n    return;\n  }\n\n  hasRegisteredNavigationEventListeners = true;\n  window.addEventListener('popstate', () => notifyLocationChanged(false));\n}\n\nfunction enableNavigationInterception() {\n  if (hasRegisteredNavigationInterception) {\n    return;\n  }\n\n  hasRegisteredNavigationInterception = true;\n\n  document.addEventListener('click', event => {\n    if (event.button !== 0 || eventHasSpecialKey(event)) {\n      // Don't stop ctrl/meta-click (etc) from opening links in new tabs/windows\n      return;\n    }\n\n    // Intercept clicks on all <a> elements where the href is within the <base href> URI space\n    // We must explicitly check if it has an 'href' attribute, because if it doesn't, the result might be null or an empty string depending on the browser\n    const anchorTarget = findClosestAncestor(event.target as Element | null, 'A') as HTMLAnchorElement;\n    const hrefAttributeName = 'href';\n    if (anchorTarget && anchorTarget.hasAttribute(hrefAttributeName)) {\n      const targetAttributeValue = anchorTarget.getAttribute('target');\n      const opensInSameFrame = !targetAttributeValue || targetAttributeValue === '_self';\n      if (!opensInSameFrame) {\n        return;\n      }\n\n      const href = anchorTarget.getAttribute(hrefAttributeName)!;\n      const absoluteHref = toAbsoluteUri(href);\n\n      if (isWithinBaseUriSpace(absoluteHref)) {\n        event.preventDefault();\n        performInternalNavigation(absoluteHref, true);\n      }\n    }\n  });\n}\n\nexport function navigateTo(uri: string, forceLoad: boolean) {\n  const absoluteUri = toAbsoluteUri(uri);\n\n  if (!forceLoad && isWithinBaseUriSpace(absoluteUri)) {\n    // It's an internal URL, so do client-side navigation\n    performInternalNavigation(absoluteUri, false);\n  } else if (forceLoad && location.href === uri) {\n    // Force-loading the same URL you're already on requires special handling to avoid\n    // triggering browser-specific behavior issues.\n    // For details about what this fixes and why, see https://github.com/aspnet/AspNetCore/pull/10839\n    const temporaryUri = uri + '?';\n    history.replaceState(null, '', temporaryUri);\n    location.replace(uri);\n  } else {\n    // It's either an external URL, or forceLoad is requested, so do a full page load\n    location.href = uri;\n  }\n}\n\nfunction performInternalNavigation(absoluteInternalHref: string, interceptedLink: boolean) {\n  // Since this was *not* triggered by a back/forward gesture (that goes through a different\n  // code path starting with a popstate event), we don't want to preserve the current scroll\n  // position, so reset it.\n  // To avoid ugly flickering effects, we don't want to change the scroll position until the\n  // we render the new page. As a best approximation, wait until the next batch.\n  resetScrollAfterNextBatch();\n\n  history.pushState(null, /* ignored title */ '', absoluteInternalHref);\n  notifyLocationChanged(interceptedLink);\n}\n\nasync function notifyLocationChanged(interceptedLink: boolean) {\n  if (notifyLocationChangedCallback) {\n    await notifyLocationChangedCallback(location.href, interceptedLink);\n  }\n}\n\nlet testAnchor: HTMLAnchorElement;\nfunction toAbsoluteUri(relativeUri: string) {\n  testAnchor = testAnchor || document.createElement('a');\n  testAnchor.href = relativeUri;\n  return testAnchor.href;\n}\n\nfunction findClosestAncestor(element: Element | null, tagName: string) {\n  return !element\n    ? null\n    : element.tagName === tagName\n      ? element\n      : findClosestAncestor(element.parentElement, tagName);\n}\n\nfunction isWithinBaseUriSpace(href: string) {\n  const baseUriWithTrailingSlash = toBaseUriWithTrailingSlash(document.baseURI!); // TODO: Might baseURI really be null?\n  return href.startsWith(baseUriWithTrailingSlash);\n}\n\nfunction toBaseUriWithTrailingSlash(baseUri: string) {\n  return baseUri.substr(0, baseUri.lastIndexOf('/') + 1);\n}\n\nfunction eventHasSpecialKey(event: MouseEvent) {\n  return event.ctrlKey || event.shiftKey || event.altKey || event.metaKey;\n}\n","/* (ignored) */","/* (ignored) */"],"sourceRoot":""}